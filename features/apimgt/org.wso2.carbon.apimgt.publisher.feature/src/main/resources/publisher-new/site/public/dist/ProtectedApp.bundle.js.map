{"version":3,"sources":["webpack:///./source/src/app/components/Shared/redirecting.css?4ba4","webpack:///./source/src/app/components/Shared/redirecting.css","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./source/src/app/components/Base/Errors/PageNotfound.jsx","webpack:///./source/src/app/components/Base/Errors/ResourceNotFound.jsx","webpack:///./source/src/app/data/Resource.js","webpack:///./source/src/app/data/api.js","webpack:///./source/src/app/components/Shared/Message.jsx","webpack:///./source/src/app/components/Shared/Alert.jsx","webpack:///./source/src/app/components/Apis/Create/Components/APICreateBase.jsx","webpack:///./source/src/app/data/APIValidation.js","webpack:///./source/src/app/components/Apis/Create/Components/SelectPolicies.jsx","webpack:///./source/src/app/components/Apis/Create/Components/DefaultAPIForm.jsx","webpack:///./source/src/app/data/APIProduct.js","webpack:///./source/src/app/components/Apis/Create/Default/APICreateDefault.jsx","webpack:///./source/src/app/components/Apis/Create/Default/APICreateWrapper.jsx","webpack:///./source/src/app/components/Shared/VerticalDivider.jsx","webpack:///./source/src/app/components/Shared/CustomIcon.jsx","webpack:///./source/src/app/components/Apis/Create/Components/APIProductCreateTopMenu.jsx","webpack:///./source/src/app/components/Apis/Create/Default/APIProductCreateWrapper.jsx","webpack:///./source/src/app/components/Shared/DropZoneLocal.jsx","webpack:///./source/src/app/components/Apis/Create/OpenAPI/Steps/ProvideOpenAPI.jsx","webpack:///./source/src/app/components/Apis/Create/OpenAPI/ApiCreateOpenAPI.jsx","webpack:///./source/src/app/data/Wsdl.js","webpack:///./source/src/app/components/Apis/Create/WSDL/Steps/ProvideWSDL.jsx","webpack:///./source/src/app/components/Apis/Create/WSDL/ApiCreateWSDL.jsx","webpack:///./source/src/app/components/Apis/Create/GraphQL/Steps/ProvideGraphQL.jsx","webpack:///./source/src/app/components/Apis/Create/GraphQL/ApiCreateGraphQL.jsx","webpack:///./source/src/app/components/Apis/Create/WebSocket/ApiCreateWebSocket.jsx","webpack:///./source/src/app/components/Apis/Create/ApiCreate.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/Background.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/ImageGenerator.jsx","webpack:///./source/src/app/data/ScopeValidation.jsx","webpack:///./source/src/app/components/Apis/Details/components/DeleteApiButton.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/ThumbnailView.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/ApiThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/DocThumb.jsx","webpack:///./source/src/app/components/Shared/ConfirmDialog.jsx","webpack:///./source/src/app/components/Shared/InteractiveButton.jsx","webpack:///./source/src/app/components/Shared/Redirecting.jsx","webpack:///./source/src/app/components/Shared/InlineMessage.jsx","webpack:///./source/src/app/components/Shared/MenuButton.jsx","webpack:///./source/src/app/components/Apis/Listing/components/APICreateMenu.jsx","webpack:///./source/src/app/components/Apis/Listing/SampleAPI/SamplePetStore.js","webpack:///./source/src/app/components/Apis/Listing/SampleAPI/SampleAPI.jsx","webpack:///./source/src/app/components/Apis/Listing/SampleAPI/apiProduct.js","webpack:///./source/src/app/components/Apis/Listing/SampleAPI/math.js","webpack:///./source/src/app/components/Apis/Listing/SampleAPI/calculator.js","webpack:///./source/src/app/components/Apis/Listing/SampleAPI/SampleAPIProductWizard.jsx","webpack:///./source/src/app/components/Apis/Listing/SampleAPI/SampleAPIProduct.jsx","webpack:///./source/src/app/components/Apis/Listing/components/TopMenu.jsx","webpack:///./source/src/app/components/Apis/Listing/TableView/TableView.jsx","webpack:///./source/src/app/components/Apis/Listing/Listing.jsx","webpack:///./source/src/app/components/Shared/LeftMenuItem.jsx","webpack:///./source/src/app/components/Shared/RedirectToLogin.jsx","webpack:///./source/src/app/components/Shared/AppContext.jsx","webpack:///./source/src/app/components/Apis/Details/components/ApiContext.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Resources.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Operations.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/ProductResources.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/BusinessInformation.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Policies.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Endpoints.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Configuration.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Overview.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/AuthorizationHeader.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/DefaultVersion.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/ResponseCaching.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/Transports.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/Description.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/AccessControl.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/StoreVisibility.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/CORSConfiguration.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/Tags.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/SchemaValidation.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/APISecurity/components/ApplicationLevel.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration/Certificates.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/APISecurity/components/TransportLevel.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/APISecurity/APISecurity.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/Configuration.jsx","webpack:///./source/src/app/data/ApiPermissionValidation.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/LifeCycleImage.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/LifeCycleUpdate.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/LifeCycleHistory.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/LifeCycle.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/CreateEditForm.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/GoToEdit.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/Create.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/MarkdownEditor.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/TextEditor.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/Edit.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/Delete.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/Download.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/Listing.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/View.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/EditContent.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/index.jsx","webpack:///./source/src/app/components/Apis/Details/Operations/Operation.jsx","webpack:///./source/src/app/components/Apis/Details/Operations/Operations.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/MimeTypes.js","webpack:///./source/src/app/components/Apis/Details/Resources/SelectContentType.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/InlineEditableField.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/Resource.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/Resources.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/ProductResourcesView.jsx","webpack:///./source/src/app/components/Base/Header/headersearch/SearchParser.js","webpack:///./source/src/app/components/Apis/Details/ProductResources/MethodView.jsx","webpack:///./source/src/app/components/Apis/Details/ProductResources/ProductResourcesEdit.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/NewEndpointCreate.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GenericEndpoint.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GenericEndpointAdd.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/EndpointListing.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/endpointUtils.js","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration/EndpointSecurity.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/LoadBalanceConfig.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/AdvancedConfig/AdvanceEndpointConfig.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/EndpointOverview.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/Prototype/GenericResource.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/Prototype/InlineEndpoints.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/Prototype/PrototypeEndpoints.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/Endpoints.jsx","webpack:///./source/src/app/components/Apis/Details/Environments/Environments.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/SubscriptionsBlock.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/SubscriptionsTable.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/SubscriptionPoliciesManage.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/TenantAutocomplete.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/SubscriptionAvailability.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/Subscriptions.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/CommentAdd.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/CommentEdit.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/CommentOptions.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/CommentReply.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/Comment.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/Comments.jsx","webpack:///./source/src/app/components/Apis/Details/Scopes/CreateScope.jsx","webpack:///./source/src/app/components/Apis/Details/Overview/APIPropertyField.jsx","webpack:///./source/src/app/components/Apis/Details/Scopes/EditScope.jsx","webpack:///./source/src/app/components/Apis/Details/Scopes/Delete.jsx","webpack:///./source/src/app/components/Apis/Details/Scopes/Scopes.jsx","webpack:///./source/src/app/components/Apis/Details/Scopes/index.jsx","webpack:///./source/src/app/components/Apis/Details/Security/AddPolicy.jsx","webpack:///./source/src/app/components/Apis/Details/Security/SecurityOverview.jsx","webpack:///./source/src/app/components/Apis/Details/Security/index.jsx","webpack:///./source/src/app/components/Apis/Details/APIDefinition/APIDefinition.jsx","webpack:///./source/src/app/components/Apis/Details/components/CreateNewVersionButton.jsx","webpack:///./source/src/app/components/Apis/Details/components/APIDetailsTopMenu.jsx","webpack:///./source/src/app/components/Apis/Details/MediationPolicies/Engaged/EngagedInMediationPolicy.jsx","webpack:///./source/src/app/components/Apis/Details/MediationPolicies/Edit/EditInMediationPolicy.jsx","webpack:///./source/src/app/components/Apis/Details/MediationPolicies/InFlow.jsx","webpack:///./source/src/app/components/Apis/Details/MediationPolicies/Edit/EditOutMediationPolicy.jsx","webpack:///./source/src/app/components/Apis/Details/MediationPolicies/Engaged/EngagedOutMediationPolicy.jsx","webpack:///./source/src/app/components/Apis/Details/MediationPolicies/OutFlow.jsx","webpack:///./source/src/app/components/Apis/Details/MediationPolicies/Engaged/EngagedFaultMediationPolicy.jsx","webpack:///./source/src/app/components/Apis/Details/MediationPolicies/Edit/EditFaultMediationPolicy.jsx","webpack:///./source/src/app/components/Apis/Details/MediationPolicies/FaultFlow.jsx","webpack:///./source/src/app/components/Apis/Details/MediationPolicies/Overview.jsx","webpack:///./source/src/app/components/Apis/Details/BusinessInformation/BusinessInformation.jsx","webpack:///./source/src/app/components/Apis/Details/Properties/EditableRow.jsx","webpack:///./source/src/app/components/Apis/Details/Properties/Properties.jsx","webpack:///./source/src/app/components/Apis/Details/Monetization/BusinessPlans.jsx","webpack:///./source/src/app/components/Apis/Details/Monetization/index.jsx","webpack:///./source/src/app/components/Apis/Details/ExternalStores/ExternalStores.jsx","webpack:///./source/src/app/components/Apis/Details/NewVersion/NewVersion.jsx","webpack:///./source/src/app/components/Apis/Details/index.jsx","webpack:///./source/src/app/components/Apis/Apis.jsx","webpack:///./source/src/app/components/Base/Footer/Footer.jsx","webpack:///./source/src/app/components/Base/index.jsx","webpack:///./source/src/app/components/Base/Header/avatar/Avatar.jsx","webpack:///./source/src/app/components/Base/Header/headersearch/SearchUtils.jsx","webpack:///./source/src/app/components/Base/Header/headersearch/HeaderSearch.jsx","webpack:///./source/src/app/components/Base/Header/navbar/GlobalNavLinks.jsx","webpack:///./source/src/app/components/Base/Header/navbar/GlobalNavBar.jsx","webpack:///./source/src/app/components/Base/Header/index.jsx","webpack:///./source/src/app/components/Shared/AppErrorBoundary.jsx","webpack:///./source/src/app/ProtectedApp.jsx","webpack:///./source/src/app/components/Shared/Download.js"],"names":["content","__webpack_require__","module","i","options","transform","locals","exports","push","map","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","Object","resolve","NotFound","props","react_default","a","createElement","className","lib","defaultMessage","style","color","location","pathname","propTypes","PropType","shape","string","isRequired","ResourceNotFound","response","message","Typography","variant","gutterBottom","title","body","statusText","more","defaultProps","PropTypes","oneOfType","instanceOf","FormattedMessage","Resource","_classCallCheck","this","client","APIClientFactory","getAPIClient","Utils","getCurrentEnvironment","data","arguments","length","undefined","requestContentType","API","name","version","context","kwargs","_this","api_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","properties","key","deepFreeze","isDefaultVersion","gatewayEnvironments","transport","visibility","endpointConfig","endpoint_type","sandbox_endpoints","url","production_endpoints","apiType","CONSTS","_data","prototype","hasOwnProperty","openAPIData","payload","_this57","apiClient","file","Content-Type","then","apis","Validation","validateOpenAPIDefinition","_requestMetaData","promise_validate","_this58","callback","_this59","post_apis_validate_graphql_schema","type","params","query","_i","_Object$entries","entries","_Object$entries$_i","_slicedToArray","value","concat","get_apis","obj","_i2","_Object$entries2","_Object$entries2$_i","get_api_products","get_search","_this60","get_apis__apiId_","apiId","_this61","get_api_products__apiProductId_","apiProductId","_this62","delete_apis__apiId_","_this63","delete_api_products__apiProductId_","policyLevel","_this64","getAllThrottlingPolicies","get_endpoint_certificates","certificateFile","endpoint","alias","post_endpoint_certificates","certificate","tier","post_apis__apiId__client_certificates","_this65","get_apis__apiId__client_certificates","get_apis__apiId__client_certificates__alias_","delete_apis__apiId__client_certificates__alias_","get_endpoint_certificates__alias_","delete_endpoint_certificates__alias_","_this66","apisApiIdMediationPoliciesGet","policyFile","_this67","apisApiIdMediationPoliciesPost","toLowerCase","mediationPolicyFile","seqId","_this68","apisApiIdMediationPoliciesMediationPolicyIdGet","mediationPolicyId","_this69","apisApiIdMediationPoliciesMediationPolicyIdDelete","_this70","apisApiIdMediationPoliciesMediationPolicyIdContentPut","_this71","apisApiIdMediationPoliciesMediationPolicyIdContentGet","_this72","getAllGlobalMediationPolicies","_this73","getGlobalMediationPolicyContent","_this74","getAllExternalStores","_this75","getAllPublishedExternalStoresByAPI","externalStoreIds","_this76","publishAPIToExternalStores","resource","userExcludes","copy","excludes","_toConsumableArray","prop","includes","apiData","promise_create","_this2","constructor","post_apis_import_definition","post_apis","_this3","getDataFromSpecFields","additionalProperties","JSON","stringify","importOpenAPIDefinition","openAPIUrl","_this4","_this5","promisedPolicies","policies","policy","getThrottlingPolicyByName","policyName","Promise","all","serviceURL","Array","isArray","_this6","spec","definitions","forEach","apiAttribute","openAPIVersion","_this7","APIProduct","post_api_products","api_data","_this8","implementationType","_this9","promise_get","_this10","validateAPI","resp","console","log","ok","err","validateDocument","_this11","promise_copy_api","post_apis_copy_api","newVersion","defaultVersion","_this12","get_apis__apiId__swagger","_this13","get_apis__apiId__graphql_schema","_this14","get_apis__apiId__scopes","get_settings","_this15","promisePolicies","get_apis__apiId__subscription_policies","_this16","promiseMonetization","get_apis__apiId__monetization","post_apis__apiId__monetize","api_id","scopeName","_this17","promise_get_Scope_detail","get_apis__apiId__scopes__name_","_this18","put_apis__apiId__scopes__name_","_this19","post_apis__apiId__scopes","scope_name","_this20","delete_apis__apiId__scopes__name_","swagger","_this21","endpointId","put_apis__apiId__swagger","graphQLSchema","_this22","schemaDefinition","put_apis__apiId__graphql_schema","_this23","apiDefinition","_this24","_this25","_this26","promise_lc_get","get_apis__apiId__lifecycle_state","_this27","promise_lc_history_get","get_apis__apiId__lifecycle_history","checkedItems","_this28","action","lifecycleChecklist","post_apis_change_lifecycle","state","_this29","promise_lc_update","_this30","promise_deletePendingTask","delete_apis_apiId_lifecycle_lifecycle_pending_task","updatedProperties","updatedAPI","_objectSpread","toJSON","put_apis__apiId_","api","put_api_products__apiProductId_","_this31","offset","limit","promise_subscription","get_subscriptions","_this32","post_subscriptions_block_subscription","subscriptionId","blockState","_this33","post_subscriptions_unblock_subscription","_this34","get_external_resources_services","_this35","post_apis__apiId__documents","docId","fileToDocument","_this36","documentId","post_apis__apiId__documents__documentId__content","sourceType","inlineContent","_this37","_this38","Accept","get_apis__apiId__documents__documentId__content","_this39","promise_get_all","get_apis__apiId__documents","_this40","put_apis__apiId__documents__documentId_","_this41","get_apis__apiId__documents__documentId_","document_id","_this42","delete_apis__apiId__documents__documentId_","_this43","get_labels","wsdlUrl","_this44","post_apis_validate_definition","_this45","_this46","post_apis_import_graphql_schema","_this47","get_apis__apiId__wsdl","get_threat_protection_policies","get_threat_protection_policies__policyId_","policyId","post_apis__apiId__threat_protection_policies","delete_apis__apiId__threat_protection_policies","_this48","put_apis__apiId__dedicated_gateway","_this49","get_apis__apiId__dedicated_gateway","_this50","get_apis__apiId__thumbnail","role","Roles","validateSystemRole","roleId","validateUserRole","imageFile","_this51","updateAPIThumbnail","commentInfo","_this52","promise","post_apis__apiId__comments","error","_this53","get_apis__apiId__comments","commentId","_this54","delete_apis__apiId__comments__commentId_","_this55","put_apis__apiId__comments__commentId_","_this56","getTenantsByState","freeze","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","display","alignItems","MySnackbarContentWrapper","classes","onClose","other","_objectWithoutProperties","Icon","SnackbarContent","_extends","clsx","aria-describedby","IconButton","aria-label","onClick","Close_default","Message","handleClose","Snackbar","anchorOrigin","vertical","horizontal","open","func","oneOf","node","createMuiTheme","Configurations","themes","light","Alert","duration","Alert_classCallCheck","defaultTop","count","defaultDuration","remove","bind","top","messageInstance","promisedInstance","_getMessageInstance","instance","notice","closable","MuiThemeProvider_default","removeNotice","Notification","newInstance","transitionName","zIndex","right","marginLeft","position","INFO","SUCCESS","ERROR","WARN","LOADING","Shared_Alert","msg","show","loading","configs","config","APICreateBase","children","Grid","container","item","sm","md","Paper","elevation","element","roleSchema","Joi","extend","joi","base","rules","validate","userRoleSchema","validateUSerRole","apiSchema","documentSchema","object","definition","apiName","regex","apiVersion","apiContext","uri","systemRole","userRole","apiParameter","isAPIParameterExist","apiDocument","document","isDocumentPresent","SelectPolicies","onChange","selectedPolicies","multiple","required","helperText","_useState2","SelectPolicies_slicedToArray","useState","setPolicies","useEffect","list","TextField","fullWidth","select","label","SelectProps","renderValue","selected","join","margin","MenuItem","dense","disableGutters","displayName","Checkbox","checked","ListItemText","secondary","description","CircularProgress","multiSelect","useStyles","mandatoryStar","actualContext","_ref","initialContext","indexOf","replace","DefaultAPIForm","onValidate","isAPIProduct","DefaultAPIForm_slicedToArray","validity","setValidity","field","nameValidity","APIValidation","isValid","DefaultAPIForm_objectSpread","contextValidity","versionValidity","urlValidity","endpointURL","Boolean","isFormValid","_ref2","_ref3","reduce","acc","cVal","noValidate","autoComplete","autoFocus","Fragment","InputProps","onBlur","_ref4","target","_ref7","_ref5","_ref6","_ref8","rel","href","direction","justify","APIProduct_classCallCheck","APIProduct_getPrototypeOf","getType","APIProduct_assertThisInitialized","APIProduct_slicedToArray","APIProduct_toConsumableArray","APIProduct_objectSpread","get_api_products__apiProductId__thumbnail","put_api_products__apiProductId__thumbnail","post_api_products__apiProductId__documents","get_api_products__apiProductId__documents","productId","put_api_products__apiProductId__documents__documentId_","get_api_products__apiProductId__documents__documentId_","post_api_products__apiProductId__documents__documentId__content","get_api_products__apiProductId__documents__documentId__content","delete_api_products__apiProductId__documents__documentId_","put_api_products__apiProductId__swagger","get_api_products__apiProductId__swagger","APICreateDefault","_useReducer2","APICreateDefault_slicedToArray","useReducer","currentState","inputAction","APICreateDefault_objectSpread","APICreateDefault_defineProperty","formValidity","apiInputs","inputsDispatcher","isCreating","setCreating","event","_event$target","Button","disabled","saveProduct","apiProduct","history","save","size","react_router_dom","to","withRouter","APICreateWrapper","APICreateWrapper_classCallCheck","APICreateWrapper_getPrototypeOf","oasVersion","valid","empty","alreadyExists","handleSubmit","APICreateWrapper_assertThisInitialized","inputChange","handleOASVersionChange","Component","preventDefault","currentAPI","newAPI","redirectURL","setState","oldState","validUpdated","changes","Default_APICreateDefault","VerticalDivider","height","divider","withStyles","borderRight","CustomIcon","width","strokeColor","xmlns","viewBox","fill","stroke","strokeLinejoin","d","strokeWidth","cx","cy","r","fillOpacity","CustomIcon_extends","strokeMiterlimit","strokeDasharray","strokeOpacity","fillRule","strokeLinecap","strokeDashoffset","paintOrder","number","APIProductDetailsTopMenu","strokeColorMain","getContrastText","background","paper","root","backLink","KeyboardArrowLeft_default","backIcon","backText","Shared_VerticalDivider","mainIconWrapper","mainTitleWrapper","align","rightIcon","unit","button","marginBottom","buttonRight","alignSelf","ListingWrapper","paddingTop","paddingLeft","borderBottom","grey","A200","mainTitle","APICreateMenu","flexGrow","cursor","fontFamily","typography","textDecoration","paddingRight","withTheme","APIProductCreateWrapper","APIProductCreateWrapper_classCallCheck","APIProductCreateWrapper_getPrototypeOf","APIProductCreateWrapper_assertThisInitialized","inline","timeout","endpointType","endpointSecurity","enabled","username","password","APIProductCreateTopMenu","baseStyle","flex","flexDirection","padding","borderWidth","borderRadius","borderColor","borderStyle","outline","transition","activeStyle","acceptStyle","rejectStyle","DropZoneLocal","files","onDrop","showFilesList","File","dropZoneObject","useDropzone","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","acceptedFiles","filesList","path","bytesParam","si","bytes","thresh","Math","abs","units","u","toFixed","humanFileSize","useMemo","DropZoneLocal_objectSpread","bool","arrayOf","array","ProvideOpenAPI","isFileInput","inputType","ProvideOpenAPI_slicedToArray","_useState4","isValidating","setIsValidating","FormControl","component","FormLabel","RadioGroup","FormControlLabel","control","Radio","pop","validFile","validateOpenAPIByFile","_response$body","isValidFile","ProvideOpenAPI_objectSpread","inputValue","placeholder","InputLabelProps","shrink","validateOpenAPIByUrl","_response$body2","isValidURL","endAdornment","InputAdornment","ApiCreateOpenAPI","ApiCreateOpenAPI_slicedToArray","wizardStep","setWizardStep","_objectSpread3","ApiCreateOpenAPI_objectSpread","ApiCreateOpenAPI_defineProperty","handleOnValidate","Stepper","activeStep","Step","StepLabel","step","importOpenAPIByFile","importOpenAPIByUrl","Wsdl","input","validateWSDLDefinition","returnContent","APIs","importWSDLDefinition","ProvideWSDL","isArchiveInput","isGenerateRESTAPI","ProvideWSDL_slicedToArray","isError","FormHelperText","SOAPToREST","ApiCreateWSDL_slicedToArray","ApiCreateWSDL_objectSpread","ApiCreateWSDL_defineProperty","ProvideGraphQL","ProvideGraphQL_slicedToArray","validateGraphQLFile","graphQLInfo","ProvideGraphQL_objectSpread","ApiCreateGraphQL","ApiCreateGraphQL_slicedToArray","ApiCreateGraphQL_objectSpread","ApiCreateGraphQL_defineProperty","_apiData","newApi","importGraphQL","uuid","ApiCreateWebSocket","Default_APICreateWrapper","ApiCreateWebSocket_extends","ApiCreate","react_router","ApiCreateSwagger","ApiCreateWSDL","PageNotFound","Background","colorPair","thumbnailBoxChild","rects","j","Background_extends","sub","toString","x","y","svgImage","prime","objectFit","ImageGenerator","PureComponent","IconElement","_this$props","fixedIcon","category","backgroundIndex","str","ImageGenerator_typeof","colorPairs","custom","thumbnail","backgrounds","MaterialIcons","categories","icons","randomIconIndex","charCodeAt","iconWrapper","Icon_Icon","ImageGenerator_Background","iconSettings","& span","left","resourcePath","APIS","API_PRODUCTS","SINGLE_API","SINGLE_API_PRODUCT","API_SWAGGER","API_WSDL","API_GW_CONFIG","API_THUMBNAIL","API_COPY","API_LC_HISTORY","API_CHANGE_LC","API_LC","API_LC_PENDING_TASK","API_DEF","API_VALIDATE_DEF","API_DOCS","API_DOC","API_DOC_CONTENT","EXPORT_APIS","IMPORT_APIS","SUBSCRIPTION","SUBSCRIPTIONS","BLOCK_SUBSCRIPTION","UNBLOCK_SUBSCRIPTION","POLICIES","POLICY","ENDPOINTS","ENDPOINT","LABLES","WORKFLOW","SERVICE_DISCOVERY","resourceMethod","POST","PUT","GET","DELETE","ScopeValidation","ScopeValidation_classCallCheck","ScopeValidation_possibleConstructorReturn","ScopeValidation_getPrototypeOf","React","AuthManager","hasScopes","haveScope","DeleteApiButton","DeleteApiButton_classCallCheck","DeleteApiButton_getPrototypeOf","handleApiDelete","DeleteApiButton_assertThisInitialized","handleRequestClose","handleRequestOpen","openMenu","deleteProduct","status","_this$props2","deleteHandler","ScopeValidation_ScopeValidation","deleteWrapper","onKeyDown","Delete_default","linkText","Dialog","Slide","DialogTitle","DialogContent","DialogContentText","values","DialogActions","delete","justifyContent","textAlign","deleteButtonColor","windowURL","window","URL","webkitURL","Transition","ThumbnailView_extends","ThumbnailView","ThumbnailView_classCallCheck","ThumbnailView_getPrototypeOf","ThumbnailView_defineProperty","ThumbnailView_assertThisInitialized","intl","fileObj","_this$state","selectedTab","selectedIcon","formatMessage","newIconJson","blob","Blob","uploadThumbnail","hex","handleClick","_this$props$api","Api","getAPIProductThumbnail","getAPIThumbnail","headers","iconJson","parse","createObjectURL","revokeObjectURL","acceptedFile","_this$props$api2","addAPIProductThumbnail","addAPIThumbnail","preview","_this$state2","isEditable","_this$state3","view","overviewPath","apiUUID","src","alt","media","components_ImageGenerator_ImageGenerator","ButtonBase","focusRipple","thumb","thumbBackdrop","thumbButton","Edit_default","suppressLinkStyles","TransitionComponent","aria-labelledby","disableBackdropClick","maxWidth","fullScreen","square","popupHeader","group","handleChange","xs","imageContainer","dist_es","accept","dropzone","activeClassName","acceptDrop","rejectClassName","rejectDrop","dropFile","dropZoneWrapper","dropIcon","imageGenWrapper","subtitleWrapper","subtitle","Select","native","handleSelectionChange","cat","maxHeight","overflow","FindCategoryKeys","iconView","selectIcon","react_color_lib","onChangeComplete","handleChangeComplete","index","backgroundSelection","selectBackground","actionBox","saveDisableEnable","injectIntl","border","red","text","&:hover","& $thumbBackdrop","bottom","common","black","white","marginTop","& > div","boxShadow","APIThumb","ApiThumb_classCallCheck","ApiThumb_getPrototypeOf","isHover","toggleMouseOver","ApiThumb_assertThisInitialized","updateData","lifeCycleStatus","Card","onMouseOver","onFocus","onMouseOut","raised","card","CardMedia","CardContent","apiDetails","providerText","provider","CardActions","apiActions","Chip","components_DeleteApiButton","deleteProgress","textTransform","DocThumb","DocThumb_classCallCheck","DocThumb_getPrototypeOf","DocThumb_assertThisInitialized","doc","docDetails","docActions","ConfirmDialog","labelCancel","labelOk","Action","OK","CANCEL","InteractiveButton","buttonProps","disableFocusRipple","disableRipple","mini","buttonClassName","classNames","buttonSuccess","wrapper","InteractiveButton_extends","buttonProgress","Redirecting","lg","Progress","InlineMessage","expanded","InlineMessage_extends","iconItem","& span.material-icons","paddingBottom","MenuButton","MenuButton_classCallCheck","MenuButton_getPrototypeOf","handleToggle","MenuButton_assertThisInitialized","anchorEl","contains","menuList","MenuButton_extends","buttonRef","aria-owns","aria-haspopup","Popper","placement","disablePortal","TransitionProps","Grow","transformOrigin","ClickAwayListener","onClickAway","links","createTypes","List","ListItem","Divider","Shared_MenuButton","APICreateMenu_extends","getSwagger","paths","/order","post","x-auth-type","x-throttling-tier","parameters","schema","$ref","in","responses","201","Location","400","415","/menu","get","200","items","304","406","/order/{orderId}","put","format","404","412","schemes","produces","ErrorListItem","price","image","Order","customerName","delivered","address","pizzaType","creditCardNumber","quantity","orderId","moreInfo","consumes","license","contact","email","SampleAPI","SampleAPI_classCallCheck","SampleAPI_getPrototypeOf","published","deploying","sampleApi","handleDeploySample","SampleAPI_assertThisInitialized","createSampleAPI","swaggerUpdatePromise","sampleAPI","updateSwagger","getSampleSwagger","publish","tags","securityScheme","businessInformation","businessOwner","businessOwnerEmail","technicalOwner","technicalOwnerEmail","operations","verb","throttlingPolicy","authType","Redirect_default","Shared_InlineMessage","contentWrapper","head","actions","components_APICreateMenu","buttonLeft","Create_default","GetApp_default","headline","fontWeight","getApiProductPayload","calculatorApiId","mathApiId","thumbnailUri","visibleRoles","visibleTenants","subscriptionAvailability","subscriptionAvailableTenants","newprop","additionalProp2","additionalProp3","mathPayload","calculatorPayload","chipHeadWrapperDefault","chipHeadWrapperDone","productSampleProgess","backgroundMain","chipHeadWrapper","chipAvatarDone","backgroundChip","chipAvatarDefault","resourceChipColors","progress","chipHeadTitle","whiteSpace","SampleAPIProductWizard","_classNames","_classNames2","_classNames3","_classNames4","_classNames5","_classNames6","setStep","productPath","SampleAPIProductWizard_defineProperty","Avatar_Avatar","LinearProgress","Box","m","deployButton","SampleAPIProduct_slicedToArray","setProductPath","SampleAPI_SampleAPIProductWizard","restApi","calculatorPromise","create","mathPromise","sampleProductPayload","prod","TopMenu","setListType","listType","getTitleForArtifactType","createButton","List_default","GridOn_default","TableView","TableView_classCallCheck","TableView_getPrototypeOf","TableView_defineProperty","TableView_assertThisInitialized","themeAdditions","muiTheme","overrides","MUIDataTable","tableRoot","& tbody","MUIDataTableBodyCell","flexWrap","& thead","assign","xhrRequest","total","pagination","apisAndApiProducts","notFound","paginationSufix","storedPagination","localStorage","getItem","page","rowsPerPage","setItem","setLocalStorage","_assertThisInitialize","composeQuery","queryString","search","defaultApiView","getLocalStorage","getData","prevProps","_this$props3","columns","filter","customBodyRender","tableMeta","updateValue","tableViewObj","rowData","artifact","rowIndex","sort","filterType","responsive","serverSide","onTableChange","tableState","changePage","selectableRows","onChangeRowsPerPage","numberOfRows","customRowRender","dataIndex","ImageGenerator_DocThumb","ApiThumb","print","download","viewColumns","customToolbar","Errors_ResourceNotFound","components_TopMenu","contentInside","styles_MuiThemeProvider","getMuiTheme","dist_default","SampleAPIProduct","Listing_SampleAPI_SampleAPI","& > div[class^=\"MuiPaper-root-\"]","Listing","Listing_TableView_TableView","LeftMenuItem","LeftMenuItem_slicedToArray","setSelected","leftMenu","iconSize","leftMenuIconSize","ditectCurrentMenu","test1","RegExp","test2","match","listen","leftLInk","LeftMenuItem_defineProperty","leftLink_IconLeft","appBarSelected","cloneElement","leftLink_Icon","noIcon","leftLInkText","leftLInkText_IconLeft","leftLInkText_NoText","appBar","LeftMenu","leftMenuWidth","caption","diplay","app","doRedirectToLogin","RedirectToLogin","AppContext","createContext","useAppContext","useContext","AppContextProvider","Provider","APIContext","APIProvider","withAPI","WrappedComponent","HOCWithAPI","Consumer","ApiContext_extends","RenderMethodBase","method","chipColor","chipTextColor","RenderMethod","Resources","Resources_classCallCheck","Resources_possibleConstructorReturn","Resources_getPrototypeOf","parentClasses","titleWrapper","heading","innerKey","HTTP_METHODS","operationChipColor","Operations","ApiContext","Operations_defineProperty","specialGap","Table","TableRow","TableCell","Operations_RenderMethod","methodLower","ProductResources","apiResources","operation","resourceRow","ProductResources_RenderMethod","BusinessInformation","notConfigured","Policies","showEndpoint","getProductionEndpoint","getSandboxEndpoint","Endpoints","Configuration","loadEndpoints","securitySchemeMap","oauth2","basic_auth","mutualssl","NewOverview_Endpoints","ImageGenerator_ThumbnailView","workflowStatus","Tooltip","tooltip","htmlTooltip","disableHoverListener","helpButton","HelpOutline_default","helpIcon","createdTime","moment","calendar","interactive","fromNow","lastUpdatedTime","NewOverview_BusinessInformation","accessControl","accessControlRoles","NewOverview_Policies","tag","chip","Overview","leftSideWrapper","NewOverview_Configuration","NewOverview_Operations","NewOverview_ProductResources","NewOverview_Resources","getResourcesClassForAPIs","Overview_objectSpread","mixins","gutters","checkItem","imageWrapper","resourceTitle","ListRoot","minWidth","pxToRem","& b","fontWeightMedium","lifecycleWrapper","lifecycleIcon","AuthorizationHeader","configDispatcher","isRestricted","authorizationHeader","DefaultVersion","ResponseCaching","Switch","responseCachingEnabled","Transports","FormGroup","Description","multiline","rows","AccessControl","AccessControl_slicedToArray","roleValidity","setRoleValidity","userRoleValidity","setUserRoleValidity","_useState6","invalidRoles","setInvalidRoles","InputLabel","htmlFor","Input","ChipInput_default","alwaysShowPlaceholder","blurBehavior","Error_default","onAdd","systemRolePromise","base64url","encode","userRolePromise","AccessControl_toConsumableArray","chipRenderer","onDelete","existingRole","float","StoreVisibility","StoreVisibility_slicedToArray","isPublic","StoreVisibility_toConsumableArray","CORSConfiguration","corsConfiguration","isCorsEnabled","corsConfigurationEnabled","isAllowAllOrigins","accessControlAllowOrigins","_ref2$target","accessControlAllowOrigin","CORSConfiguration_toConsumableArray","oldOrigin","accessControlAllowHeaders","accessControlAllowHeader","oldHeader","accessControlAllowMethods","accessControlAllowMethod","oldMethod","accessControlAllowCredentials","Tags","Tags_toConsumableArray","oldTag","SchemaValidation","SchemaValidation_classCallCheck","SchemaValidation_getPrototypeOf","isOpen","setIsOpen","SchemaValidation_assertThisInitialized","enableSchemaValidation","ApplicationLevel","haveMultiLevelSecurity","mandatoryValue","DEFAULT_API_SECURITY_OAUTH2","API_SECURITY_BASIC_AUTH","API_SECURITY_MUTUAL_SSL","API_SECURITY_OAUTH_BASIC_AUTH_MANDATORY","_ref$target","_ref3$target","row","labelPlacement","dropzoneStyles","Certificates","certificates","uploadCertificate","deleteCertificate","isMutualSSLEnabled","Certificates_slicedToArray","setCertificate","certificateList","setCertificateList","setAlias","_useState8","setPolicy","_useState10","setEndpoint","_useState12","uploadCertificateOpen","setUploadCertificateOpen","_useState14","anchor","details","openCertificateDetails","setOpenCertificateDetails","_useState16","certificateToDelete","setCertificateToDelete","closeCertificateUpload","certificatesHeader","cert","ListItemAvatar","ListItemSecondaryAction","edge","certAlias","getClientCertificateStatus","currentTarget","getCertificateStatus","showCertificateDetails","addCertificateBtn","certificateAlias","certDetailsHeader","subject","uploadCertDialogHeader","uploadedFile","fileinput","TransportLevel","TransportLevel_slicedToArray","clientCertificates","setClientCertificates","getAllClientCertificates","API_SECURITY_MUTUAL_SSL_MANDATORY","GeneralConfiguration_Certificates","addClientCertificate","tmpCertificates","TransportLevel_toConsumableArray","deleteClientCertificate","APISecurity","_props$api","components_TransportLevel","itemPadding","arrowForwardIcon","arrowBackIcon","copyAPIConfig","cacheTimeout","Configuration_toConsumableArray","_useContext","updateAPI","Configuration_slicedToArray","isUpdating","setIsUpdating","configAction","nextState","Configuration_objectSpread","Configuration_defineProperty","newState","noMandatoryOAuthBasicAuth","noMandatoryMutualSSL","apiConfig","paperHeight","innerHeight","minHeight","SchemaValidation_SchemaValidation","ArrowForward_default","ArrowBack_default","ApiPermissionValidation","checkingPermissionType","userPermissions","permissionType","READ","UPDATE","MANAGE_SUBSCRIPTION","LifeCycleImage","startsWith","isolation","mixBlendMode","highLightMe","lineHeight","letterSpacing","wordSpacing","clipRule","LifeCycleUpdate","LifeCycleUpdate_classCallCheck","LifeCycleUpdate_getPrototypeOf","updateLifeCycleState","LifeCycleUpdate_assertThisInitialized","checkList","updateLcState","handleUpdate","lifecycleState","error_response","getAttribute","privateJetModeEnabled","updateLCStateOfAPI","lcState","handleChangeCheckList","is_workflow_pending","lcMap","Map","set","lifeCycleImage","LifeCycle_LifeCycleImage","buttonsWrapper","defaultValue","availableTransitions","transition_state","stateButton","data-value","contextType","LifeCycleHistory","table","TableHead","firstCol","TableBody","lcHistory","entry","previousState","postState","scope","avatar","Person_default","personIcon","user","previous","updatedTime","LifeCycle","LifeCycle_classCallCheck","LifeCycle_getPrototypeOf","LifeCycle_assertThisInitialized","promised_api","promised_lcState","getLcState","promised_lcHistory","getLcHistory","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","checkItems","Symbol","iterator","next","done","LifeCycle_LifeCycleUpdate","historyHead","LifeCycle_LifeCycleHistory","contentAreaWidth","CreateEditForm","CreateEditForm_classCallCheck","CreateEditForm_getPrototypeOf","CreateEditForm_defineProperty","CreateEditForm_assertThisInitialized","summary","sourceUrl","otherTypeName","restAPI","docPromise","addDocument","updateDocument","disableName","getDocument","_doc$body","apiNotFound","_React$createElement","_React$createElement2","addNewOther","FormControlOdd","formControlFirst","changeType","formControlLabel","typeTextWrapper","formControl","changeSource","setDisable","leftMenuTextStyle","radioGroup","expansionPanel","GoToEdit","_React$useState2","GoToEdit_slicedToArray","setOpen","urlPrefix","listingPath","docContentEditPath","Create","Create_slicedToArray","newDoc","setNewDoc","createEditForm","useRef","titleLink","Documents_CreateEditForm","innerRef","promiseWrapper","addFileToDocument","getDocumentsList","Documents_GoToEdit","addNewWrapper","addNewHeader","h6","MarkdownEditor_extends","MarkdownEditor","showAtOnce","MarkdownEditor_slicedToArray","setCode","toggleOpen","updateDoc","getInlineContentOfDocument","docName","addInlineContentToDocument","splitWrapper","react_monaco_editor_lib_default","language","selectOnLineNumbers","newCode","editorDidMount","editor","monaco","focus","markdownViewWrapper","react_markdown_default","source","overflowY","TextEditor_extends","TextEditor","TextEditor_slicedToArray","EditorState","createEmpty","editorState","setEditorState","blocksFromHTML","convertFromHTML","ContentState","createFromBlockArray","contentBlocks","entityMap","createWithContent","contentToSave","draftToHtml","convertToRaw","getCurrentContent","react_draft_wysiwyg","wrapperClassName","editorClassName","onEditorStateChange","newEditorState","Edit_extends","Edit","Edit_slicedToArray","Delete","Delete_slicedToArray","runAction","deleteDoc","deleteDocument","Download","getFileForDocument","fileName","contentDisposition","matches","exec","contentType","navigator","msSaveBlob","downloadUrl","aTag","appendChild","click","setTimeout","downloadFile","LinkGenerator","Listing_classCallCheck","Listing_getPrototypeOf","docs","showAddDocs","toggleAddDocs","Listing_assertThisInitialized","getDocuments","errorResponse","errorData","messageTxt","actionTable","Documents_MarkdownEditor","Documents_Edit","Documents_Delete","Documents_TextEditor","Documents_Download","AddCircle_default","buttonIcon","Documents_Create","& td","& td:first-child","messageBox","& button","View","View_slicedToArray","setDoc","loadContentForDoc","process","leftCell","react_safe_html_lib_default","html","displayURL","displayURLLink","docTitle","docBadge","EditContent_slicedToArray","_props$history","_props$history$locati","isEmpty","Documents","exact","EditContent","DocCreate","Operation","Operation_classCallCheck","Operation_getPrototypeOf","isSecurity","handleScopeChange","Operation_assertThisInitialized","handlePolicyChange","newoperation","Operation_objectSpread","scopes","Operation_toConsumableArray","handleUpdateList","apiPolicies","chipActive","dropDown","fieldName","inputProps","tempScope","auth","textField","active","link","listItem","resourceRoot","deleteButton","pathDisplay","descriptionWrapper","scopeSelect","descriptionWrapperUp","addParamRow","propsForm","deleteLink","verticalAlign","Operations_classCallCheck","Operations_getPrototypeOf","operationList","Operations_assertThisInitialized","updateOperations","newOperation","updatedList","update","resourceNotFoundMessage","Operations_Operation","buttonMain","addResource","expansionPanelDetails","mimetypes","suggestions","renderSuggestion","suggestion","itemProps","isHighlighted","highlightedIndex","isSelected","selectedItem","SelectContentType_extends","SelectContentType","SelectContentType_classCallCheck","SelectContentType_getPrototypeOf","SelectContentType_defineProperty","SelectContentType_assertThisInitialized","keyCode","slice","SelectContentType_toConsumableArray","splice","isNotCreator","downshift_esm","getItemProps","inputValue2","selectedItem2","ref","SelectContentType_objectWithoutProperties","SelectContentType_objectSpread","inputRef","inputRoot","inputInput","renderInput","startAdornment","tabIndex","clickable","handleInputChange","handleKeyDown","deburr","trim","inputLength","keep","getSuggestions","InlineEditableField","InlineEditableField_classCallCheck","InlineEditableField_getPrototypeOf","InlineEditableField_defineProperty","InlineEditableField_assertThisInitialized","editable","newValue","initValue","editInlineToggle","saveField","current_state","fieldValue","saveFieldCallback","fieldIndex","onSubmit","defaultValues","val","textArea","CheckCircle_default","Cancel_default","initText","menu","Resource_classCallCheck","Resource_getPrototypeOf","Resource_defineProperty","Resource_assertThisInitialized","newPropName","deleteChecked","addRemoveToDeleteList","methodData","security","OAuth2Security","visible","propsSubmitHandler","toggleMethodData","deleteResource","changeContentTypes","handleAuthTypeChange","onRef","handleMethodChangeInSwaggerRoot","tempMethod","updatePath","defaultParams","multiLevelFieldName","split","tmpPath","checkState","forceUpdate","contentTypes","handleDeleteCheck","Resources_InlineEditableField","summery","Resources_SelectContentType","selectWidth","onChangePropName","param","deleteParam","Resources_Resources_classCallCheck","Resources_Resources_getPrototypeOf","Resources_defineProperty","Resources_Resources_assertThisInitialized","tmpMethods","pathDeleteList","childResources","toggleDeleteCheck","pathValue","debug","allChecked","tmpPaths","indexesToDelete","showAddResource","showPolicy","apiThrottlingPolicy","selectedPolicy","tmpResourceName","api_uuid","addResources","onChangeInput","updateResources","handleCheckAll","deleteSelected","advancedPolicyTypeChange","checkedValues","handleScopeChangeInSwaggerRoot","tempScopes","isAuthorize","defaultGet","defaultPost","defaultDelete","defaultHead","existingPathVale","patch","cloneDeep","tmpSwagger","Resources_objectSpread","newPaths","getResponse","deleteRef","itemAlreadyExisted","resourceNotFountMessage","toggleAddResource","toggleAssignPolicy","VpnKey_default","option","toUpperCase","rightDataColum","that","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","ExpandMore_default","ExpansionPanelDetails","Resources_Resource","ProductResourcesView","ProductResourcesView_classCallCheck","ProductResourcesView_possibleConstructorReturn","ProductResourcesView_getPrototypeOf","apiResourcesDetails","filteredPaths","cur","SearchParser","userQuery","modifiedSearchQuery","contentArr","term","sepIndex","s","n1","MethodView","useTheme","searchWrapper","apiWrapper","leftMost","rightMost","colTitle","treeItemMain","treeItemMainWrapper","treeItem","& .material-icons","hr","methodView","middleText","selectedApi","selectedTitle","buttonWrapper","textDecorate","selectedApiDescription","messageWrapper","tootBar","& a","inactiveIcon","ProductResourcesEdit","apiCopy","ProductResourcesEdit_slicedToArray","allApis","setAllApis","setNotFound","searchText","setSearchText","selectedApiPaths","setSelectedApiPaths","setSelectedApi","setApiResources","updating","setUpdating","apiRestClient","filterAPIs","composeQueryJSON","addPropsToSelectedApiPaths","latestApiResources","methodObj","resourceFound","resourcekey","apiResource","operationKey","allreadyAdded","getApiSwagger","apiSelected","updateResourceTree","resourceToAdd","inputApiResources","updateStateHere","newApiResources","newResource","apiFound","indexA","operationFound","indexB","updateCheckBox","prevSelectedApiPaths","ProductResourcesEdit_objectSpread","addSelectedResourcesToTree","addAll","apiObj","labelId","ListItemIcon","ProductResources_MethodView","treeViewRoot","apiObjOperations","operationObj","NewEndpointCreate","generateEndpointConfig","NewEndpointCreate_slicedToArray","endpointImplType","setImplType","endpointTypes","inlineMessageContainer","endpointTypeCard","cardContent","cardActions","borderTop","GenericEndpoint","editEndpoint","setAdvancedConfigOpen","deleteEndpoint","readOnly","GenericEndpoint_slicedToArray","serviceUrl","setServiceUrl","endpointInputWrapper","iconButton","GenericEndpointAdd","addEndpoint","GenericEndpointAdd_slicedToArray","setError","EndpointListing","apiEndpoints","epType","failOvers","addNewEndpoint","removeEndpoint","EndpointListing_slicedToArray","setEndpointType","endpoints","setEndpoints","selectedRef","listingWrapper","Endpoints_GenericEndpointAdd","ep","Endpoints_GenericEndpoint","epTypeWrapper","epTypeName","epConfig","epInput","leftArrow","leftArrowLight","dialogHeader","listItemOdd","&:focus","getEndpointTypeProperty","createEndpointConfig","tmpEndpointConfig","failOver","template_not_supported","implementation_status","accessKey","secretKey","EndpointSecurity","securityInfo","onChangeEndpointAuth","EndpointSecurity_slicedToArray","endpointSecurityInfo","setEndpointSecurityInfo","authTypes","fullwidth","EndpointSecurity_objectSpread","advancedConfigWrapper","credentialsContainer","GeneralConfiguration","handleToggleEndpointSecurity","handleEndpointSecurityChange","handleEndpointTypeSelect","GeneralConfiguration_slicedToArray","isConfigExpanded","setConfigExpand","endpointCertificates","setEndpointCertificates","epTypeSubHeading","setEpTypeSubHeading","endpointTypeKey","getEndpointTypeSubHeading","getEndpointCertificates","apply","endpointUtils_toConsumableArray","sandbox_failovers","production_failovers","endpointsToList","filteredCertificates","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","generalConfigPanel","aria-controls","configHeaderContainer","secondaryHeading","hidden","generalConfigContent","endpointConfigSection","endpointTypeSelect","Collapse","GeneralConfiguration_EndpointSecurity","addCertificate","GeneralConfiguration_toConsumableArray","deleteEndpointCertificate","flexBasis","flexShrink","algorithms","sessionManagementOps","defaultTemplateObj","algoClassName","algoCombo","sessionManagement","sessionTimeOut","LoadBalanceConfig","handleLBConfigChange","closeLBConfigDialog","LoadBalanceConfig_slicedToArray","lbConfig","setLbConfigObject","algoClassNameError","setAlgoClassNameError","tmpLBConfig","LoadBalanceConfig_objectSpread","handleFieldChange","LoadBalanceConfig_defineProperty","algo","configButtonContainer","MenuProps","PaperProps","itemHeight","AdvanceEndpointConfig","advanceConfig","isSOAPEndpoint","onSaveAdvanceConfig","onCancel","AdvanceEndpointConfig_slicedToArray","optimize","actionDuration","actionSelect","factor","retryDelay","retryErroCode","retryTimeOut","suspendDuration","suspendErrorCode","suspendMaxDuration","advanceConfigObj","setAdvanceConfig","errorCodes","actionItems","messageTypes","optimizeOptions","AdvanceEndpointConfig_objectSpread","handleConfigFieldChange","di","AdvanceEndpointConfig_defineProperty","configContainer","configSubContainer","subTitle","autoWidth","messageType","advanceDialogActions","EndpointOverview","onChangeAPI","EndpointOverview_slicedToArray","setEpConfig","isLBConfigOpen","setLBConfigOpen","advanceConfigOptions","setAdvancedConfigOptions","prodEndpoints","getEndpointType","EndpointOverview_objectSpread","modifiedEndpoint","endpointConfigCopy","endpointTypeProperty","newURL","endpointTemplate","epConfigProperty","endpointList","onChangeEndpointCategory","isAddressEndpoint","currentEndpointConfig","getEndpointTemplateByType","toggleAdvanceConfig","advanceEPConfig","endpointInfo","getAdvanceConfig","endpointConfigProperty","indexToRemove","tmpEndpoints","EndpointOverview_defineProperty","overviewWrapper","Endpoints_GeneralConfiguration","selectedKey","selectedType","generatedEndpointConfig","endpointContainer","endpointsWrapperLeft","sandboxHeading","endpointName","defaultEndpointWrapper","endpointsWrapperRight","endpointsTypeSelectWrapper","endpointTypesSelectWrapper","addLabel","Endpoints_EndpointListing","configDialogHeader","Endpoints_LoadBalanceConfig","AdvancedConfig_AdvanceEndpointConfig","selectedEndpoints","endpointTypesWrapper","listing","borderRightStyle","borderRightWidth","GenericResource","scriptContent","prototypeResourceHeader","resourcePathContainer","genericResourceContent","xMediationScriptProperty","defaultScript","InlineEndpoints","updatePaths","onScriptChange","mediationScript","script","Prototype_GenericResource","endpointImplementationTypes","PrototypeEndpoints","modifyAPI","swaggerDef","PrototypeEndpoints_slicedToArray","endpointImplementationType","setImplementationType","endpointUrl","setEndpointUrl","prototypeEndpointSelectorWrapper","implementationMethodHeader","tmpApi","PrototypeEndpoints_objectSpread","prototypeEndpointsWrapper","Prototype_InlineEndpoints","genericEndpointWrapper","defaultSwagger","Endpoints_slicedToArray","apiObject","setModifiedAPI","endpointImplementation","setEndpointImplementation","setSwagger","endpointValidity","setAPIEndpointsValid","apiClone","implType","Endpoints_NewEndpointCreate","Endpoints_objectSpread","implOption","getEndpointConfigByImpl","endpointsContainer","Prototype_PrototypeEndpoints","implementation_method","swaggerObj","Endpoints_EndpointOverview","errorMessageContainer","endpointValidityMessage","buttonSection","getOwnPropertyNames","Environments","settings","Environments_slicedToArray","Environments_toConsumableArray","setGatewayEnvironments","environment","env","serverUrl","http","https","blockType","BLOCK_ALL","BLOCK_PRODUCTION","SubscriptionsBlock","SubscriptionsBlock_classCallCheck","SubscriptionsBlock_getPrototypeOf","SubscriptionsBlock_defineProperty","subscriptionStatus","SubscriptionsBlock_assertThisInitialized","blockAll","blockProduction","blockAllSubs","blockProductionSubs","unblockSubs","_this$setState","newBlockAll","newBlockProduction","tableHeaders","SubscriptionTablePagination","onChangePage","FirstPage_default","ceil","KeyboardArrowRight_default","max","LastPage_default","SubscriptionsTable","SubscriptionsTable_classCallCheck","SubscriptionsTable_getPrototypeOf","subscriptions","totalSubscription","searchQuery","rowsPerPageOptions","emptyColumnHeight","formatSubscriptionStateString","SubscriptionsTable_assertThisInitialized","blockSubscription","blockProductionOnly","unblockSubscription","handleChangePage","handleChangeRowsPerPage","filterSubscriptions","fetchSubscriptionData","blockSubscriptions","messages","defineMessages","errorMessage","unblockSubscriptions","emptyRows","min","searchDiv","searchRoot","InputBase","searchInput","searchIconButton","Search_default","tableColumnSize","tableColumnSize2","applicationInfo","subscriber","Subscriptions_SubscriptionsBlock","colSpan","TableFooter","TablePagination","ActionsComponent","noDataMessage","& th","SubscriptionPoliciesManage","SubscriptionPoliciesManage_classCallCheck","SubscriptionPoliciesManage_getPrototypeOf","subscriptionPolicies","updateInProgress","SubscriptionPoliciesManage_assertThisInitialized","res","updatedSelectedPolicies","SubscriptionPoliciesManage_toConsumableArray","subscriptionPoliciesPaper","grid","gridLabel","TenantAutocomplete_objectWithoutProperties","TenantAutocomplete_extends","TenantAutocomplete_objectSpread","suggestionProps","DownshiftMultiple","setTenantList","TenantAutocomplete_slicedToArray","setInputValue","_React$useState4","setSelectedItem","handleDelete","newSelectedItem","TenantAutocomplete_toConsumableArray","getLabelProps","_getInputProps","_ref$showEmpty","showEmpty","IntegrationDownshift","setsuggestions","TENANT_STATE_ACTIVE","result","newSuggestions","tenant","domain","textControl","selectEmpty","subscriptionAvailabilityPaper","saveButton","SimpleSelect","SubscriptionAvailability_slicedToArray","tenantList","availability","setValues","inputLabel","_React$useState6","labelWidth","setLabelWidth","isSpecificTenants","current","offsetWidth","oldValues","SubscriptionAvailability_objectSpread","SubscriptionAvailability_defineProperty","displayEmpty","availabilityValue","availableTenantsList","Subscriptions","Subscriptions_slicedToArray","tenants","setTenants","Subscriptions_SubscriptionsTable","Subscriptions_SubscriptionPoliciesManage","CommentAdd","CommentAdd_classCallCheck","CommentAdd_getPrototypeOf","commentText","currentLength","CommentAdd_assertThisInitialized","handleClickAddComment","handleClickCancel","handleCategoryChange","filterCommentToAddReply","toggleShowReply","commentToFilter","parentCommentId","allComments","commentsUpdate","comment","addComment","newComment","addedComment","findIndex","replies","cancelButton","zeroMinWidth","maxLength","maxCommentLength","commentIcon","unig","CommentEdit","CommentEdit_classCallCheck","CommentEdit_getPrototypeOf","CommentEdit_assertThisInitialized","handleClickUpdateComment","filterCommentToUpdate","filterCommentToUpdateReply","toggleShowEdit","commentToEdit","updateComment","updatedComment","replyIndex","CommentOptions","CommentOptions_classCallCheck","CommentOptions_getPrototypeOf","showAddComment","CommentOptions_assertThisInitialized","showEditComment","handleClickOpen","editIndex","timestamp","localDate","Date","toLocaleDateString","day","month","year","toLocaleTimeString","hour","minute","_this$props4","canDelete","createdBy","getUser","adminRole","canModify","entryPoint","Grid_default","verticalSpace","disable","time","displayDate","disableColor","overflowWrap","CommentReply","CommentReply_classCallCheck","CommentReply_getPrototypeOf","openDialog","deleteComment","keyCount","getKey","CommentReply_assertThisInitialized","handleClickDeleteComment","handleShowEdit","handleConfirmDialog","filterRemainingComments","filterCommentToDelete","commentIdOfCommentToDelete","parentCommentIdOfCommentToDelete","remainingComments","remainingReplies","comments","AccountBox_default","noWrap","Comments_CommentEdit","CommentReply_extends","Comments_CommentOptions","Comment","Comment_classCallCheck","Comment_getPrototypeOf","Comment_assertThisInitialized","handleShowReply","reverse","Comment_extends","Comments_CommentAdd","Comments_CommentReply","Comments","Comments_classCallCheck","Comments_getPrototypeOf","totalComments","startCommentsToDisplay","updateCommentList","Comments_assertThisInitialized","handleExpandClick","handleLoadMoreComments","getAllComments","commentList","commentsLimit","newStart","difference","newTotal","ArrowDropDownCircleOutlined_default","aria-expanded","titleSub","unmountOnExit","Comments_Comment","loadMoreLink","ArrowDropDown_default","CreateScope","CreateScope_classCallCheck","CreateScope_getPrototypeOf","CreateScope_assertThisInitialized","validRoles","invalidRolesArray","invalid","apiScopes","apiScope","addScope","validateScopeName","handleScopeNameInput","validateScopeDescription","handleRoleAddition","handleRoleDeletion","bindings","aScope","updateProperties","promisedApiUpdate","exist","find","test","_this$state4","CreateScope_toConsumableArray","_this$state5","titleGrid","helpText","hint","extraPadding"," & .MuiGrid-item","APIPropertyField","EditScope","EditScope_classCallCheck","EditScope_getPrototypeOf","thisScope","EditScope_objectSpread","updateScope","EditScope_assertThisInitialized","handleInputs","topics","Overview_APIPropertyField","react_tagsinput_react_tagsinput_default","onlyUnique","buttonSave","buttonCancel","Scopes_Delete_slicedToArray","confirm","op","setOpenLocal","deleteScope","Scopes","Scopes_classCallCheck","Scopes_possibleConstructorReturn","Scopes_getPrototypeOf","editUrl","Scopes_Delete","scopesList","resources","Scope","Details_Scopes_Scopes","Scopes_CreateScope","Scopes_EditScope","AddPolicy","getThreatProtectionPolicy","formattedPolicy","getThreatProtectionPolicies","currentApi","addThreatProtectionPolicyToApi","n","addJsonContent","formatPolicy","handlePolicyAdd","toggleShowAddPolicy","SecurityOverview","SecurityOverview_classCallCheck","SecurityOverview_getPrototypeOf","SecurityOverview_defineProperty","SecurityOverview_assertThisInitialized","showAddPolicy","updatePolicyData","policyIds","threatProtectionPolicies","updatedPolicies","associatedApi","deleteThreatProtectionPolicyFromApi","Security_AddPolicy","deletePolicy","tableLayout","Security","EditorDialog","lazy","APIDefinition","APIDefinition_classCallCheck","APIDefinition_getPrototypeOf","openEditor","graphQL","convertTo","APIDefinition_assertThisInitialized","handleNo","handleOk","closeEditor","hasJsonStructure","getConvertToFormat","onChangeFormatClick","openUpdateConfirmation","updateSwaggerDefinition","validateAndUpdateApiDefinition","validateAndImportSchema","updateGraphQLAPIDefinition","getSchema","json2yaml","reader","FileReader","onload","readAsText","formattedString","yaml","load","_response$obj","specFormat","safeLoad","SwaggerParser","APIDefinition_typeof","updatedContent","APIDefinition_extends","swaggerContent","toFormat","parsedContent","downloadLink","isGraphQL","encodeURIComponent","topBar","EditRounded_default","CloudUploadRounded_default","CloudDownloadRounded_default","converterWrapper","smoothScrolling","wordWrap","react","fallback","swaggerEditorWrapper","CreateNewVersionButton","createNewVersionWrapper","createNewVersion","LibraryAdd_default","createNewVersionButtonColor","APIDetailsTopMenu","isVisibleInStore","break","infoItem","origin","storeContext","viewInStoreLauncher","Launch_default","components_CreateNewVersionButton","buttonClass","EngagedInMediationPolicy","engagedPolicyFile","itemWrapper","engagedPlicyFile","paperRoot","EditInMediationPolicy","updateMediationPolicy","EditInMediationPolicy_slicedToArray","globalInMediationPolicies","setGlobalInMediationPolicies","inSeqCustom","setInSeqCustom","NONE","mediationPolicies","seq","selectedPolicyFile","setSelectedPolicyFile","getGlobalMediationPolicies","EditInMediationPolicy_toConsumableArray","getMediationPolicies","newPolicy","addMediationPolicy","handleDownload","policyToDownload","downloadGlobalMediationPolicyContent","getMediationPolicyContent","downloadCustomMediationPolicyContent","policyToDelete","deleteMediationPolicy","deleteCustomMediationPolicy","InFlow","inMediationPolicy","InFlow_slicedToArray","setEngagedPolicyFile","setEditable","inPolicy","Edit_EditInMediationPolicy","Engaged_EngagedInMediationPolicy","EditOutMediationPolicy","EditOutMediationPolicy_slicedToArray","globalOutMediationPolicies","setGlobalOutMediationPolicies","outSeqCustom","setOutSeqCustom","EditOutMediationPolicy_toConsumableArray","EngagedOutMediationPolicy","OutFlow","outMediationPolicy","OutFlow_slicedToArray","outPolicy","Edit_EditOutMediationPolicy","Engaged_EngagedOutMediationPolicy","EngagedFaultMediationPolicy","EditFaultMediationPolicy","EditFaultMediationPolicy_slicedToArray","globalFaultMediationPolicies","setGlobalFaultMediationPolicies","faultSeqCustom","setFaultSeqCustom","EditFaultMediationPolicy_toConsumableArray","FaultFlow","faultMediationPolicy","FaultFlow_slicedToArray","faultPolicy","Edit_EditFaultMediationPolicy","Engaged_EngagedFaultMediationPolicy","inFlowMediationPolicy","outFlowMediationPolicy","faultFlowMediationPolicy","Overview_slicedToArray","inPolicyName","setInPolicyName","outPolicyName","setOutPolicyName","faultPolicyName","setFaultPolicyName","updateInMediationPolicy","updateOutMediationPolicy","updateFaultMediationPolicy","MediationPolicies_InFlow","MediationPolicies_OutFlow","MediationPolicies_FaultFlow","saveAPI","BusinessInformation_classCallCheck","BusinessInformation_getPrototypeOf","BusinessInformation_defineProperty","BusinessInformation_assertThisInitialized","_this$props$api$busin","addProperty","EditableRow","oldKey","oldValue","apiAdditionalProperties","EditableRow_slicedToArray","newKey","setKey","setValue","editMode","setEditMode","validateEmpty","itemValue","saveRow","Save_default","DeleteForever_default","Properties","additionalPropertiesTemp","Properties_slicedToArray","setAdditionalProperties","showAddProperty","setShowAddProperty","propertyKey","setPropertyKey","propertyValue","setPropertyValue","toggleAddProperty","additionalPropertiesCopy","oldRow","newRow","handleAddToList","Properties_EditableRow","Properties_extends","renderAdditionalProperties","BusinessPlans","BusinessPlans_classCallCheck","BusinessPlans_getPrototypeOf","monetizedPolices","monetizationQuery","BusinessPlans_assertThisInitialized","getSubscriptionPolicies","filteredPolicies","tierPlan","getMonetization","policiesList","monetizationAttributes","rightDataColumn","Monetization","Monetization_classCallCheck","Monetization_getPrototypeOf","Monetization_defineProperty","Monetization_assertThisInitialized","monStatus","property","getMonetizationData","getSettings","configureMonetizationToApi","monetizationAttribute","Monetization_BusinessPlans","overflowX","viewInExStoreLink","StyledTableCell","ExternalStores","ExternalStores_slicedToArray","allExternalStores","setAllExternalStores","publishedExternalStores","setPublishedExternalStores","useIntl","externalStoresEnabled","getPublishedExternalStores","publishedStoreIds","store","reason","ExternalStores_toConsumableArray","successfulStores","CreateNewVersion","NewVersion_classCallCheck","NewVersion_getPrototypeOf","NewVersion_defineProperty","NewVersion_assertThisInitialized","isDefaultVersionBool","createNewAPIVersion","redirectToReferrer","helper","handleVersionChange","handleDefaultVersionChange","Details","Details_classCallCheck","Details_getPrototypeOf","setAPI","Details_assertThisInitialized","setAPIProduct","subPaths","Details_slicedToArray","subPathKey","subPath","matched","matchPath","apiProdUUID","pathPrefix","Shared_LeftMenuItem","Code_default","VerticalSplit_default","pageLocation","settingsContext","PageNotfound","redirectUrl","resourceNotFoundMessageText","titleMessage","bodyMessage","environmentLabel","leftMenuIconMainSize","leftLInkMain","Build_default","GamesOutlined_default","PersonPinCircleOutlined_default","getLeftMenuItemForAPIType","Autorenew_default","LibraryBooks_default","Business_default","RssFeed_default","LocalAtm_default","Store_default","components_APIDetailsTopMenu","from","BASE","OVERVIEW_PRODUCT","NewOverview_Overview","OVERVIEW","API_DEFINITION","Details_APIDefinition_APIDefinition","API_DEFINITION_PRODUCT","SCHEMA_DEFINITION","LIFE_CYCLE","Details_LifeCycle_LifeCycle","CONFIGURATION","Configuration_Configuration","CONFIGURATION_PRODUCT","Details_Endpoints_Endpoints","ENVIRONMENTS","OPERATIONS","Details_Operations_Operations","RESOURCES_PRODUCT","Resources_ProductResourcesView","RESOURCES_PRODUCT_EDIT","ProductResources_ProductResourcesEdit","RESOURCES","Details_Resources_Resources","SCOPES","Details_Scopes","SCOPES_PRODUCT","DOCUMENTS","Details_Documents","DOCUMENTS_PRODUCT","Subscriptions_Subscriptions","SECURITY","Details_Security","COMMENTS","Details_Comments_Comments","BUSINESS_INFO","Details_BusinessInformation_BusinessInformation","BUSINESS_INFO_PRODUCT","PROPERTIES","Properties_Properties","PROPERTIES_PRODUCT","NEW_VERSION","NewVersion","MONETIZATION","Details_Monetization","EXTERNAL_STORES","MEDIATION_POLICIES","MediationPolicies_Overview","BASE_PRODUCT","leftMenuActive","detailsContent","Apis","render","Apis_Listing_Listing","Apis_extends","Apis_Details","Footer","footer","A100","Base","header","Footer_Footer","_toolbar","menuIcon","userLink","drawer","toolbar","Base_defineProperty","breakpoints","up","Avatar","Avatar_classCallCheck","Avatar_getPrototypeOf","Avatar_assertThisInitialized","profileIcon","toggleMenu","AccountCircle_default","accountIcon","profileMenu","Fade","Avatar_extends","MenuList","doOIDCLogout","modal","isLoading","SearchUtils_objectWithoutProperties","SearchUtils_objectSpread","focused","inputFocused","SearchOutlined_default","parts","associatedType","getPath","artifactMetaInfo","getArtifactMetaInfo","getIcon","part","highlight","String","getSuggestionValue","buildSearchQuery","HeaderSearch","HeaderSearch_classCallCheck","HeaderSearch_getPrototypeOf","HeaderSearch_assertThisInitialized","handleSuggestionsFetchRequested","handleSuggestionsClearRequested","clearOnBlur","renderSuggestionsContainer","onSuggestionSelected","suggestionSelected","smSearch","toggleSmSearch","containerProps","HeaderSearch_extends","responsiveContainer","smContainer","react_autosuggest_dist_default","suggestionsContainerOpen","suggestionsList","renderInputComponent","onSuggestionsFetchRequested","onSuggestionsClearRequested","listStyleType","-webkit-transition","searchBox","GlobalNavLinks","GlobalNavLinks_slicedToArray","smallView","iconWidth","listRoot","GlobalNavLinks_defineProperty","smallIcon","selectedText","listText","listTextSmall","drawerStyles","activeMenuItem","GlobalNavBar","toggleGlobalNavBar","commonStyle","paperStyles","Hidden","smDown","listInline","navbar_GlobalNavLinks","mdUp","Drawer","SlideProps","ModalProps","BackdropProps","_drawerStyles","drawerWidth","GlobalNavBar_defineProperty","& ul","Header","Header_classCallCheck","Header_getPrototypeOf","openNavBar","smScreen","Header_assertThisInitialized","AppBar","Toolbar","Menu_default","logo","navbar_GlobalNavBar","headersearch_HeaderSearch","avatar_Avatar","typoRoot","brandLink","contrastText","Header_defineProperty","AppErrorBoundary","AppErrorBoundary_classCallCheck","AppErrorBoundary_possibleConstructorReturn","AppErrorBoundary_getPrototypeOf","hasError","errorStackStyle","errorDisplay","errorDisplayContent","errorTitle","stack","componentStack","AppErrorBoundary_defineProperty","& h2","languages","userLanguage","Protected","ProtectedApp_classCallCheck","ProtectedApp_possibleConstructorReturn","ProtectedApp_getPrototypeOf","environments","settingPromise","settingsNew","getUserFromToken","loggedUser","Base_Header","Shared_AppErrorBoundary","components_Base","locale","Shared_RedirectToLogin"],"mappings":"8EAGA,IAAAA,EAAcC,EAAQ,MACtB,iBAAAD,MAAA,EAA4CE,EAAAC,EAASH,EAAA,MAIrD,IAAAI,EAAA,CACAC,eAHAA,GAKaJ,EAAQ,IAARA,CAAoED,EAAAI,GACjFJ,EAAAM,SAAAJ,EAAAK,QAAAP,EAAAM,+BCZAJ,EAAAK,QAA2BN,EAAQ,IAARA,EAAgE,IAK3FO,KAAA,CAAcN,EAAAC,EAAS,6gBAA6gB,2BCLpiB,IAAAM,EAAA,CACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,KACAC,UAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,gBAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,UAAA,KACAC,aAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,UAAA,KACAC,aAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA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","file":"ProtectedApp.bundle.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!./redirecting.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!./redirecting.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!./redirecting.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body,html{height:100%}.redirect-flex-container{display:flex;flex-direction:column;height:100%;background:#efefef;margin:auto}.redirect-flex-container .redirect-grid-container{height:100vh}.redirect-flex-container .redirect-main-content{flex:1;align-items:flex-start;justify-content:center}.redirect-loadingbar{float:right}.redirect-paper{border-left:2px solid #f17a20;fontSize:medium;padding:15px}#react-root{height:100%}@media (max-width:601px){.redirect-paper{align-items:flex-start;display:flex;width:100%;height:100%}}\", \"\"]);\n\n// exports\n","var map = {\n\t\"./af\": 976,\n\t\"./af.js\": 976,\n\t\"./ar\": 977,\n\t\"./ar-dz\": 978,\n\t\"./ar-dz.js\": 978,\n\t\"./ar-kw\": 979,\n\t\"./ar-kw.js\": 979,\n\t\"./ar-ly\": 980,\n\t\"./ar-ly.js\": 980,\n\t\"./ar-ma\": 981,\n\t\"./ar-ma.js\": 981,\n\t\"./ar-sa\": 982,\n\t\"./ar-sa.js\": 982,\n\t\"./ar-tn\": 983,\n\t\"./ar-tn.js\": 983,\n\t\"./ar.js\": 977,\n\t\"./az\": 984,\n\t\"./az.js\": 984,\n\t\"./be\": 985,\n\t\"./be.js\": 985,\n\t\"./bg\": 986,\n\t\"./bg.js\": 986,\n\t\"./bm\": 987,\n\t\"./bm.js\": 987,\n\t\"./bn\": 988,\n\t\"./bn.js\": 988,\n\t\"./bo\": 989,\n\t\"./bo.js\": 989,\n\t\"./br\": 990,\n\t\"./br.js\": 990,\n\t\"./bs\": 991,\n\t\"./bs.js\": 991,\n\t\"./ca\": 992,\n\t\"./ca.js\": 992,\n\t\"./cs\": 993,\n\t\"./cs.js\": 993,\n\t\"./cv\": 994,\n\t\"./cv.js\": 994,\n\t\"./cy\": 995,\n\t\"./cy.js\": 995,\n\t\"./da\": 996,\n\t\"./da.js\": 996,\n\t\"./de\": 997,\n\t\"./de-at\": 998,\n\t\"./de-at.js\": 998,\n\t\"./de-ch\": 999,\n\t\"./de-ch.js\": 999,\n\t\"./de.js\": 997,\n\t\"./dv\": 1000,\n\t\"./dv.js\": 1000,\n\t\"./el\": 1001,\n\t\"./el.js\": 1001,\n\t\"./en-SG\": 1002,\n\t\"./en-SG.js\": 1002,\n\t\"./en-au\": 1003,\n\t\"./en-au.js\": 1003,\n\t\"./en-ca\": 1004,\n\t\"./en-ca.js\": 1004,\n\t\"./en-gb\": 1005,\n\t\"./en-gb.js\": 1005,\n\t\"./en-ie\": 1006,\n\t\"./en-ie.js\": 1006,\n\t\"./en-il\": 1007,\n\t\"./en-il.js\": 1007,\n\t\"./en-nz\": 1008,\n\t\"./en-nz.js\": 1008,\n\t\"./eo\": 1009,\n\t\"./eo.js\": 1009,\n\t\"./es\": 1010,\n\t\"./es-do\": 1011,\n\t\"./es-do.js\": 1011,\n\t\"./es-us\": 1012,\n\t\"./es-us.js\": 1012,\n\t\"./es.js\": 1010,\n\t\"./et\": 1013,\n\t\"./et.js\": 1013,\n\t\"./eu\": 1014,\n\t\"./eu.js\": 1014,\n\t\"./fa\": 1015,\n\t\"./fa.js\": 1015,\n\t\"./fi\": 1016,\n\t\"./fi.js\": 1016,\n\t\"./fo\": 1017,\n\t\"./fo.js\": 1017,\n\t\"./fr\": 1018,\n\t\"./fr-ca\": 1019,\n\t\"./fr-ca.js\": 1019,\n\t\"./fr-ch\": 1020,\n\t\"./fr-ch.js\": 1020,\n\t\"./fr.js\": 1018,\n\t\"./fy\": 1021,\n\t\"./fy.js\": 1021,\n\t\"./ga\": 1022,\n\t\"./ga.js\": 1022,\n\t\"./gd\": 1023,\n\t\"./gd.js\": 1023,\n\t\"./gl\": 1024,\n\t\"./gl.js\": 1024,\n\t\"./gom-latn\": 1025,\n\t\"./gom-latn.js\": 1025,\n\t\"./gu\": 1026,\n\t\"./gu.js\": 1026,\n\t\"./he\": 1027,\n\t\"./he.js\": 1027,\n\t\"./hi\": 1028,\n\t\"./hi.js\": 1028,\n\t\"./hr\": 1029,\n\t\"./hr.js\": 1029,\n\t\"./hu\": 1030,\n\t\"./hu.js\": 1030,\n\t\"./hy-am\": 1031,\n\t\"./hy-am.js\": 1031,\n\t\"./id\": 1032,\n\t\"./id.js\": 1032,\n\t\"./is\": 1033,\n\t\"./is.js\": 1033,\n\t\"./it\": 1034,\n\t\"./it-ch\": 1035,\n\t\"./it-ch.js\": 1035,\n\t\"./it.js\": 1034,\n\t\"./ja\": 1036,\n\t\"./ja.js\": 1036,\n\t\"./jv\": 1037,\n\t\"./jv.js\": 1037,\n\t\"./ka\": 1038,\n\t\"./ka.js\": 1038,\n\t\"./kk\": 1039,\n\t\"./kk.js\": 1039,\n\t\"./km\": 1040,\n\t\"./km.js\": 1040,\n\t\"./kn\": 1041,\n\t\"./kn.js\": 1041,\n\t\"./ko\": 1042,\n\t\"./ko.js\": 1042,\n\t\"./ku\": 1043,\n\t\"./ku.js\": 1043,\n\t\"./ky\": 1044,\n\t\"./ky.js\": 1044,\n\t\"./lb\": 1045,\n\t\"./lb.js\": 1045,\n\t\"./lo\": 1046,\n\t\"./lo.js\": 1046,\n\t\"./lt\": 1047,\n\t\"./lt.js\": 1047,\n\t\"./lv\": 1048,\n\t\"./lv.js\": 1048,\n\t\"./me\": 1049,\n\t\"./me.js\": 1049,\n\t\"./mi\": 1050,\n\t\"./mi.js\": 1050,\n\t\"./mk\": 1051,\n\t\"./mk.js\": 1051,\n\t\"./ml\": 1052,\n\t\"./ml.js\": 1052,\n\t\"./mn\": 1053,\n\t\"./mn.js\": 1053,\n\t\"./mr\": 1054,\n\t\"./mr.js\": 1054,\n\t\"./ms\": 1055,\n\t\"./ms-my\": 1056,\n\t\"./ms-my.js\": 1056,\n\t\"./ms.js\": 1055,\n\t\"./mt\": 1057,\n\t\"./mt.js\": 1057,\n\t\"./my\": 1058,\n\t\"./my.js\": 1058,\n\t\"./nb\": 1059,\n\t\"./nb.js\": 1059,\n\t\"./ne\": 1060,\n\t\"./ne.js\": 1060,\n\t\"./nl\": 1061,\n\t\"./nl-be\": 1062,\n\t\"./nl-be.js\": 1062,\n\t\"./nl.js\": 1061,\n\t\"./nn\": 1063,\n\t\"./nn.js\": 1063,\n\t\"./pa-in\": 1064,\n\t\"./pa-in.js\": 1064,\n\t\"./pl\": 1065,\n\t\"./pl.js\": 1065,\n\t\"./pt\": 1066,\n\t\"./pt-br\": 1067,\n\t\"./pt-br.js\": 1067,\n\t\"./pt.js\": 1066,\n\t\"./ro\": 1068,\n\t\"./ro.js\": 1068,\n\t\"./ru\": 1069,\n\t\"./ru.js\": 1069,\n\t\"./sd\": 1070,\n\t\"./sd.js\": 1070,\n\t\"./se\": 1071,\n\t\"./se.js\": 1071,\n\t\"./si\": 1072,\n\t\"./si.js\": 1072,\n\t\"./sk\": 1073,\n\t\"./sk.js\": 1073,\n\t\"./sl\": 1074,\n\t\"./sl.js\": 1074,\n\t\"./sq\": 1075,\n\t\"./sq.js\": 1075,\n\t\"./sr\": 1076,\n\t\"./sr-cyrl\": 1077,\n\t\"./sr-cyrl.js\": 1077,\n\t\"./sr.js\": 1076,\n\t\"./ss\": 1078,\n\t\"./ss.js\": 1078,\n\t\"./sv\": 1079,\n\t\"./sv.js\": 1079,\n\t\"./sw\": 1080,\n\t\"./sw.js\": 1080,\n\t\"./ta\": 1081,\n\t\"./ta.js\": 1081,\n\t\"./te\": 1082,\n\t\"./te.js\": 1082,\n\t\"./tet\": 1083,\n\t\"./tet.js\": 1083,\n\t\"./tg\": 1084,\n\t\"./tg.js\": 1084,\n\t\"./th\": 1085,\n\t\"./th.js\": 1085,\n\t\"./tl-ph\": 1086,\n\t\"./tl-ph.js\": 1086,\n\t\"./tlh\": 1087,\n\t\"./tlh.js\": 1087,\n\t\"./tr\": 1088,\n\t\"./tr.js\": 1088,\n\t\"./tzl\": 1089,\n\t\"./tzl.js\": 1089,\n\t\"./tzm\": 1090,\n\t\"./tzm-latn\": 1091,\n\t\"./tzm-latn.js\": 1091,\n\t\"./tzm.js\": 1090,\n\t\"./ug-cn\": 1092,\n\t\"./ug-cn.js\": 1092,\n\t\"./uk\": 1093,\n\t\"./uk.js\": 1093,\n\t\"./ur\": 1094,\n\t\"./ur.js\": 1094,\n\t\"./uz\": 1095,\n\t\"./uz-latn\": 1096,\n\t\"./uz-latn.js\": 1096,\n\t\"./uz.js\": 1095,\n\t\"./vi\": 1097,\n\t\"./vi.js\": 1097,\n\t\"./x-pseudo\": 1098,\n\t\"./x-pseudo.js\": 1098,\n\t\"./yo\": 1099,\n\t\"./yo.js\": 1099,\n\t\"./zh-cn\": 1100,\n\t\"./zh-cn.js\": 1100,\n\t\"./zh-hk\": 1101,\n\t\"./zh-hk.js\": 1101,\n\t\"./zh-tw\": 1102,\n\t\"./zh-tw.js\": 1102\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1452;","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropType from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nconst NotFound = (props) => {\n    return (\n        <div>\n            <div className='message message-danger'>\n                <h4>\n                    <i className='icon fw fw-error' />\n                    <FormattedMessage\n                        id='Base.Errors.PageNotfound.header'\n                        defaultMessage='404 Page Not Found!'\n                    />\n                </h4>\n                <p>\n                    <FormattedMessage\n                        id='Base.Errors.PageNotfound.message.prefix'\n                        defaultMessage='Sorry the page you are looking for'\n                    />\n                    <span style={{ color: 'green' }}> {props.location.pathname} </span>\n                    <FormattedMessage id='Base.Errors.PageNotfound.message.suffix' defaultMessage='is not available.' />\n                </p>\n            </div>\n        </div>\n    );\n};\n\nNotFound.propTypes = {\n    location: PropType.shape({\n        pathname: PropType.string,\n    }).isRequired,\n};\n\nexport default NotFound;\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nconst ResourceNotFound = (props) => {\n    const { response } = props;\n    const message = props.message || {};\n\n    return (\n        <div>\n            <div className='message message-danger'>\n                <Typography variant='h6' gutterBottom>\n                    { message.title }\n                </Typography>\n                <Typography variant='subtitle1' gutterBottom>\n                    { message.body }\n                    <span style={{ color: 'green' }}> {response ? response.statusText : ''} </span>\n                </Typography>\n                {message.more}\n            </div>\n        </div>\n    );\n};\n\nResourceNotFound.defaultProps = {\n    message: {\n        title: <FormattedMessage\n            id='Base.Errors.ResourceNotfound.default_tittle'\n            defaultMessage='ResourceNotFound'\n        />,\n        body: <FormattedMessage\n            id='Base.Errors.ResourceNotfound.default_body'\n            defaultMessage={'No Error message give, Please give a proper error message when using `ResourceNotFound` ' +\n            'Component'}\n        />,\n    },\n};\n\nResourceNotFound.propTypes = {\n    response: PropTypes.shape({\n        statusText: PropTypes.string,\n    }).isRequired,\n    message: PropTypes.shape({\n        title: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.instanceOf(FormattedMessage),\n        ]),\n        body: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.instanceOf(FormattedMessage),\n        ]),\n    }),\n};\n\nexport default ResourceNotFound;\n","/**\n * Copyright (c), WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport APIClientFactory from './APIClientFactory';\nimport Utils from './Utils';\n\n/** *\n * Abstract resource representation, Host for generic resource related methods\n */\nexport default class Resource {\n    /**\n     *Creates an instance of Resource.\n     * @memberof Resource\n     */\n    constructor() {\n        this.client = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n    }\n\n    /**\n     * @param data\n     * @returns {object} Metadata for API request\n     */\n    static _requestMetaData(data = {}) {\n        /* TODO: This should be moved to an interceptor ~tmkb */\n        return {\n            requestContentType: data['Content-Type'] || 'application/json',\n        };\n    }\n}\n","/**\n * Copyright (c) 2018, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable */\nimport APIClientFactory from './APIClientFactory';\nimport Utils from './Utils';\nimport Resource from './Resource';\n\n/**\n * An abstract representation of an API\n */\nclass API extends Resource {\n    constructor(name, version, context, kwargs) {\n        super();\n        let properties = kwargs;\n        if (name instanceof Object) {\n            properties = name;\n            Utils.deepFreeze(properties);\n        } else {\n            this.name = name;\n            this.version = version;\n            this.context = context;\n            this.isDefaultVersion = false;\n            this.gatewayEnvironments = ['Production and Sandbox']; //todo: load the environments from settings API\n            this.transport = ['http', 'https'];\n            this.visibility = 'PUBLIC';\n            this.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: '',\n                },\n                production_endpoints: {\n                    url: '',\n                },\n            };\n        }\n        this.apiType = API.CONSTS.API;\n        this._data = properties;\n        for (const key in properties) {\n            if (Object.prototype.hasOwnProperty.call(properties, key)) {\n                this[key] = properties[key];\n            }\n        }\n    }\n\n    /**\n     *\n     * @param data\n     * @returns {object} Metadata for API request\n     * @private\n     */\n    _requestMetaData() {\n        Resource._requestMetaData();\n    }\n\n    /**\n     *\n     * Instance method of the API class to provide raw JSON object\n     * which is API body friendly to use with REST api requests\n     * Use this method instead of accessing the private _data object for\n     * converting to a JSON representation of an API object.\n     * Note: This is shallow coping\n     * Basically this is the revers operation in constructor.\n     * This method simply iterate through all the object properties\n     * and copy their values to new object excluding the properties in excludes list.\n     * So use this method sparingly!!\n     * @memberof API\n     * @param {Array} [userExcludes=[]] List of properties that are need to be excluded from the generated JSON object\n     * @returns {JSON} JSON representation of the API\n     */\n    toJSON(resource = this, userExcludes = []) {\n        var copy = {},\n            excludes = ['_data', 'client', 'apiType', ...userExcludes];\n        for (var prop in resource) {\n            if (!excludes.includes(prop)) {\n                copy[prop] = resource[prop];\n            }\n        }\n        return copy;\n    }\n\n    /**\n     * Create an API with the given parameters in template and call the callback method given optional.\n     * @param {Object} apiData - API data which need to fill the placeholder values in the @get_template\n     * @param {function} callback - An optional callback method\n     * @returns {Promise} Promise after creating and optionally calling the callback method.\n     */\n    create(apiData, callback = null) {\n        let payload;\n        let promise_create;\n        if (apiData.constructor.name === 'Blob' || apiData.constructor.name === 'File') {\n            payload = {\n                file: apiData,\n                'Content-Type': 'multipart/form-data',\n            };\n            promise_create = this.client.then(client => {\n                return client.apis['APIs'].post_apis_import_definition(\n                    payload,\n                    this._requestMetaData({\n                        'Content-Type': 'multipart/form-data',\n                    }),\n                );\n            });\n        } else if (apiData.type === 'swagger-url') {\n            payload = {\n                url: apiData.url,\n                'Content-Type': 'multipart/form-data',\n            };\n            promise_create = this.client.then(client => {\n                return client.apis['APIs'].post_apis_import_definition(\n                    payload,\n                    this._requestMetaData({\n                        'Content-Type': 'multipart/form-data',\n                    }),\n                );\n            });\n        } else {\n            payload = {\n                body: apiData,\n                'Content-Type': 'application/json',\n            };\n            promise_create = this.client.then(client => {\n                return client.apis['APIs'].post_apis(payload, this._requestMetaData());\n            });\n        }\n        if (callback) {\n            return promise_create.then(callback);\n        } else {\n            return promise_create;\n        }\n    }\n\n    importOpenAPIByFile(openAPIData, callback = null) {\n        let payload, promisedCreate;\n        promisedCreate = this.client.then(client => {\n            const apiData = this.getDataFromSpecFields(client);\n\n            payload = {\n                file: openAPIData,\n                additionalProperties: JSON.stringify(apiData),\n            };\n\n            const promisedResponse = client.apis['APIs'].importOpenAPIDefinition(\n                payload,\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data',\n                }),\n            );\n            return promisedResponse.then(response => new API(response.body));\n        });\n        return promisedCreate;\n    }\n\n    importOpenAPIByUrl(openAPIUrl, callback = null) {\n        let payload, promise_create;\n\n        promise_create = this.client.then(client => {\n            const apiData = this.getDataFromSpecFields(client);\n\n            payload = {\n                url: openAPIUrl,\n                additionalProperties: JSON.stringify(apiData),\n            };\n\n            const promisedResponse = client.apis['APIs'].importOpenAPIDefinition(\n                payload,\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data',\n                }),\n            );\n            return promisedResponse.then(response => new API(response.body));\n        });\n        return promise_create;\n    }\n\n    static validateOpenAPIByFile(openAPIData) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        let payload, promisedValidate;\n        payload = {\n            file: openAPIData,\n            'Content-Type': 'multipart/form-data',\n        };\n        promisedValidate = apiClient.then(client => {\n            return client.apis.Validation.validateOpenAPIDefinition(\n                payload,\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data',\n                }),\n            );\n        });\n        return promisedValidate;\n    }\n\n    static validateOpenAPIByUrl(url, callback = null) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        let payload, promise_validate;\n        payload = {\n            url: url,\n            'Content-Type': 'multipart/form-data',\n        };\n        promise_validate = apiClient.then(client => {\n            return client.apis['Validation'].validateOpenAPIDefinition(\n                payload,\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data',\n                }),\n            );\n        });\n        if (callback) {\n            return promise_validate.then(callback);\n        } else {\n            return promise_validate;\n        }\n    }\n\n    /**\n     * Get detailed policy information of the API\n     * @returns {Promise} Promise containing policy detail request calls for all the available policies\n     * @memberof API\n     */\n    getPolicies() {\n        const promisedPolicies = this.policies.map(policy => {\n            return this.client.then(client =>\n                client.apis['Throttling Policies'].getThrottlingPolicyByName(\n                    {\n                        policyLevel: 'subscription',\n                        policyName: policy,\n                    },\n                    this._requestMetaData(),\n                ),\n            );\n        });\n        return Promise.all(promisedPolicies).then(policies => policies.map(response => response.body));\n    }\n\n    setInlineProductionEndpoint(serviceURL) {\n        this.endpointConfig.production_endpoints.url = serviceURL;\n        return this.endpointConfig;\n    }\n\n    getProductionEndpoint() {\n        if (!this.endpointConfig) {\n            return null;\n        }\n        if (!this.endpointConfig.production_endpoints) {\n            return '';\n        }\n        if (Array.isArray(this.endpointConfig.production_endpoints)) {\n            return this.endpointConfig.production_endpoints[0].url;\n        } else {\n            return this.endpointConfig.production_endpoints.url;\n        }\n    }\n\n    getSandboxEndpoint() {\n        if (!this.endpointConfig.sandbox_endpoints) {\n            return '';\n        }\n        if (Array.isArray(this.endpointConfig.sandbox_endpoints)) {\n            return this.endpointConfig.sandbox_endpoints[0].url;\n        } else {\n            return this.endpointConfig.sandbox_endpoints.url;\n        }\n    }\n\n    save(query) {\n        query = query ? query : 'v2';\n        const promisedAPIResponse = this.client.then((client) => {\n            const properties = client.spec.definitions.API.properties;\n            const data = {};\n            Object.keys(this).forEach(apiAttribute => {\n                if (apiAttribute in properties) {\n                    data[apiAttribute] = this[apiAttribute];\n                }\n            });\n            const payload = {\n                body: data,\n                'Content-Type': 'application/json',\n                openAPIVersion: query,\n            };\n            return client.apis['APIs'].post_apis(payload, this._requestMetaData());\n        });\n        return promisedAPIResponse.then(response => {\n            return new API(response.body);\n        });\n    }\n\n    saveProduct() {\n        const promisedAPIResponse = this.client.then(client => {\n            const properties = client.spec.definitions.APIProduct.properties;\n            const data = {};\n\n            Object.keys(this).forEach(apiAttribute => {\n                if (apiAttribute in properties) {\n                    data[apiAttribute] = this[apiAttribute];\n                }\n            });\n            const payload = {\n                body: data,\n                'Content-Type': 'application/json',\n            };\n            return client.apis['API Products'].post_api_products(payload, this._requestMetaData());\n        });\n        return promisedAPIResponse.then(response => {\n            return new API(response.body);\n        });\n    }\n    /**\n     * Create an API from WSDL with the given parameters and call the callback method given optional.\n     * @param {Object} api_data - API data which need to fill the placeholder values in the @get_template\n     * @param {function} callback - An optional callback method\n     * @returns {Promise} Promise after creating and optionally calling the callback method.\n     */\n    importWSDL(api_data, callback = null) {\n        let payload;\n        let promise_create;\n        payload = {\n            type: 'WSDL',\n            additionalProperties: api_data.additionalProperties,\n            implementationType: api_data.implementationType,\n            'Content-Type': 'multipart/form-data',\n        };\n        if (api_data.url) {\n            payload.url = api_data.url;\n        } else {\n            payload.file = api_data.file;\n        }\n        promise_create = this.client.then(client => {\n            return client.apis['APIs'].post_apis_import_definition(\n                payload,\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data',\n                }),\n            );\n        });\n        if (callback) {\n            return promise_create.then(callback);\n        } else {\n            return promise_create;\n        }\n    }\n\n    /**\n     * Get details of a given API\n     * @param id {string} UUID of the api.\n     * @param callback {function} A callback function to invoke after receiving successful response.\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     * @deprecated use static API.get() method instead\n     */\n    get(id, callback = null) {\n        const promise_get = this.client.then(client => {\n            return client.apis['APIs'].get_apis__apiId_(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        if (callback) {\n            return promise_get.then(callback);\n        } else {\n            return promise_get;\n        }\n    }\n\n    /**\n     * Get details of a given API\n     * @param id {string} UUID of the api.\n     * @param callback {function} A callback function to invoke after receiving successful response.\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     * @deprecated use static API.get() method instead\n     */\n    getProduct(id, callback = null) {\n        const promise_get = this.client.then(client => {\n            return client.apis['API Products'].get_api_products__apiProductId_(\n                {\n                    apiProductId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        if (callback) {\n            return promise_get.then(callback);\n        } else {\n            return promise_get;\n        }\n    }\n\n    /**\n     * Validate the api parameters for existence. (api name, context)\n     * @param {string} query The parameters that should be validated.\n     * @return {promise}\n     * */\n    validateAPI(query) {\n        return this.client.then((client) => {\n            return client.apis.Validation.validateAPI({ query: query }).then((resp) => {\n                console.log(resp);\n                return resp.ok;\n            }).catch((err) => {\n                console.log(err);\n                return false;\n            });\n        });\n    }\n\n    /**\n     * Validate the given document name exists\n     * @param {string} id The api id.\n     * @param {string} name The document name\n     * @return {promise}\n     * */\n    validateDocument(id, name) {\n        return this.client.then((client) => {\n            return client.apis['API Documents'].validateDocument({\n                apiId: id,\n                name: name\n            })\n        });\n    }\n\n    /**\n     * Create a new version of a given API\n     * @param version {string} new API version.\n     * @param isDefaultVersion specifies whether new API version is set as default version\n     * @param callback {function} A callback function to invoke after receiving successful response.\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    createNewAPIVersion(version, isDefaultVersion, callback = null) {\n        const promise_copy_api = this.client.then(client => {\n            return client.apis['APIs'].post_apis_copy_api(\n                {\n                    apiId: this.id,\n                    newVersion: version,\n                    defaultVersion: isDefaultVersion,\n                },\n                this._requestMetaData(),\n            );\n        });\n        if (callback) {\n            return promise_copy_api.then(callback);\n        } else {\n            return promise_copy_api;\n        }\n    }\n\n    /**\n     * Get the swagger of an API\n     * @param id {String} UUID of the API in which the swagger is needed\n     * @param callback {function} Function which needs to be called upon success of the API deletion\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getSwagger(id, callback = null) {\n        const promise_get = this.client.then(client => {\n            return client.apis['APIs'].get_apis__apiId__swagger(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        if (callback) {\n            return promise_get.then(callback);\n        } else {\n            return promise_get;\n        }\n    }\n\n    /**\n     * Get the graphQL schema of an API\n     * @param id {String} UUID of the API in which the schema is needed\n     * @param callback {function} Function which needs to be called upon success of the retrieving schema\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getSchema(id, callback = null) {\n        const promise_get = this.client.then(client => {\n            return client.apis['GraphQL Schema (Individual)'].get_apis__apiId__graphql_schema(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        if (callback) {\n            return promise_get.then(callback);\n        } else {\n            return promise_get;\n        }\n    }\n\n    /**\n     * Get the scopes of an API\n     * @param id {String} UUID of the API in which the swagger is needed\n     * @param callback {function} Function which needs to be called upon success of the API deletion\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getScopes(id, callback = null) {\n        const promise_get = this.client.then(client => {\n            return client.apis['API Scopes'].get_apis__apiId__scopes(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        if (callback) {\n            return promise_get.then(callback);\n        } else {\n            return promise_get;\n        }\n    }\n\n    /**\n     * Get settings of an API\n     */\n    getSettings() {\n        const promisedSettings = this.client.then(client => {\n            return client.apis['Settings'].get_settings();\n        });\n        return promisedSettings.then(response => response.body);\n    }\n\n    /**\n     * Get Subscription Policies of an API\n     * @param id {String} UUID of the API in which the swagger is needed\n     * @param callback {function} Function which needs to be called upon success of the API deletion\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getSubscriptionPolicies(id, callback = null) {\n        const promisePolicies = this.client.then(client => {\n            return client.apis['APIs'].get_apis__apiId__subscription_policies(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promisePolicies.then(response => response.body);\n    }\n\n    /**\n     * Get monettization status of an API\n     * @param id {String} UUID of the API in which the swagger is needed\n     * @param callback {function} Function which needs to be called upon success of the API deletion\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getMonetization(id, callback = null) {\n        const promiseMonetization = this.client.then(client => {\n            return client.apis['API Monetization'].get_apis__apiId__monetization(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promiseMonetization.then(response => response.body);\n    }\n\n    /**\n     * configure monetization to an API\n     * @param apiId APIID\n     * @param body details of tiers\n     */\n    configureMonetizationToApi(apiId, body) {\n        const promised_status = this.client.then(client => {\n            return client.apis['API Monetization'].post_apis__apiId__monetize({\n                apiId,\n                body,\n            });\n        });\n        return promised_status;\n    }\n\n    /**\n     * Get the detail of scope of an API\n     * @param {String} api_id - UUID of the API in which the scopes is needed\n     * @param {String} scopeName - Name of the scope\n     * @param {function} callback - Function which needs to be called upon success of the API deletion\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getScopeDetail(api_id, scopeName, callback = null) {\n        const promise_get_Scope_detail = this.client.then(client => {\n            return client.apis['API Scopes'].get_apis__apiId__scopes__name_(\n                {\n                    apiId: api_id,\n                    name: scopeName,\n                },\n                this._requestMetaData(),\n            );\n        });\n        if (callback) {\n            return promise_get_Scope_detail.then(callback);\n        } else {\n            return promise_get_Scope_detail;\n        }\n    }\n\n    /**\n     * Update a scope of an API\n     * @param {String} api_id - UUID of the API in which the scopes is needed\n     * @param {String} scopeName - Name of the scope\n     * @param {Object} body - Scope details\n     */\n    updateScope(api_id, scopeName, body) {\n        const promised_updateScope = this.client.then(client => {\n            const payload = {\n                apiId: api_id,\n                body,\n                name: scopeName,\n                'Content-Type': 'application/json',\n            };\n            return client.apis['API Scopes'].put_apis__apiId__scopes__name_(payload, this._requestMetaData());\n        });\n        return promised_updateScope;\n    }\n\n    addScope(api_id, body) {\n        const promised_addScope = this.client.then(client => {\n            const payload = {\n                apiId: api_id,\n                body,\n                'Content-Type': 'application/json',\n            };\n            return client.apis['API Scopes'].post_apis__apiId__scopes(payload, this._requestMetaData());\n        });\n        return promised_addScope;\n    }\n\n    deleteScope(api_id, scope_name) {\n        const promise_deleteScope = this.client.then(client => {\n            return client.apis['API Scopes'].delete_apis__apiId__scopes__name_(\n                {\n                    apiId: api_id,\n                    name: scope_name,\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promise_deleteScope;\n    }\n\n    /**\n     * Update an api via PUT HTTP method, Need to give the updated API object as the argument.\n     * @param api {Object} Updated API object(JSON) which needs to be updated\n     * @deprecated\n     */\n    updateSwagger(id, swagger) {\n        const promised_update = this.client.then(client => {\n            const payload = {\n                apiId: id,\n                endpointId: JSON.stringify(swagger),\n                'Content-Type': 'multipart/form-data',\n            };\n            return client.apis['APIs'].put_apis__apiId__swagger(\n                payload,\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data',\n                }),\n            );\n        });\n        return promised_update;\n    }\n\n    /**\n     * Update an api via PUT HTTP method, Need to give the updated API object as the argument.\n     * @param apiId {Object} Updated graphQL schema which needs to be updated\n     * @param graphQLSchema\n     */\n    updateGraphQLAPIDefinition(apiId, graphQLSchema) {\n        const promised_updateSchema = this.client.then(client => {\n            const payload = {\n                apiId: apiId,\n                schemaDefinition: graphQLSchema,\n                'Content-Type': 'multipart/form-data',\n            };\n            return client.apis['GraphQL Schema'].put_apis__apiId__graphql_schema(\n                payload,\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data',\n                }),\n            );\n        });\n        return promised_updateSchema;\n    }\n\n    /**\n     * Update an api via PUT HTTP method, Need to give the updated API object as the argument.\n     * @param api {Object} Updated API object(JSON) which needs to be updated\n     *\n     */\n    updateSwagger(swagger) {\n        const promised_update = this.client.then(client => {\n            const payload = {\n                apiId: this.id,\n                apiDefinition: JSON.stringify(swagger),\n                'Content-Type': 'multipart/form-data',\n            };\n            return client.apis['APIs'].put_apis__apiId__swagger(\n                payload,\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data',\n                }),\n            );\n        });\n        return promised_update.then(response => {\n            return this;\n        });\n    }\n\n    /**\n     * Delete the current api instance\n     * @param id {String} UUID of the API which want to delete\n     * @param callback {function} Function which needs to be called upon success of the API deletion\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    delete() {\n        return this.client.then(client => {\n            return client.apis['APIs'].delete_apis__apiId_(\n                {\n                    apiId: this.id,\n                },\n                this._requestMetaData(),\n            );\n        });\n    }\n\n    /**\n     * Delete the current api product instance\n     * @param id {String} UUID of the API which want to delete\n     * @param callback {function} Function which needs to be called upon success of the API deletion\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    deleteProduct() {\n        return this.client.then(client => {\n            return client.apis['API Products'].delete_api_products__apiProductId_(\n                {\n                    apiProductId: this.id,\n                },\n                this._requestMetaData(),\n            );\n        });\n    }\n\n    /**\n     * Get the life cycle state of an API given its id (UUID)\n     * @param id {string} UUID of the api\n     * @param callback {function} Callback function which needs to be executed in the success call\n     */\n    getLcState(id, callback = null) {\n        const promise_lc_get = this.client.then(client => {\n            return client.apis['API Lifecycle'].get_apis__apiId__lifecycle_state(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        if (callback) {\n            return promise_lc_get.then(callback);\n        } else {\n            return promise_lc_get;\n        }\n    }\n\n    /**\n     * Get the life cycle history data of an API given its id (UUID)\n     * @param id {string} UUID of the api\n     * @param callback {function} Callback function which needs to be executed in the success call\n     */\n    getLcHistory(id, callback = null) {\n        const promise_lc_history_get = this.client.then(client => {\n            return client.apis['API Lifecycle'].get_apis__apiId__lifecycle_history(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        if (callback) {\n            return promise_lc_history_get.then(callback);\n        } else {\n            return promise_lc_history_get;\n        }\n    }\n\n    /**\n     *\n     * Shortcut method to publish `this` API instance\n     *\n     * @param {Object} checkedItems State change checklist items\n     * @returns {Promise}\n     * @memberof API\n     */\n    publish(checkedItems) {\n        const payload = {\n            action: 'Publish',\n            apiId: this.id,\n            lifecycleChecklist: checkedItems,\n            'Content-Type': 'application/json',\n        };\n        return this.client.then(client => {\n            return client.apis['API Lifecycle'].post_apis_change_lifecycle(payload, this._requestMetaData());\n        });\n    }\n\n    /**\n     * Update the life cycle state of an API given its id (UUID)\n     * @param id {string} UUID of the api\n     * @param state {string} Target state which need to be transferred\n     * @param callback {function} Callback function which needs to be executed in the success call\n     */\n    updateLcState(id, state, checkedItems, callback = null) {\n        const payload = {\n            action: state,\n            apiId: id,\n            lifecycleChecklist: checkedItems,\n            'Content-Type': 'application/json',\n        };\n        const promise_lc_update = this.client.then(client => {\n            return client.apis['API Lifecycle'].post_apis_change_lifecycle(payload, this._requestMetaData());\n        });\n        if (callback) {\n            return promise_lc_update.then(callback);\n        } else {\n            return promise_lc_update;\n        }\n    }\n\n    /**\n     * Cleanup pending workflow state change task for API given its id (UUID)\n     * @param id {string} UUID of the api\n     * @param callback {function} Callback function which needs to be executed in the success call\n     */\n    cleanupPendingTask(id, callback = null) {\n        const promise_deletePendingTask = this.client.then(client => {\n            return client.apis['API Lifecycle'].delete_apis_apiId_lifecycle_lifecycle_pending_task(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promise_deletePendingTask;\n    }\n\n    /**\n     * Update an api via PUT HTTP method, Need to give the updated API object as the argument.\n     * @param api {Object} Updated API object(JSON) which needs to be updated\n     */\n    update(updatedProperties) {\n        const updatedAPI = { ...this.toJSON(), ...this.toJSON(updatedProperties) };\n        const promisedUpdate = this.client.then(client => {\n            const payload = {\n                apiId: updatedAPI.id,\n                body: updatedAPI,\n            };\n            return client.apis['APIs'].put_apis__apiId_(payload);\n        });\n        return promisedUpdate.then(response => {\n            return new API(response.body);\n        });\n    }\n\n    /**\n     * Update an api via PUT HTTP method, Need to give the updated API object as the argument.\n     * @param api {Object} Updated API object(JSON) which needs to be updated\n     */\n    updateProduct(api) {\n        const promised_update = this.client.then(client => {\n            const payload = {\n                apiProductId: api.id,\n                body: api,\n            };\n            return client.apis['API Products'].put_api_products__apiProductId_(payload);\n        });\n        return promised_update;\n    }\n    /**\n     * Get the available subscriptions for a given API\n     * @param {String} apiId API UUID\n     * @returns {Promise} With given callback attached to the success chain else API invoke promise.\n     */\n    subscriptions(apiId, offset = null, limit = null, query = null, callback = null) {\n        const promise_subscription = this.client.then((client) => {\n            return client.apis['Subscriptions'].get_subscriptions(\n                { apiId, limit, offset, query },\n                this._requestMetaData());\n        });\n        if (callback) {\n            return promise_subscription.then(callback);\n        } else {\n            return promise_subscription;\n        }\n    }\n\n    /**\n     * Block subscriptions for given subscriptionId\n     * @param {String} id Subscription UUID\n     * @param {String} state Subscription status\n     * @returns {Promise} With given callback attached to the success chain else API invoke promise.\n     */\n    blockSubscriptions(id, state, callback = null) {\n        const promise_subscription = this.client.then(client => {\n            return client.apis['Subscriptions'].post_subscriptions_block_subscription(\n                {\n                    subscriptionId: id,\n                    blockState: state,\n                },\n                this._requestMetaData(),\n            );\n        });\n        if (callback) {\n            return promise_subscription.then(callback);\n        } else {\n            return promise_subscription;\n        }\n    }\n\n    /**\n     * Unblock subscriptions for given subscriptionId\n     * @param {String} id Subscription UUID\n     * @returns {Promise} With given callback attached to the success chain else API invoke promise.\n     */\n    unblockSubscriptions(id, callback = null) {\n        const promise_subscription = this.client.then(client => {\n            return client.apis['Subscriptions'].post_subscriptions_unblock_subscription(\n                {\n                    subscriptionId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        if (callback) {\n            return promise_subscription.then(callback);\n        } else {\n            return promise_subscription;\n        }\n    }\n\n    /**\n     * Discovered Service Endpoints.\n     * @returns {Promise} Promised list of discovered services\n     *\n     * TODO: remove\n     */\n    discoverServices() {\n        return this.client.then(client => {\n            return client.apis['External Resources (Collection)'].get_external_resources_services(\n                {},\n                this._requestMetaData(),\n            );\n        });\n    }\n\n    addDocument(api_id, body) {\n        const promised_addDocument = this.client.then(client => {\n            const payload = {\n                apiId: api_id,\n                body,\n                'Content-Type': 'application/json',\n            };\n            return client.apis['API Documents'].post_apis__apiId__documents(payload, this._requestMetaData());\n        });\n        return promised_addDocument;\n    }\n\n    /*\n     Add a File resource to a document\n     */\n    addFileToDocument(api_id, docId, fileToDocument) {\n        const promised_addFileToDocument = this.client.then(client => {\n            const payload = {\n                apiId: api_id,\n                documentId: docId,\n                file: fileToDocument,\n                'Content-Type': 'application/json',\n            };\n            return client.apis['API Documents'].post_apis__apiId__documents__documentId__content(\n                payload,\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data',\n                }),\n            );\n        });\n\n        return promised_addFileToDocument;\n    }\n\n    /*\n     Add inline content to a INLINE type document\n     */\n    addInlineContentToDocument(apiId, documentId, sourceType, inlineContent) {\n        const promised_addInlineContentToDocument = this.client.then(client => {\n            const payload = {\n                apiId,\n                documentId,\n                sourceType,\n                inlineContent,\n                'Content-Type': 'application/json',\n            };\n            return client.apis['API Documents'].post_apis__apiId__documents__documentId__content(\n                payload,\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data',\n                }),\n            );\n        });\n        return promised_addInlineContentToDocument;\n    }\n\n    getFileForDocument(api_id, docId) {\n        const promised_getDocContent = this.client.then(client => {\n            const payload = {\n                apiId: api_id,\n                documentId: docId,\n                Accept: 'application/octet-stream',\n            };\n            return client.apis['API Documents'].get_apis__apiId__documents__documentId__content(\n                payload,\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data',\n                }),\n            );\n        });\n        return promised_getDocContent;\n    }\n\n    /*\n     Get the inline content of a given document\n     */\n    getInlineContentOfDocument(api_id, docId) {\n        const promised_getDocContent = this.client.then(client => {\n            const payload = {\n                apiId: api_id,\n                documentId: docId,\n            };\n            return client.apis['API Documents'].get_apis__apiId__documents__documentId__content(payload);\n        });\n        return promised_getDocContent;\n    }\n\n    getDocuments(api_id, callback) {\n        const promise_get_all = this.client.then(client => {\n            return client.apis['API Documents'].get_apis__apiId__documents(\n                {\n                    apiId: api_id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        if (callback) {\n            return promise_get_all.then(callback);\n        } else {\n            return promise_get_all;\n        }\n    }\n\n    updateDocument(api_id, docId, body) {\n        const promised_updateDocument = this.client.then(client => {\n            const payload = {\n                apiId: api_id,\n                body,\n                documentId: docId,\n                'Content-Type': 'application/json',\n            };\n            return client.apis['API Documents'].put_apis__apiId__documents__documentId_(\n                payload,\n                this._requestMetaData(),\n            );\n        });\n        return promised_updateDocument;\n    }\n\n    getDocument(api_id, docId, callback) {\n        const promise_get = this.client.then(client => {\n            return client.apis['API Documents'].get_apis__apiId__documents__documentId_(\n                {\n                    apiId: api_id,\n                    documentId: docId,\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promise_get;\n    }\n\n    deleteDocument(api_id, document_id) {\n        const promise_deleteDocument = this.client.then(client => {\n            return client.apis['API Documents'].delete_apis__apiId__documents__documentId_(\n                {\n                    apiId: api_id,\n                    documentId: document_id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promise_deleteDocument;\n    }\n\n    /**\n     * Get the available labels.\n     * @returns {Promise.<TResult>}\n     * TODO: remove\n     */\n    labels() {\n        const promise_labels = this.client.then(client => {\n            return client.apis['Label (Collection)'].get_labels({}, this._requestMetaData());\n        });\n        return promise_labels;\n    }\n\n    validateWSDLUrl(wsdlUrl) {\n        const promised_validationResponse = this.client.then(client => {\n            return client.apis['Validation'].post_apis_validate_definition(\n                {\n                    type: 'WSDL',\n                    url: wsdlUrl,\n                    'Content-Type': 'multipart/form-data',\n                },\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data',\n                }),\n            );\n        });\n        return promised_validationResponse;\n    }\n\n    validateWSDLFile(file) {\n        const promised_validationResponse = this.client.then(client => {\n            return client.apis['Validation'].post_apis_validate_definition(\n                {\n                    type: 'WSDL',\n                    file,\n                    'Content-Type': 'multipart/form-data',\n                },\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data',\n                }),\n            );\n        });\n        return promised_validationResponse;\n    }\n\n    /**\n     * Create an API from GraphQL with the given parameters and call the callback method given optional.\n     * @param {Object} api_data - API data which need to fill the placeholder values in the @get_template\n     * @param {function} callback - An optional callback method\n     * @returns {Promise} Promise after creating and optionally calling the callback method.\n     */\n    importGraphQL(api_data, callback = null) {\n        let payload;\n        let promise_create;\n        payload = {\n            type: 'GraphQL',\n            additionalProperties: api_data.additionalProperties,\n            file: api_data.file,\n            'Content-Type': 'multipart/form-data',\n        };\n\n        promise_create = this.client.then(client => {\n            return client.apis['APIs'].post_apis_import_graphql_schema(\n                payload,\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data',\n                }),\n            );\n        });\n        if (callback) {\n            return promise_create.then(callback);\n        } else {\n            return promise_create;\n        }\n    }\n\n    static validateGraphQLFile(file) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        const promised_validationResponse = apiClient.then(client => {\n            return client.apis['Validation'].post_apis_validate_graphql_schema(\n                {\n                    type: 'GraphQL',\n                    file,\n                    'Content-Type': 'multipart/form-data',\n                },\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data',\n                }),\n            );\n        });\n        return promised_validationResponse;\n    }\n\n    getWSDL(apiId) {\n        const promised_wsdlResponse = this.client.then(client => {\n            return client.apis['Validation'].get_apis__apiId__wsdl(\n                {\n                    apiId,\n                },\n                this._requestMetaData({\n                    Accept: 'application/octet-stream',\n                }),\n            );\n        });\n        return promised_wsdlResponse;\n    }\n\n    /**\n     * Get all threat protection policies\n     * TODO: remove\n     */\n    getThreatProtectionPolicies() {\n        const promisedPolicies = this.client.then(client => {\n            return client.apis['Threat Protection Policies'].get_threat_protection_policies();\n        });\n        return promisedPolicies;\n    }\n\n    /**\n     * Retrieve a single threat protection policy\n     * @param id Threat protection policy id\n     * TODO: remove\n     */\n    getThreatProtectionPolicy(id) {\n        const promisedPolicies = this.client.then(client => {\n            return client.apis['Threat Protection Policy'].get_threat_protection_policies__policyId_({\n                policyId: id,\n            });\n        });\n        return promisedPolicies;\n    }\n\n    /**\n     * Add threat protection policy to an API\n     * @param apiId APIID\n     * @param policyId Threat protection policy id\n     * TODO: remove\n     */\n    addThreatProtectionPolicyToApi(apiId, policyId) {\n        const promisedPolicies = this.client.then(client => {\n            return client.apis['API (Individual)'].post_apis__apiId__threat_protection_policies({\n                apiId,\n                policyId,\n            });\n        });\n        return promisedPolicies;\n    }\n\n    /**\n     * Delete threat protection policy from an API\n     * @param apiId APIID\n     * @param policyId Threat protection policy id\n     * TODO: remove\n     */\n    deleteThreatProtectionPolicyFromApi(apiId, policyId) {\n        console.log(apiId);\n        const promisedDelete = this.client.then(client => {\n            console.log(client.apis);\n            return client.apis['API (Individual)'].delete_apis__apiId__threat_protection_policies({\n                apiId,\n                policyId,\n            });\n        });\n        return promisedDelete;\n    }\n\n    /**\n     * Update HasOwnGateway property of an API\n     * @param apiId APIId\n     * @param body  body which contains update details\n     * TODO: remove\n     */\n    updateHasOwnGateway(api_id, body) {\n        const promised_updateDedicatedGateway = this.client.then(client => {\n            const payload = {\n                apiId: api_id,\n                body,\n                'Content-Type': 'application/json',\n            };\n            return client.apis['DedicatedGateway (Individual)'].put_apis__apiId__dedicated_gateway(\n                payload,\n                this._requestMetaData(),\n            );\n        });\n        return promised_updateDedicatedGateway;\n    }\n\n    /**\n     * Get the HasOwnGateway property of an API\n     * @param id {string} UUID of the api\n     * @param callback {function} Callback function which needs to be executed in the success call\n     * TODO: remove\n     */\n    getHasOwnGateway(id) {\n        const promised_getDedicatedGateway = this.client.then(client => {\n            return client.apis['DedicatedGateway (Individual)'].get_apis__apiId__dedicated_gateway(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promised_getDedicatedGateway;\n    }\n\n    /**\n     * Get the thumnail of an API\n     *\n     * @param id {string} UUID of the api\n     */\n    getAPIThumbnail(id) {\n        const promised_getAPIThumbnail = this.client.then(client => {\n            return client.apis['APIs'].get_apis__apiId__thumbnail(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n\n        return promised_getAPIThumbnail;\n    }\n\n    validateSystemRole(role) {\n        const promise = this.client.then((client) => {\n            return client.apis.Roles.validateSystemRole({ roleId: role })\n        });\n        return promise;\n    }\n\n    validateUSerRole(role) {\n        const promise = this.client.then((client) => {\n            return client.apis.Roles.validateUserRole({ roleId: role })\n        });\n        return promise;\n    }\n\n    /**\n     * Add new thumbnail image to an API\n     *\n     * @param {String} api_id id of the API\n     * @param {File} imageFile thumbnail image to be uploaded\n     */\n    addAPIThumbnail(api_id, imageFile) {\n        const promised_addAPIThumbnail = this.client.then(client => {\n            const payload = {\n                apiId: api_id,\n                file: imageFile,\n                'Content-Type': imageFile.type,\n            };\n            return client.apis['APIs'].updateAPIThumbnail(\n                payload,\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data',\n                }),\n            );\n        });\n\n        return promised_addAPIThumbnail;\n    }\n\n    /**\n     * Add new comment to an existing API\n     * @param apiId apiId of the api to which the comment is added\n     * @param commentInfo comment text\n     * * TODO: remove\n     */\n    addComment(apiId, commentInfo, callback = null) {\n        let promise = this.client\n            .then(client => {\n                return client.apis['Comment (Individual)'].post_apis__apiId__comments(\n                    { apiId: apiId, body: commentInfo },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        if (callback) {\n            return promise.then(callback);\n        } else {\n            return promise;\n        }\n    }\n\n    /**\n     * Get all comments for a particular API\n     * @param apiId api id of the api to which the comment is added\n     * * TODO: remove\n     */\n    getAllComments(apiId, callback = null) {\n        let promise_get = this.client\n            .then(client => {\n                return client.apis['Comment (Collection)'].get_apis__apiId__comments(\n                    { apiId: apiId },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        if (callback) {\n            return promise_get.then(callback);\n        } else {\n            return promise_get;\n        }\n    }\n\n    /**\n     * Delete a comment belongs to a particular API\n     * @param apiId api id of the api to which the comment belongs to\n     * @param commentId comment id of the comment which has to be deleted\n     * * TODO: remove\n     */\n    deleteComment(apiId, commentId, callback = null) {\n        let promise = this.client\n            .then(client => {\n                return client.apis['Comment (Individual)'].delete_apis__apiId__comments__commentId_(\n                    { apiId: apiId, commentId: commentId },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        if (callback) {\n            return promise.then(callback);\n        } else {\n            return promise;\n        }\n    }\n\n    /**\n     * Update a comment belongs to a particular API\n     * @param apiId apiId of the api to which the comment is added\n     * @param commentId comment id of the comment which has to be updated\n     * @param commentInfo comment text\n     * TODO: remove\n     */\n    updateComment(apiId, commentId, commentInfo, callback = null) {\n        let promise = this.client\n            .then(client => {\n                return client.apis['Comment (Individual)'].put_apis__apiId__comments__commentId_(\n                    { apiId: apiId, commentId: commentId, body: commentInfo },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        if (callback) {\n            return promise.then(callback);\n        } else {\n            return promise;\n        }\n    }\n\n    /**\n     *\n     * To get API object with the fields filled as per the definition\n     * @param {Object} client Client object after resolving this.client.then()\n     * @returns API Object corresponding to spec fields\n     * @memberof API\n     */\n    getDataFromSpecFields(client) {\n        const properties = client.spec.definitions.API.properties;\n        const data = {};\n        Object.keys(this).forEach(apiAttribute => {\n            if (apiAttribute in properties) {\n                data[apiAttribute] = this[apiAttribute];\n            }\n        });\n        return data;\n    }\n\n    /**\n     * Get all active Tenants\n     * @param state state of the tenant\n     */\n    getTenantsByState(state) {\n        return this.client.then((client) => {\n            return client.apis['Tenants'].getTenantsByState({ state });\n        });\n    }\n\n    /**\n     *\n     * Static method for get all APIs for current environment user.\n     * @static\n     * @param {Object} params APIs filtering parameters i:e { \"name\": \"MyBank API\"}\n     * @returns {Promise} promise object return from SwaggerClient-js\n     * @memberof API\n     */\n    static all(params) {\n        let query = '';\n        if (params && 'query' in params) {\n            for (const [key, value] of Object.entries(params.query)) {\n                query += `${key}:${value},`;\n            }\n            params.query = query;\n        }\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        const promisedAPIs = apiClient.then(client => {\n            return client.apis['APIs'].get_apis(params, Resource._requestMetaData());\n        });\n\n        return promisedAPIs.then(response => {\n            response.obj.apiType = API.CONSTS.API;\n            return response;\n        });\n    }\n\n    /**\n     *\n     * Static method for get all API products for current environment user.\n     * @static\n     * @param {Object} params APIs filtering parameters i:e { \"name\": \"MyBank API\"}\n     * @returns {Promise} promise object return from SwaggerClient-js\n     * @memberof API\n     */\n    static allProducts(params) {\n        let query = '';\n        if (params && 'query' in params) {\n            for (const [key, value] of Object.entries(params.query)) {\n                query += `${key}:${value},`;\n            }\n            params.query = query;\n        }\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return apiClient.then(client => {\n            return client.apis['API Products'].get_api_products(params, Resource._requestMetaData());\n        });\n    }\n\n    /**\n     *\n     * Static method to search apis and documents based on content\n     * @static\n     * @param {Object} params APIs, Documents filtering parameters i:e { \"name\": \"MyBank API\"}\n     * @returns {Promise} promise object return from SwaggerClient-js\n     * @memberof API\n     */\n    static search(params) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return apiClient.then(client => {\n            return client.apis['Unified Search'].get_search(params, Resource._requestMetaData());\n        });\n    }\n\n    /**\n     * Get details of a given API\n     * @param id {string} UUID of the api.\n     * @param callback {function} A callback function to invoke after receiving successful response.\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    static get(id) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        const promisedAPI = apiClient.then(client => {\n            return client.apis['APIs'].get_apis__apiId_(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promisedAPI.then(response => {\n            return new API(response.body);\n        });\n    }\n\n    /**\n     * Get details of a given API Product\n     * @param id {string} UUID of the api product.\n     * @param callback {function} A callback function to invoke after receiving successful response.\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    static getProduct(id) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        const promisedAPI = apiClient.then(client => {\n            return client.apis['API Products'].get_api_products__apiProductId_(\n                {\n                    apiProductId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promisedAPI.then(response => {\n            return new API(response.body);\n        });\n    }\n\n    /**\n     *\n     * Delete an API given its UUID\n     * @static\n     * @param {String} id API UUID\n     * @returns {Promise} Swagger-Js promise object resolve to NT response object\n     * @memberof API\n     */\n    static delete(id) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return apiClient.then(client => {\n            return client.apis['APIs'].delete_apis__apiId_(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n    }\n\n    /**\n     *\n     * Delete an API Product given its UUID\n     * @static\n     * @param {String} id API Product UUID\n     * @returns {Promise} Swagger-Js promise object resolve to NT response object\n     * @memberof API\n     */\n    static deleteProduct(id) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return apiClient.then(client => {\n            return client.apis['API Products'].delete_api_products__apiProductId_(\n                {\n                    apiProductId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n    }\n\n    /**\n     * Get the available policies information by tier level.\n     * @param {String} policyLevel List API or Application or Resource type policies.parameter should be one\n     * of api, application, subscription and resource\n     * @returns {Promise}\n     *\n     */\n    static policies(policyLevel) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return apiClient.then(client => {\n            return client.apis['Throttling Policies'].getAllThrottlingPolicies(\n                {\n                    policyLevel: policyLevel,\n                },\n                this._requestMetaData(),\n            );\n        });\n    }\n\n    /**\n     * Get all the endpoint certificates.\n     * */\n    static getEndpointCertificates() {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return apiClient.then(client => {\n            return client.apis['Endpoint Certificates'].get_endpoint_certificates();\n        });\n    }\n\n    /**\n     * Upload endpoint certificate.\n     *\n     * @param {any} certificateFile The certificate file to be uploaded.\n     * @param {string} endpoint The certificate endpoint.\n     * @param {string} alias The certificate alias.\n     * */\n    static addCertificate(certificateFile, endpoint, alias) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return apiClient.then(\n            client => {\n                return client.apis['Endpoint Certificates'].post_endpoint_certificates({\n                    certificate: certificateFile,\n                    endpoint,\n                    alias,\n                });\n            },\n            this._requestMetaData({\n                'Content-Type': 'multipart/form-data',\n            }),\n        );\n    }\n\n    /**\n     * Upload endpoint certificate.\n     *\n     * @param {string} apiId API UUID\n     * @param {any} certificateFile The certificate file to be uploaded.\n     * @param {string} tier The tier the certificate needs to be associated.\n     * @param {string} alias The certificate alias.\n     * */\n    static addClientCertificate(apiId, certificateFile, tier, alias) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return apiClient.then(\n            client => {\n                return client.apis['Client Certificates'].post_apis__apiId__client_certificates({\n                    certificate: certificateFile,\n                    alias,\n                    apiId,\n                    tier,\n                });\n            },\n            this._requestMetaData({\n                'Content-Type': 'multipart/form-data',\n            }),\n        );\n    }\n\n     /**\n     * Get all certificates for a particular API.\n     *\n     * @param apiId api id of the api to which the certificate is added\n     */\n    static getAllClientCertificates(apiId) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return apiClient.then(\n            client => {\n                return client.apis['Client Certificates'].get_apis__apiId__client_certificates(\n                    { apiId: apiId },\n                    this._requestMetaData(),\n                );\n            },\n            this._requestMetaData({\n                'Content-Type': 'multipart/form-data',\n            }),\n        );\n    }\n\n    /**\n     * Get the status of the client certificate which matches the given alias.\n     *\n     * @param {string} alias The alias of the certificate which the information required.\n     * @param apiId api id of the api of which the certificate is retrieved.\n     * */\n    static getClientCertificateStatus(alias, apiId) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return apiClient.then(client => {\n            return client.apis['Client Certificates'].get_apis__apiId__client_certificates__alias_({\n                alias,\n                apiId,\n            });\n        }, this._requestMetaData());\n    }\n\n    /**\n     * Delete the endpoint certificate which represented by the given alias.\n     *\n     * @param {string} alias The alias of the certificate.\n     * @param apiId api id of the api of which the certificate is deleted.\n     * */\n    static deleteClientCertificate(alias, apiId) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return apiClient.then(client => {\n            return client.apis['Client Certificates'].delete_apis__apiId__client_certificates__alias_({\n                alias,\n                apiId,\n            });\n        }, this._requestMetaData());\n    }\n\n    /**\n     * Get the status of the endpoint certificate which matches the given alias.\n     *\n     * @param {string} alias The alias of the certificate which the information required.\n     * */\n    static getCertificateStatus(alias) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return apiClient.then(client => {\n            return client.apis['Endpoint Certificates'].get_endpoint_certificates__alias_({\n                alias: alias,\n            });\n        }, this._requestMetaData());\n    }\n\n    /**\n     * Delete the endpoint certificate which represented by the given alias.\n     *\n     * @param {string} alias The alias of the certificate\n     * */\n    static deleteEndpointCertificate(alias) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return apiClient.then(client => {\n            return client.apis['Endpoint Certificates'].delete_endpoint_certificates__alias_({\n                alias,\n            });\n        }, this._requestMetaData());\n    }\n\n    /**\n     * Get the available mediation policies by the api uuid.\n     * @param {String} apiId uuid\n     * @returns {Promise}\n     *\n     */\n    static getMediationPolicies(apiId) {\n        const restApiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return restApiClient.then((client) => {\n            return client.apis[\"API Mediation Policies\"].apisApiIdMediationPoliciesGet({\n                    apiId: apiId\n                },\n                this._requestMetaData(),\n            );\n        });\n    }\n\n    /**\n     * Add a mediation policy to a given api.\n     * @param {String} apiId uuid\n     * @returns {Promise}\n     *\n     */\n    static addMediationPolicy(policyFile, apiId, type) {\n        const restApiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return restApiClient.then((client) => {\n            return client.apis[\"API Mediation Policies\"].apisApiIdMediationPoliciesPost({\n                apiId: apiId,\n                type: type.toLowerCase(),\n                mediationPolicyFile: policyFile\n            },\n            this._requestMetaData({\n                'Content-Type': 'multipart/form-data'\n            }),\n            )\n        });\n    }\n\n    /**\n     * Get the available mediation policies by the mediation policy uuid and api.\n     * @param {String} seqId mediation policy uuid\n     * @param {String} apiId uuid\n     * @returns {Promise}\n     *\n     */\n    static getMediationPolicy(seqId, apiId) {\n        const restApiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return restApiClient.then((client) => {\n            return client.apis[\"API Mediation Policy\"].apisApiIdMediationPoliciesMediationPolicyIdGet({\n                    mediationPolicyId: seqId,\n                    apiId: apiId\n                },\n                this._requestMetaData(),\n            );\n        });\n    }\n\n    /**\n     * Delete the available mediation policies by the mediation policy uuid and api.\n     * @param {String} seqId mediation policy uuid\n     * @param {String} apiId uuid\n     * @returns {Promise}\n     *\n     */\n    static deleteMediationPolicy(seqId, apiId) {\n        const restApiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return restApiClient.then((client) => {\n            return client.apis[\"API Mediation Policy\"].apisApiIdMediationPoliciesMediationPolicyIdDelete({\n                    mediationPolicyId: seqId,\n                    apiId: apiId\n                },\n                this._requestMetaData(),\n            );\n        });\n    }\n\n    /**\n     * Update the available mediation policies by the mediation policy uuid and api.\n     * @param {String} seqId mediation policy uuid\n     * @param {String} apiId uuid\n     * @returns {Promise}\n     *\n     */\n    static updateMediationPolicyContent(seqId, apiId) {\n        const restApiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return restApiClient.then((client) => {\n            return client.apis[\"API Mediation Policy\"].apisApiIdMediationPoliciesMediationPolicyIdContentPut({\n                    mediationPolicyId: seqId,\n                    apiId: apiId,\n                    type: 'in',\n                },\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data'\n                }),\n            );\n        });\n    }\n\n    /**\n     * Get the content of a mediation policy.\n     * @param {String} mediationPolicyId mediation policy uuid\n     * @param {String} apiId uuid of the api\n     * @returns {Promise}\n     *\n     */\n    static getMediationPolicyContent(mediationPolicyId, apiId) {\n        const restApiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return restApiClient.then((client) => {\n            return client.apis[\"API Mediation Policy\"].apisApiIdMediationPoliciesMediationPolicyIdContentGet({\n                mediationPolicyId: mediationPolicyId,\n                apiId: apiId,\n                },\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data'\n                }),\n            );\n        });\n    }\n\n    /**\n     * Get global mediation policies.\n     * @returns {Promise}\n     *\n     */\n    static getGlobalMediationPolicies() {\n        const restApiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return restApiClient.then((client) => {\n            return client.apis[\"Global Mediation Policies\"].getAllGlobalMediationPolicies({},\n                this._requestMetaData(),\n            );\n        });\n    }\n\n    /**\n     * Get the content of a mediation policy.\n     * @param {String} mediationPolicyId mediation policy uuid\n     * @param {String} apiId uuid of the api\n     * @returns {Promise}\n     *\n     */\n    static getGlobalMediationPolicyContent(mediationPolicyId) {\n        const restApiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return restApiClient.then((client) => {\n            return client.apis[\"Global Mediation Policy\"].getGlobalMediationPolicyContent({\n                mediationPolicyId: mediationPolicyId,\n            },\n                this._requestMetaData(),\n            );\n        });\n    }\n\n    /**\n     * @static\n     * Get all the external stores configured for the current environment\n     * @returns {Promise}\n     */\n    static getAllExternalStores() {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return apiClient.then(client => {\n            return client.apis['External Stores'].getAllExternalStores(\n                this._requestMetaData(),\n            );\n        });\n    }\n\n    /**\n     * @static\n     * Get published external stores for the given API\n     * @param {String} apiId uuid\n     * @returns {Promise}\n     */\n    static getPublishedExternalStores(apiId) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return apiClient.then(client => {\n            return client.apis['External Stores'].getAllPublishedExternalStoresByAPI(\n                { apiId: apiId },\n                this._requestMetaData,\n            );\n        });\n    }\n\n    /**\n     * @static\n     * Publish the given API to given set of external stores and remove from others which are not specified\n     * @param {String} apiId uuid\n     * @param {Array} externalStoreIds \n     */\n    static publishAPIToExternalStores(apiId, externalStoreIds) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return apiClient.then(client => {\n            return client.apis['External Stores'].publishAPIToExternalStores(\n                {\n                    apiId: apiId,\n                    externalStoreIds: externalStoreIds\n                }\n                , this._requestMetaData,\n            );\n        });\n    }\n}\n\nAPI.CONSTS = {\n    API: 'API',\n    APIProduct: 'APIProduct',\n};\n\nObject.freeze(API.CONSTS);\n\nexport default API;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { amber, green } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst useStyles1 = makeStyles(theme => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n}));\n\nfunction MySnackbarContentWrapper(props) {\n    const classes = useStyles1();\n    const {\n        className, message, onClose, variant, ...other\n    } = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={clsx(classes[variant], className)}\n            aria-describedby='client-snackbar'\n            message={\n                <span id='client-snackbar' className={classes.message}>\n                    <Icon className={clsx(classes.icon, classes.iconVariant)} />\n                    {message}\n                </span>\n            }\n            action={[\n                <IconButton key='close' aria-label='close' color='inherit' onClick={onClose}>\n                    <CloseIcon className={classes.icon} />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n\nMySnackbarContentWrapper.propTypes = {\n    className: PropTypes.string.isRequired,\n    message: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n};\n\nexport default function Message(props) {\n    const { message, handleClose, type } = props;\n    return (\n        <Snackbar\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            open\n            onClose={handleClose}\n        >\n            <MySnackbarContentWrapper onClose={handleClose} variant={type} message={message} />\n        </Snackbar>\n    );\n}\nMessage.propTypes = {\n    message: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n    handleClose: PropTypes.func.isRequired,\n    type: PropTypes.string.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Notification from 'rc-notification';\nimport Configurations from 'Config';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport Message from './Message';\n\nconst theme = createMuiTheme(Configurations.themes.light);\n\n/**\n * Common alerting/message displaying component for Store application, Pre-set vertical: 'top',\n horizontal: 'center' and close action for consistent UX through out the app.\n Alert messages are mounted outside the app's root DOM element\n */\nclass Alert {\n    /**\n     * Creates an instance of Alert.\n     * @param {String} message Message which needs to be displayed\n     * @param {any} type Message category, i:e Alert, Info, Error ect\n     * @param {any} duration Duration of the massage needs to be visible on the page\n     * @param {any} onClose Callback function to trigger when message get closed\n     * @memberof Alert\n     */\n    constructor(message, type, duration, onClose) {\n        this.defaultTop = Alert.defaultTop;\n        this.key = Alert.count++;\n        this.type = type;\n        this.message = message;\n        this.onClose = onClose;\n        this.duration = duration || Alert.defaultDuration;\n        if (typeof duration === 'function') {\n            this.onClose = duration;\n            this.duration = Alert.defaultDuration;\n        }\n        this.remove = this.remove.bind(this);\n    }\n\n    /**\n     * Show the alert message according to the parameters given in the constructor, Using the Alert.messageInstance\n     */\n    show() {\n        const promisedInstance = this._getMessageInstance();\n        const { onClose } = this;\n        promisedInstance\n            .then((instance) => {\n                instance.notice({\n                    closable: true,\n                    onClose,\n                    key: this.key,\n                    duration: this.duration,\n                    content: (\n                        <MuiThemeProvider theme={theme}>\n                            <Message handleClose={this.remove} message={this.message} type={this.type} />\n                        </MuiThemeProvider>\n                    ),\n                });\n            })\n            .catch(error => console.error('Error while showing alert' + error));\n        /* TODO: Remove above console error with logging library error method */\n    }\n\n    /**\n     * Remove current message from view\n     */\n    remove() {\n        const promisedInstance = this._getMessageInstance();\n        promisedInstance.then((instance) => {\n            instance.removeNotice(this.key);\n        });\n    }\n\n    /**\n     * Return a promise resolving to an instance of RC-Notification which can be use to display a notification on screen\n     * @returns {Promise} Promise object with new React component for alert\n     * @private\n     */\n    _getMessageInstance() {\n        return new Promise((resolve) => {\n            if (Alert.messageInstance) {\n                resolve(Alert.messageInstance);\n            } else {\n                Notification.newInstance(\n                    {\n                        transitionName: 'move-down',\n                        style: {\n                            zIndex: '2000',\n                            top: 0,\n                            right: 0,\n                            marginLeft: '2%',\n                            position: 'fixed',\n                        },\n                    },\n                    (instance) => {\n                        Alert.messageInstance = instance;\n                        resolve(Alert.messageInstance);\n                    },\n                );\n            }\n        });\n    }\n\n    /**\n     * Can be used to configure the global Alert configurations, Currently support position top alignment and\n     * message display duration in seconds\n     * If set here , will use in all the places where Alert has been used\n     * @param {Object} options i:e {top: '10px', duration: 30}\n     */\n    static config(options) {\n        const { top, duration } = options;\n        if (top !== undefined) {\n            Alert.defaultTop = top;\n            Alert.messageInstance = null; // delete messageInstance for new defaultTop\n        }\n        if (duration !== undefined) {\n            Alert.defaultDuration = duration;\n        }\n    }\n}\n\nAlert.messageInstance = null;\n/* Class property to hold a RC-Notification instance */\nAlert.count = 1;\n/* Number of Notifications showed, This is used to generate unique key for each message */\nAlert.defaultDuration = 5;\n/* In seconds */\nAlert.defaultTop = 0;\nAlert.CONSTS = {\n    INFO: 'info',\n    SUCCESS: 'success',\n    ERROR: 'error',\n    WARN: 'warning',\n    LOADING: 'loading',\n};\nObject.freeze(Alert.CONSTS);\nexport default {\n    info: (message, duration, onClose) => {\n        const msg = new Alert(message, Alert.CONSTS.INFO, duration, onClose);\n        msg.show();\n        return msg;\n    },\n    success: (message, duration, onClose) => {\n        const msg = new Alert(message, Alert.CONSTS.SUCCESS, duration, onClose);\n        msg.show();\n        return msg;\n    },\n    error: (message, duration, onClose) => {\n        const msg = new Alert(message, Alert.CONSTS.ERROR, duration, onClose);\n        msg.show();\n        return msg;\n    },\n    warning: (message, duration, onClose) => {\n        const msg = new Alert(message, Alert.CONSTS.WARN, duration, onClose);\n        msg.show();\n        return msg;\n    },\n    loading: (message, duration, onClose) => {\n        const msg = new Alert(message, Alert.CONSTS.LOADING, duration, onClose);\n        msg.show();\n        return msg;\n    },\n    configs: Alert.config,\n    CONSTS: Alert.CONSTS,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\n\n/**\n * Base component for all API create forms\n *\n * @param {Object} props title and children components are expected\n * @returns {React.Component} Base element\n */\nexport default function APICreateBase(props) {\n    const { title, children } = props;\n    return (\n        <Grid container spacing={3}>\n            <Grid item sm={12} md={12} />\n            {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n            <Grid item sm={0} md={3} />\n            <Grid item sm={12} md={6}>\n                <Grid container spacing={5}>\n                    <Grid item md={12}>\n                        {title}\n                    </Grid>\n                    <Grid item md={12}>\n                        <Paper elevation={0}>{children}</Paper>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\nAPICreateBase.propTypes = {\n    title: PropTypes.element.isRequired,\n    children: PropTypes.element.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport Joi from '@hapi/joi';\nimport API from 'AppData/api';\n\n/*\n* eslint validation rule for no-unused-vars has been disabled in this component.\n* According to the Joi extension, it is required to provide required four input\n* arguments to custom Joi schema validate function.\n* Ref: https://hapi.dev/family/joi/?v=15.1.1#extendextension\n*/\nconst roleSchema = Joi.extend(joi => ({\n    base: joi.string(),\n    name: 'systemRole',\n    rules: [\n        {\n            name: 'role',\n            validate(params, value, state, options) { // eslint-disable-line no-unused-vars\n                const api = new API();\n                return api.validateSystemRole(value);\n            },\n        },\n    ],\n}));\n\nconst userRoleSchema = Joi.extend(joi => ({\n    base: joi.string(),\n    name: 'userRole',\n    rules: [\n        {\n            name: 'role',\n            validate(params, value, state, options) { // eslint-disable-line no-unused-vars\n                const api = new API();\n                return api.validateUSerRole(value);\n            },\n        },\n    ],\n}));\n\nconst apiSchema = Joi.extend(joi => ({\n    base: joi.string(),\n    name: 'api',\n    rules: [\n        {\n            name: 'isAPIParameterExist',\n            validate(params, value, state, options) { // eslint-disable-line no-unused-vars\n                const api = new API();\n                return api.validateAPI(value);\n            },\n        },\n    ],\n}));\n\nconst documentSchema = Joi.extend(joi => ({\n    base: joi.object(),\n    name: 'document',\n    rules: [\n        {\n            name: 'isDocumentPresent',\n            validate(params, value, state, options) { // eslint-disable-line no-unused-vars\n                const api = new API();\n                return api.validateDocument(value.id, value.name);\n            },\n        },\n    ],\n}));\n\nconst definition = {\n    apiName: Joi.string().regex(/^[a-zA-Z0-9]{1,30}$/),\n    apiVersion: Joi.string().regex(/^[a-zA-Z0-9.]{1,30}$/),\n    apiContext: Joi.string().regex(/^[a-zA-Z0-9{}/]{1,30}$/),\n    url: Joi.string().uri(),\n    role: roleSchema.systemRole().role(),\n    userRole: userRoleSchema.userRole().role(),\n    apiParameter: apiSchema.api().isAPIParameterExist(),\n    apiDocument: documentSchema.document().isDocumentPresent(),\n};\n\nexport default definition;\n","import React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport API from 'AppData/api';\n\n/**\n * Trottling Policies dropdown selector used in minimized API Create form\n * @export\n * @param {*} props\n * @returns {React.Component}\n */\nexport default function SelectPolicies(props) {\n    const {\n        onChange, policies: selectedPolicies, multiple, required, helperText,\n    } = props;\n    const [policies, setPolicies] = useState({});\n    useEffect(() => {\n        API.policies('subscription').then(response => setPolicies(response.body));\n    }, []);\n\n    if (!policies.list) {\n        return <CircularProgress />;\n    } else {\n        return (\n            <TextField\n                required={required}\n                fullWidth\n                id='outlined-select-currency'\n                select\n                label='Business plan(s)'\n                value={selectedPolicies}\n                name='policies'\n                onChange={onChange}\n                SelectProps={{\n                    multiple,\n                    renderValue: selected => (Array.isArray(selected) ? selected.join(', ') : selected),\n                }}\n                helperText={helperText}\n                margin='normal'\n                variant='outlined'\n            >\n                {policies.list.map(policy => (\n                    <MenuItem dense disableGutters={multiple} key={policy.name} value={policy.displayName}>\n                        {multiple && <Checkbox checked={selectedPolicies.includes(policy.name)} />}\n                        <ListItemText primary={policy.displayName} secondary={policy.description} />\n                    </MenuItem>\n                ))}\n            </TextField>\n        );\n    }\n}\n\nSelectPolicies.defaultProps = {\n    policies: [],\n    multiSelect: true,\n    required: false,\n    helperText: 'Select one or multiple throttling policy for the API',\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport APIValidation from 'AppData/APIValidation';\n\nimport SelectPolicies from './SelectPolicies';\n\nconst useStyles = makeStyles(theme => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n    },\n}));\n\n/**\n *\n * Return the actual API context that will be exposed in the gateway.\n * If the context value contains `{version}` placeholder text it will be replaced with the actual version value.\n * If there is no such placeholder text in the context, The version will be appended to the context\n * i:e /context/version\n * Parameter expect an object containing `context` and `version` properties.\n * @param {String} context API Context\n * @param {String} version API Version string\n * @returns {String} Derived actual context string\n */\nfunction actualContext({ context, version }) {\n    let initialContext = '{context}/{version}';\n    if (context) {\n        initialContext = context;\n        if (context.indexOf('{version}') < 0) {\n            initialContext = context + '/{version}';\n        }\n    }\n    if (version) {\n        initialContext = initialContext.replace('{version}', version);\n    }\n    return initialContext;\n}\n\n/**\n * Improved API create default form\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function DefaultAPIForm(props) {\n    const {\n        onChange, onValidate, api, isAPIProduct,\n    } = props;\n    const classes = useStyles();\n    const [validity, setValidity] = useState({});\n\n    // Check the provided API validity on mount, TODO: Better to use Joi schema here ~tmkb\n    useEffect(() => {\n        onValidate(Boolean(api.name) && Boolean(api.version) && Boolean(api.context));\n    }, []);\n    /**\n     * Trigger the provided onValidate call back on each input validation run\n     * Do the validation state aggregation and call the onValidate method with aggregated value\n     * @param {string} field The input field.\n     * @param {string} value Validation state object\n     */\n    function validate(field, value) {\n        switch (field) {\n            case 'name':\n            {\n                const nameValidity = APIValidation.apiName.required().validate(value).error;\n                if (nameValidity === null) {\n                    APIValidation.apiParameter.validate(field + ':' + value).then((isValid) => {\n                        setValidity(() => {\n                            if (isValid) {\n                                return { ...validity, name: { message: 'API with name ' + value + ' exists' } };\n                            }\n                            return { ...validity, name: nameValidity };\n                        });\n                    });\n                } else {\n                    setValidity({ ...validity, name: nameValidity });\n                }\n                break;\n            }\n            case 'context': {\n                const contextValidity = APIValidation.apiContext.required().validate(value).error;\n                if (contextValidity === null) {\n                    const apiContext = value.includes('/') ?\n                        value + '/' + api.version : '/' + value + '/' + api.version;\n                    APIValidation.apiParameter.validate(field + ':' + apiContext).then((isValid) => {\n                        setValidity(() => {\n                            if (isValid) {\n                                return { ...validity, context: { message: 'API context with version exists' } };\n                            }\n                            return { ...validity, context: contextValidity, version: null };\n                        });\n                    });\n                } else {\n                    setValidity({ ...validity, context: contextValidity });\n                }\n                break;\n            }\n            case 'version': {\n                const versionValidity = APIValidation.apiVersion.required().validate(value).error;\n                if (versionValidity === null) {\n                    const apiVersion = api.context.includes('/') ?\n                        api.context + '/' + value : '/' + api.context + '/' + value;\n                    APIValidation.apiParameter.validate(field + ':' + apiVersion).then((isValid) => {\n                        setValidity(() => {\n                            if (isValid) {\n                                return { ...validity, version: { message: 'API context with version exists' } };\n                            }\n                            return { ...validity, version: versionValidity, context: null };\n                        });\n                    });\n                } else {\n                    setValidity({ ...validity, version: versionValidity });\n                }\n                break;\n            }\n            default: {\n                // url\n                const urlValidity = value ? APIValidation.url.validate(value).error : null;\n                setValidity({ ...validity, endpointURL: urlValidity });\n                break;\n            }\n        }\n    }\n\n    useEffect(() => {\n        let isFormValid = Object.entries(validity).length > 0 &&\n            Object.entries(validity).map(([key, value]) =>\n                value === null || value === undefined || (isAPIProduct && ['version', 'endpoints'].includes(key)))\n                .reduce((acc, cVal) => acc && cVal); // Aggregate the individual validation states\n        // API Name , Version & Context is a must that's why `&&` chain\n        // if isAPIProduct gets true version validation has been skipped\n        isFormValid =\n            isFormValid && Boolean(api.name) && (isAPIProduct || Boolean(api.version)) && Boolean(api.context);\n        onValidate(isFormValid, validity);\n    }, [validity]);\n\n    return (\n        <Grid item md={9}>\n            <form noValidate autoComplete='off'>\n                <TextField\n                    autoFocus\n                    fullWidth\n                    id='outlined-name'\n                    error={validity.name}\n                    label={\n                        <React.Fragment>\n                            <sup className={classes.mandatoryStar}>*</sup>{' '}\n                            <FormattedMessage id='Apis.Create.WSDL.Steps.DefaultAPIForm.name' defaultMessage='Name' />\n                        </React.Fragment>\n                    }\n                    helperText={\n                        (validity.name && validity.name.message) ||\n                        'API name can not contain spaces or any special characters'\n                    }\n                    value={api.name}\n                    name='name'\n                    onChange={onChange}\n                    InputProps={{\n                        onBlur: ({ target: { value } }) => {\n                            validate('name', value);\n                        },\n                    }}\n                    margin='normal'\n                    variant='outlined'\n                />\n                <Grid container spacing={2}>\n                    {!isAPIProduct ? (\n                        <React.Fragment>\n                            <Grid item md={8}>\n                                <TextField\n                                    fullWidth\n                                    id='outlined-name'\n                                    error={validity.context}\n                                    label={\n                                        <React.Fragment>\n                                            <sup className={classes.mandatoryStar}>*</sup>{' '}\n                                            <FormattedMessage\n                                                id='Apis.Create.WSDL.Steps.DefaultAPIForm.context'\n                                                defaultMessage='Context'\n                                            />\n                                        </React.Fragment>\n                                    }\n                                    name='context'\n                                    value={api.context}\n                                    onChange={onChange}\n                                    InputProps={{\n                                        onBlur: ({ target: { value } }) => {\n                                            validate('context', value);\n                                        },\n                                    }}\n                                    helperText={\n                                        (validity.context && validity.context.message) ||\n                                        `API will be exposed in ${actualContext(api)} context at the gateway`\n                                    }\n                                    margin='normal'\n                                    variant='outlined'\n                                />\n                            </Grid>\n                            <Grid item md={4}>\n                                <TextField\n                                    fullWidth\n                                    error={validity.version}\n                                    id='outlined-name'\n                                    label={\n                                        <React.Fragment>\n                                            <sup className={classes.mandatoryStar}>*</sup>{' '}\n                                            <FormattedMessage\n                                                id='Apis.Create.WSDL.Steps.DefaultAPIForm.version'\n                                                defaultMessage='Version'\n                                            />\n                                        </React.Fragment>\n                                    }\n                                    name='version'\n                                    value={api.version}\n                                    onChange={onChange}\n                                    InputProps={{\n                                        onBlur: ({ target: { value } }) => {\n                                            validate('version', value);\n                                        },\n                                    }}\n                                    helperText={validity.version && validity.version.message}\n                                    margin='normal'\n                                    variant='outlined'\n                                />\n                            </Grid>\n                        </React.Fragment>\n\n                    ) :\n                        <React.Fragment>\n                            <Grid item md={12}>\n                                <TextField\n                                    fullWidth\n                                    id='outlined-name'\n                                    error={validity.context}\n                                    label={\n                                        <React.Fragment>\n                                            <sup className={classes.mandatoryStar}>*</sup>{' '}\n                                            <FormattedMessage\n                                                id='Apis.Create.WSDL.Steps.DefaultAPIForm.context'\n                                                defaultMessage='Context'\n                                            />\n                                        </React.Fragment>\n                                    }\n                                    name='context'\n                                    value={api.context}\n                                    onChange={onChange}\n                                    InputProps={{\n                                        onBlur: ({ target: { value } }) => {\n                                            validate('url', value);\n                                        },\n                                    }}\n                                    helperText={\n                                        (validity.context && validity.context.message) ||\n                            `API will be exposed in ${actualContext(api)} context at the gateway`\n                                    }\n                                    margin='normal'\n                                    variant='outlined'\n                                />\n                            </Grid>\n                        </React.Fragment>\n                    }\n                </Grid>\n                {!isAPIProduct && (\n                    <TextField\n                        fullWidth\n                        id='outlined-name'\n                        label='Endpoint'\n                        name='endpoint'\n                        value={api.endpoint}\n                        onChange={onChange}\n                        InputProps={{\n                            onBlur: ({ target: { value } }) => {\n                                validate({\n                                    ...validity,\n                                    endpointURL: value ? APIValidation.url.validate(value).error : null,\n                                });\n                            },\n                        }}\n                        helperText={\n                            validity.endpointURL && (\n                                <span>\n                                    Enter a valid {''}\n                                    <a\n                                        rel='noopener noreferrer'\n                                        target='_blank'\n                                        href='http://tools.ietf.org/html/rfc3986'\n                                    >\n                                        RFC 3986\n                                    </a>{' '}\n                                    URI\n                                </span>\n                            )\n                        }\n                        error={validity.endpointURL}\n                        margin='normal'\n                        variant='outlined'\n                    />\n                )}\n\n                <SelectPolicies policies={api.policies} onChange={onChange} />\n            </form>\n            <Grid container direction='row' justify='flex-end' alignItems='center'>\n                <Grid item>\n                    <Typography variant='caption' display='block' gutterBottom>\n                        <sup style={{ color: 'red' }}>*</sup> Mandatory fields\n                    </Typography>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nDefaultAPIForm.defaultProps = {\n    onValidate: () => {},\n    api: {}, // Uncontrolled component\n};\nDefaultAPIForm.propTypes = {\n    api: PropTypes.shape({}),\n    isAPIProduct: PropTypes.shape({}).isRequired,\n    onChange: PropTypes.func.isRequired,\n    onValidate: PropTypes.func,\n};\n","/**\n * Copyright (c) 2019, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable */\nimport API from 'AppData/api';\nimport APIClientFactory from './APIClientFactory';\nimport Utils from './Utils';\nimport Resource from './Resource';\n\n/**\n * An abstract representation of an API Product\n */\nclass APIProduct extends Resource {\n    constructor(name, version, context, kwargs) {\n        super();\n        let properties = kwargs;\n        if (name instanceof Object) {\n            properties = name;\n        } else {\n            this.name = name;\n            this.version = version;\n            this.context = context;\n            this.isDefaultVersion = false;\n            this.gatewayEnvironments = ['Production and Sandbox'];\n            this.transport = ['http', 'https'];\n            this.visibility = 'PUBLIC';\n            this.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: '',\n                },\n                production_endpoints: {\n                    url: '',\n                },\n            };\n        }\n        this._data = properties;\n        for (const key in properties) {\n            if (Object.prototype.hasOwnProperty.call(properties, key)) {\n                this[key] = properties[key];\n            }\n        }\n        this.apiType = API.CONSTS.APIProduct;\n        this.getType = this.getType.bind(this);\n    }\n\n    /**\n     *\n     * @param data\n     * @returns {object} Metadata for API request\n     * @private\n     */\n    _requestMetaData() {\n        Resource._requestMetaData();\n    }\n\n    getType() {\n        return this.type;\n    }\n\n    /**\n     * Create an API Product with the given parameters in template\n     * @param {Object} api_product_data - APIProduct data which need to fill the placeholder values in the @get_template\n     * @returns {Promise} Promise after creating API Product\n     */\n    saveProduct() {\n        const promisedAPIResponse = this.client.then(client => {\n            const properties = client.spec.definitions.APIProduct.properties;\n            const data = {};\n\n            Object.keys(this).forEach(apiAttribute => {\n                if (apiAttribute in properties) {\n                    if (apiAttribute != 'apiType') {\n                    data[apiAttribute] = this[apiAttribute];\n                    }\n                }\n            });\n            const payload = {\n                body: data,\n                'Content-Type': 'application/json',\n            };\n            return client.apis['API Products'].post_api_products(payload, this._requestMetaData());\n        });\n        return promisedAPIResponse.then(response => {\n            return new API(response.body);\n        });\n    }\n    /**\n     * Create an API Product with the given parameters in template and call the callback method given optional.\n     * @param {Object} apiData - API data which need to fill the placeholder values in the @get_template\n     * @returns {Promise} Promise after creating and optionally calling the callback method.\n     */\n    create(apiData) {\n        let payload;\n        let promise_create;\n\n        payload = {\n            body: apiData,\n            'Content-Type': 'application/json',\n        };\n        promise_create = this.client.then(client => {\n            return client.apis['API Products'].post_api_products(payload, this._requestMetaData());\n        });\n\n        return promise_create;\n    }\n    /**\n     *\n     * Instance method of the API class to provide raw JSON object\n     * which is API body friendly to use with REST api requests\n     * Use this method instead of accessing the private _data object for\n     * converting to a JSON representation of an API object.\n     * Note: This is shallow coping\n     * Basically this is the revers operation in constructor.\n     * This method simply iterate through all the object properties\n     * and copy their values to new object excluding the properties in excludes list.\n     * So use this method sparingly!!\n     * @memberof API\n     * @param {Array} [userExcludes=[]] List of properties that are need to be excluded from the generated JSON object\n     * @returns {JSON} JSON representation of the API\n     */\n    toJSON(resource = this, userExcludes = []) {\n        var copy = {},\n            excludes = ['_data', 'client', 'type', ...userExcludes];\n        for (var prop in resource) {\n            if (!excludes.includes(prop)) {\n                copy[prop] = resource[prop];\n            }\n        }\n        return copy;\n    }\n\n\n    /**\n     * Get details of a given APIProduct\n     * @param id {string} UUID of the api-product.\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    static get(id) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        const promisedAPIProduct = apiClient.then((client) => {\n            return client.apis['API Products'].get_api_products__apiProductId_({\n                apiProductId: id,\n            }, this._requestMetaData());\n        }).catch((error) => {\n            console.error(error);\n        });\n        return promisedAPIProduct.then((response) => {\n            return new APIProduct(response.body);\n        });\n    }\n\n    /**\n     *\n     * Static method for get all API Products for current environment user.\n     * @param {Object} params API Products filtering parameters i:e { \"name\": \"MyBank Product\"}\n     * @returns {Promise} promise object return from SwaggerClient-js\n     */\n    static all(params) {\n        let query = '';\n        if (params && 'query' in params) {\n            for (const [key, value] of Object.entries(params.query)) {\n                query += `${key}:${value},`;\n            }\n            params.query = query;\n        }\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        const promisedProducts = apiClient.then((client) => {\n            return client.apis['API Products'].get_api_products(params, Resource._requestMetaData());\n        }).catch((error) => {\n            console.error(error);\n        });\n        return promisedProducts.then((response) => {\n            response.obj.apiType = API.CONSTS.APIProduct;\n            return response;\n        });\n    }\n\n    /**\n     * Update an api Product via PUT HTTP method, Need to give the updated API Product object as the argument.\n     * @param apiProduct {Object} Updated API Product object(JSON) which needs to be updated\n     */\n    update(updatedProperties) {\n        const updatedAPI = { ...this.toJSON(), ...this.toJSON(updatedProperties) };\n        const promisedUpdate = this.client.then((client) => {\n            const payload = {\n                apiProductId: updatedAPI.id,\n                body: updatedAPI\n            };\n            return client.apis['API Products'].put_api_products__apiProductId_(payload);\n        });\n        return promisedUpdate;\n    }\n\n    /**\n     * Get the thumnail of an API Product\n     *\n     * @param id {string} UUID of the api product\n     */\n    getAPIProductThumbnail(id) {\n        const promisedAPIThumbnail = this.client.then((client) => {\n            return client.apis['API Products'].get_api_products__apiProductId__thumbnail(\n                {\n                    apiProductId: id,\n                },\n                this._requestMetaData(),\n            );\n        }).catch((error) => {\n            console.error(error);\n        });\n\n        return promisedAPIThumbnail;\n    }\n\n    /**\n     * Add new thumbnail image to an API Product\n     *\n     * @param {String} id id of the API Product\n     * @param {File} imageFile thumbnail image to be uploaded\n     */\n    addAPIProductThumbnail(id, imageFile) {\n        const promisedAddAPIThumbnail = this.client.then((client) => {\n            const payload = {\n                apiProductId: id,\n                file: imageFile,\n                'Content-Type': imageFile.type,\n            };\n            return client.apis['API Products'].put_api_products__apiProductId__thumbnail(\n                payload,\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data',\n                }),\n            );\n        }).catch((error) => {\n            console.error(error);\n        });\n\n        return promisedAddAPIThumbnail;\n    }\n\n    /**\n     *\n     * Delete an API Product given its UUID\n     * @static\n     * @param {String} id API Product UUID\n     */\n    static delete(id) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return apiClient.then((client) => {\n            return client.apis['API Products'].delete_api_products__apiProductId_({\n                apiProductId: id,\n            }, this._requestMetaData());\n        }).catch((error) => {\n            console.error(error);\n        });\n    }\n\n    /**\n     * Add document to API Product\n     * @param {*} id API Product ID to which the document should be attached\n     * @param {*} body\n     */\n    addDocument(id, body) {\n        const promisedAddDocument = this.client.then((client) => {\n            const payload = {\n                apiProductId: id,\n                body,\n                'Content-Type': 'application/json',\n            };\n            return client.apis['API Product Documents'].post_api_products__apiProductId__documents(\n                payload,\n                this._requestMetaData(),\n            );\n        }).catch((error) => {\n            console.error(error);\n        });\n        return promisedAddDocument;\n    }\n\n    /**\n     * Returns documents attached to a given API Product\n     *\n     * @param {String} id API Product UUID\n     */\n    getDocuments(id) {\n        const promisedDocuments = this.client.then((client) => {\n            return client.apis['API Product Documents'].get_api_products__apiProductId__documents(\n                {\n                    apiProductId: id,\n                },\n                this._requestMetaData(),\n            );\n        }).catch((error) => {\n            console.error(error);\n        });\n        return promisedDocuments;\n    }\n\n    /**\n     * Updates a product document\n     * @param {*} productId\n     * @param {*} docId\n     * @param {*} body\n     */\n    updateDocument(productId, docId, body) {\n        const promisedUpdateDocument = this.client.then((client) => {\n            const payload = {\n                apiProductId: productId,\n                body,\n                documentId: docId,\n                'Content-Type': 'application/json',\n            };\n            return client.apis['API Product Documents'].put_api_products__apiProductId__documents__documentId_(\n                payload,\n                this._requestMetaData(),\n            ).catch((error) => {\n                console.error(error);\n            });\n        });\n        return promisedUpdateDocument;\n    }\n\n\n    /**\n     * Get specified document attached to specified product\n     * @param {*} productId\n     * @param {*} docId\n     */\n    getDocument(productId, docId) {\n        const promisedDocument = this.client.then((client) => {\n            return client.apis['API Product Documents'].get_api_products__apiProductId__documents__documentId_(\n                {\n                    apiProductId: productId,\n                    documentId: docId,\n                },\n                this._requestMetaData(),\n            );\n        }).catch((error) => {\n            console.error(error);\n        });\n        return promisedDocument;\n    }\n\n    /**\n     * Add inline content to a INLINE type document\n     * @param {*} apiProductId API Product ID\n     * @param {*} documentId Document ID\n     * @param {*} sourceType\n     * @param {*} inlineContent Content to be added to document\n     */\n    addInlineContentToDocument(apiProductId, documentId, sourceType, inlineContent) {\n        const promise = this.client.then((client) => {\n            const payload = {\n                apiProductId,\n                documentId,\n                sourceType,\n                inlineContent,\n                'Content-Type': 'application/json',\n            };\n            return client.apis['API Product Documents'].post_api_products__apiProductId__documents__documentId__content(\n                payload,\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data',\n                }),\n            );\n        }).catch((error) => {\n            console.error(error);\n        });\n        return promise;\n    }\n\n    /**\n     * Get the inline content of a given document\n     * @param {*} apiProductId\n     * @param {*} docId\n     */\n    getInlineContentOfDocument(apiProductId, docId) {\n        const promisedDocContent = this.client.then((client) => {\n            const payload = {\n                apiProductId,\n                documentId: docId,\n            };\n            return client.apis['API Product Documents']\n                .get_api_products__apiProductId__documents__documentId__content(payload);\n        }).catch((error) => {\n            console.error(error);\n        });\n        return promisedDocContent;\n    }\n\n    /**\n     * Delete specified document\n     * @param {*} productId\n     * @param {*} docId\n     */\n    deleteDocument(productId, docId) {\n        const promiseDeleteDocument = this.client.then((client) => {\n            return client.apis['API Product Documents'].delete_api_products__apiProductId__documents__documentId_(\n                {\n                    apiProductId: productId,\n                    documentId: docId,\n                },\n                this._requestMetaData(),\n            );\n        }).catch((error) => {\n            console.error(error);\n        });\n        return promiseDeleteDocument;\n    }\n\n    /**\n     * Add a File resource to a document\n     * @param {*} productId\n     * @param {*} docId\n     * @param {*} fileToDocument\n     */\n    addFileToDocument(productId, docId, fileToDocument) {\n        const promiseAddFileToDocument = this.client.then((client) => {\n            const payload = {\n                apiProductId: productId,\n                documentId: docId,\n                file: fileToDocument,\n                'Content-Type': 'application/json',\n            };\n            return client.apis['API Product Documents'].post_api_products__apiProductId__documents__documentId__content(\n                payload,\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data',\n                }),\n            );\n        });\n\n        return promiseAddFileToDocument;\n    }\n\n    /**\n     * Update an api swagger via PUT HTTP method\n     * @param {*} swagger \n     */\n    updateSwagger(swagger) {\n        const promisedUpdate = this.client.then((client) => {\n            const payload = {\n                apiProductId: this.id,\n                apiDefinition: JSON.stringify(swagger),\n                'Content-Type': 'multipart/form-data',\n            };\n            return client.apis['API Products'].put_api_products__apiProductId__swagger(\n                payload,\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data'\n                }),\n            ).catch((error) => {\n                console.error(error);\n            });\n        });\n        return promisedUpdate.then(response => {\n            return this;\n        });\n    }\n\n    /**\n     * Get the swagger of an API Product\n     * @param id {String} UUID of the API Product in which the swagger is needed\n     */\n    getSwagger(id) {\n        const promiseGet = this.client.then((client) => {\n            return client.apis['API Products'].get_api_products__apiProductId__swagger({\n                apiProductId: id\n            }, this._requestMetaData());\n        }).catch((error) => {\n            console.error(error);\n        });\n        return promiseGet;\n    }\n}\n\nexport default APIProduct;","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport API from 'AppData/api';\n\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APIProduct from 'AppData/APIProduct';\n\n/**\n * Handle API creation from WSDL.\n *\n * @export\n * @param {*} props\n * @returns\n */\nfunction APICreateDefault(props) {\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        formValidity: false,\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name, version, context, endpoint, policies,\n        } = apiInputs;\n        const apiData = {\n            name,\n            version,\n            context,\n            policies,\n        };\n        if (endpoint) {\n            apiData.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        apiData.gatewayEnvironments = ['Production and Sandbox'];\n        if (props.isAPIProduct) {\n            const newAPIProduct = new APIProduct(apiData);\n            newAPIProduct.saveProduct(apiData)\n                .then((apiProduct) => {\n                    Alert.info('API Product created successfully');\n                    props.history.push(`/api-products/${apiProduct.id}/overview`);\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                    } else {\n                        Alert.error('Something went wrong while adding the API Product');\n                    }\n                })\n                .finally(() => setCreating(false));\n        } else {\n            const newAPI = new API(apiData);\n            newAPI\n                .save()\n                .then((api) => {\n                    Alert.info('API created successfully');\n                    props.history.push(`/apis/${api.id}/overview`);\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                    } else {\n                        Alert.error('Something went wrong while adding the API');\n                    }\n                    console.error(error);\n                })\n                .finally(() => setCreating(false));\n        }\n    }\n\n    return (\n        <APICreateBase\n            title={\n                props.isAPIProduct ? (\n                    <React.Fragment>\n                        <Typography variant='h5'>\n                            <FormattedMessage\n                                id='Apis.Create.Default.APICreateDefault.apiProduct.heading'\n                                defaultMessage='Create an API Product'\n                            />\n                        </Typography>\n                        <Typography variant='caption'>\n                            <FormattedMessage\n                                id='Apis.Create.Default.APICreateDefault.apiProduct.sub.heading'\n                                defaultMessage={\n                                    'Create an API Product providing Name, Context parameters' +\n                                ' and optionally bushiness plans'\n                                }\n                            />\n                        </Typography>\n                    </React.Fragment>\n                ) :\n                    (\n                        <React.Fragment>\n                            <Typography variant='h5'>\n                                <FormattedMessage\n                                    id='Apis.Create.Default.APICreateDefault.api.heading'\n                                    defaultMessage='Create an API'\n                                />\n                            </Typography>\n                            <Typography variant='caption'>\n                                <FormattedMessage\n                                    id='Apis.Create.Default.APICreateDefault.api.sub.heading'\n                                    defaultMessage={\n                                        'Create an API providing Name, Version and Context parameters' +\n                                ' and optionally backend endpoint and bushiness plans'\n                                    }\n                                />\n                            </Typography>\n                        </React.Fragment>\n\n                    )\n\n            }\n        >\n            <Grid container spacing={3}>\n                <Grid item md={12} />\n                <Grid item md={1} />\n                <Grid item md={11}>\n                    <DefaultAPIForm\n                        onValidate={handleOnValidate}\n                        onChange={handleOnChange}\n                        api={apiInputs}\n                        isAPIProduct={props.isAPIProduct}\n                    />\n                </Grid>\n                <Grid item md={1} />\n                <Grid item md={9}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            <Button\n                                variant='contained'\n                                color='primary'\n                                disabled={!apiInputs.isFormValid || isCreating}\n                                onClick={createAPI}\n                            >\n                                Create {isCreating && <CircularProgress size={24} />}\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Link to='/apis/'>\n                                <Button variant='outlined'>\n                                    <FormattedMessage\n                                        id='Apis.Create.Default.APICreateDefault.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\nAPICreateDefault.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    isAPIProduct: PropTypes.shape({}).isRequired,\n};\nexport default withRouter(APICreateDefault);\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport API from 'AppData/api.js';\nimport Alert from 'AppComponents/Shared/Alert';\nimport APICreateDefault from './APICreateDefault';\n\n/**\n * Wrapper for API create component. this wrapper is used when creating\n * an API\n */\nclass APICreateWrapper extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            api: new API(),\n            oasVersion: 'v3',\n            valid: {\n                name: { empty: false, alreadyExists: false },\n                context: { empty: false, alreadyExists: false },\n                version: { empty: false },\n            },\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.inputChange = this.inputChange.bind(this);\n        this.handleOASVersionChange = this.handleOASVersionChange.bind(this);\n    }\n    /**\n     * Do create API from either swagger URL or swagger file upload.In case of URL pre fetch the swagger file and make\n     * a blob\n     * and the send it over REST API.\n     * @param e {Event}\n     */\n    handleSubmit(e) {\n        e.preventDefault();\n        const { api: currentAPI } = this.state;\n        const { type: apiType } = this.props;\n        if (!currentAPI.name || !currentAPI.context || !currentAPI.version) {\n            // Checking the api name,version,context undefined or empty states\n            this.setState((oldState) => {\n                const { valid, api } = oldState;\n                const validUpdated = valid;\n                validUpdated.name.empty = !api.name;\n                validUpdated.context.empty = !api.context;\n                validUpdated.version.empty = !api.version;\n                return { valid: validUpdated };\n            });\n            return;\n        }\n        if (apiType === 'ws') {\n            currentAPI.type = 'WS';\n        }\n        currentAPI\n            .save(this.state.oasVersion)\n            .then((newAPI) => {\n                const redirectURL = '/apis/' + newAPI.id + '/overview';\n                Alert.info(`${newAPI.name} created.`);\n                this.props.history.push(redirectURL);\n            })\n            .catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    Alert.error(error.response.body.message);\n                } else {\n                    Alert.error(`Something went wrong while creating ${currentAPI.name}`);\n                }\n            });\n    }\n    /**\n     * Change input\n     * @param {any} e Synthetic React Event\n     * @memberof APICreateForm\n     */\n    inputChange({ target }) {\n        const { name, value } = target;\n        this.setState(({ api, valid }) => {\n            const changes = api;\n            if (name === 'endpoint') {\n                changes.endpointConfig = {\n                    endpoint_type: 'http',\n                    sandbox_endpoints: {\n                        url: value,\n                    },\n                    production_endpoints: {\n                        url: value,\n                    },\n                };\n            } else {\n                changes[name] = value;\n            }\n            // Checking validity.\n            const validUpdated = valid;\n            validUpdated.name.empty = !api.name;\n            validUpdated.context.empty = !api.context;\n            validUpdated.version.empty = !api.version;\n            // TODO we need to add the already existing error for (context)\n            // by doing an api call ( the swagger definition does not contain such api call)\n            return { api: changes, valid: validUpdated };\n        });\n    }\n\n    handleOASVersionChange(event) {\n        this.setState({ oasVersion: event.target.value });\n    }\n\n    /**\n     * @inheritDoc\n     */\n    render() {\n        const { type } = this.props;\n        return (\n            <React.Fragment>\n                <APICreateDefault\n                    api={this.state.api}\n                    oasVersion={this.state.oasVersion}\n                    handleOASVersionChange={this.handleOASVersionChange}\n                    handleSubmit={this.handleSubmit}\n                    inputChange={this.inputChange}\n                    isAPIProduct={false}\n                    valid={this.state.valid}\n                    type={type}\n                />\n            </React.Fragment>);\n    }\n}\n\nAPICreateWrapper.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.func.isRequired,\n    }).isRequired,\n    type: PropTypes.shape({}).isRequired,\n    valid: PropTypes.shape({}).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string,\n    }).isRequired,\n};\nexport default APICreateWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n    divider: {\n        borderRight: 'solid 1px #ccc',\n    },\n};\n\nfunction VerticalDivider(props) {\n    const { classes } = props;\n    const height = props.height ? props.height : 30;\n    const marginLeft = props.marginLeft ? props.marginLeft : 10;\n    const marginRight = props.marginRight ? props.marginRight : 10;\n\n    return (\n        <React.Fragment>\n            <div className={classes.divider} style={{ height, marginLeft, marginRight }} />\n        </React.Fragment>\n    );\n}\n\nVerticalDivider.propTypes = {\n    classes: PropTypes.shape({\n        divider: PropTypes.string,\n    }).isRequired,\n    height: PropTypes.shape({}).isRequired,\n    marginLeft: PropTypes.shape({}).isRequired,\n    marginRight: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(VerticalDivider);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n/**\n *\n * @class CustomIcon\n * @extends {React.Component}\n */\nexport default function CustomIcon(props) {\n    const {\n        className, icon, height, width, strokeColor,\n    } = props;\n    if (icon === 'overview') {\n        return (\n            <svg\n                xmlns='http://www.w3.org/2000/svg'\n                width={width}\n                height={height}\n                viewBox='0 0 8.5272856 8.5114363'\n                id='svg8'\n                className={className}\n            >\n                <g id='layer2' transform='translate(79.857 -62.367)'>\n                    <g\n                        id='g5726'\n                        transform='matrix(.9999 0 0 1.00321 -86.091 38.578)'\n                        fill='none'\n                        stroke={strokeColor}\n                        strokeLinejoin='round'\n                    >\n                        <path\n                            id='path5717'\n                            transform='scale(.26458)'\n                            d={\n                                'm 29.705078,90.623047 c -2.846282,0 -5.138672,2.290437 -5.138672,5.136719 V' +\n                                ' 111.5293 c 0,2.84628 2.29239,5.13867 5.138672,5.13867 h 17.177734 l -4.591796,' +\n                                '-4.74219 a 8.7230968,9.0089885 0 0 1 -10.539063,-1.41406 8.7230968,9.0089885 0 0 1' +\n                                ' 0,-12.740236 8.7230968,9.0089885 0 0 1 6.296875,-2.638672 8.7230968,9.0089885 0 0' +\n                                ' 1 6.041016,2.638672 8.7230968,9.0089885 0 0 1 0,12.740236 8.7230968,9.0089885 0 0 ' +\n                                '1 -0.609375,0.5664 6.2078361,6.4112926 0 0 0 1.089843,-0.88671 6.2078361,6.4112926 0' +\n                                ' 0 0 1.50586,-2.53125 l 7.242187,7.47851 c 0.914205,-0.92665 1.480469,-2.19879' +\n                                ' 1.480469,-3.60937 V 95.759766 c 0,-2.846282 -2.29239,-5.136719 -5.138672,-5.136719 z'\n                            }\n                            strokeWidth='2'\n                        />\n                        <g transform='scale(.88683 .9159) rotate(-45 -45.67 5.272)' id='g5724' strokeWidth='0.539'>\n                            <circle id='circle5720' cx='-22.921' cy='63.11' r='2.603' />\n                            <path\n                                d={\n                                    'm -89.15625,247.73828 v 13.91602 h 6.3125 V 247.74609 A 7,7 0 0 1 -86,248.5 a' +\n                                    ' 7,7 0 0 1 -3.15625,-0.76172 z'\n                                }\n                                transform='scale(.26458)'\n                                id='path5722'\n                                strokeWidth='2.039'\n                            />\n                        </g>\n                    </g>\n                </g>\n            </svg>\n        );\n    } else if (icon === 'api') {\n        return (\n            <svg\n                xmlns='http://www.w3.org/2000/svg'\n                width={width}\n                height={height}\n                viewBox='0 0 8.4666662 8.466666'\n                id='svg8'\n                className={className}\n            >\n                <g id='layer2' transform='translate(82.262 -41.963)'>\n                    <g\n                        id='g5764'\n                        transform='matrix(.83117 0 0 .83117 193.242 4.456)'\n                        fill={strokeColor}\n                        fillOpacity='0.933'\n                    >\n                        <path\n                            id='path5728'\n                            d={\n                                'm -326.92369,45.126027 c -0.0789,0 -0.14264,0.06373 -0.14264,0.142626 v 1.111562 a' +\n                                ' 3.9026041,3.9026041 0 0 0 -1.52651,0.635619 l -0.78859,-0.788582 c -0.0558,' +\n                                '-0.05579 -0.14576,-0.05579 -0.20154,0 l -0.78084,0.78083 c -0.0558,0.05579 -0.0558,' +\n                                '0.145751 0,0.201538 l 0.786,0.785998 a 3.9026041,3.9026041 0 0 0 -0.63098,1.529107' +\n                                ' h -1.1136 c -0.0789,0 -0.14264,0.06373 -0.14264,0.142626 v 1.10381 c 0,0.07889 ' +\n                                '0.0637,0.142626 0.14264,0.142626 h 1.11154 a 3.9026041,3.9026041 0 0 0 0.63564,' +\n                                '1.526522 l -0.7886,0.788582 c -0.0558,0.05579 -0.0558,0.145751 0,0.201539 l ' +\n                                '0.78084,0.78083 c 0.0558,0.05579 0.14576,0.05579 0.20154,0 l 0.78599,-0.785998 a ' +\n                                '3.9026041,3.9026041 0 0 0 1.52911,0.630968 v 1.113629 c 0,0.07889 0.0637,0.142626 ' +\n                                '0.14264,0.142626 h 1.10379 c 0.0789,0 0.14263,-0.06373 0.14263,-0.142626 v -1.11156' +\n                                ' a 3.9026041,3.9026041 0 0 0 1.52652,-0.635622 l 0.78859,0.788583 c 0.0558,0.05579 ' +\n                                '0.14576,0.05579 0.20153,0 l 0.78084,-0.78083 c 0.0558,-0.05579 0.0558,-0.145751 0,' +\n                                '-0.201539 l -0.786,-0.785997 a 3.9026041,3.9026041 0 0 0 0.63098,-1.529107 h 1.1136 ' +\n                                'c 0.0789,0 0.14264,-0.06373 0.14264,-0.142626 v -1.10381 c 0,-0.07889 -0.0637,' +\n                                '-0.142626 -0.14264,-0.142626 h -1.11154 a 3.9026041,3.9026041 0 0 0 -0.63563,' +\n                                '-1.526522 l 0.78859,-0.788583 c 0.0558,-0.05579 0.0558,-0.145751 0,-0.201538 l ' +\n                                '-0.78084,-0.78083 c -0.0558,-0.05579 -0.14576,-0.05579 -0.20153,0 l -0.786,0.785997' +\n                                ' a 3.9026041,3.9026041 0 0 0 -1.52911,-0.630967 v -1.113629 c 0,-0.07889 -0.0637,' +\n                                '-0.142626 -0.14263,-0.142626 z m 0.55189,2.081527 a 3.0119976,3.0119976 0 0 1 3.012' +\n                                '23,3.011702 3.0119976,3.0119976 0 0 1 -3.01223,3.01222 3.0119976,3.0119976 0 0 1 -3.' +\n                                '01223,-3.01222 3.0119976,3.0119976 0 0 1 3.01223,-3.011702 z'\n                            }\n                            strokeWidth='0.937'\n                            strokeLinejoin='round'\n                        />\n                        <g transform='matrix(.01024 0 0 .01024 -328.341 48.178)' id='g5762'>\n                            <path\n                                d={\n                                    'm 364.427,259.214 c -14.051,-14.052 -32.733,-21.79 -52.605,-21.79 -10.619,0' +\n                                    ' -20.888,2.23 -30.302,6.431 -1.076,-1.701 -2.341,-3.298 -3.799,-4.756 l -54' +\n                                    '.188,-54.188 95.825,-95.825 c 2.645,2.529 5.363,3.085 7.197,3.085 4.06,0 6.8,-' +\n                                    '2.535 7.308,-3.042 L 356.06,66.932 c 3.771,-3.771 5.563,-7.434 5.477,-11.197 ' +\n                                    '-0.135,-5.897 -4.599,-9.968 -9.767,-14.683 -1.53,-1.395 -3.111,-2.838 -4.7,-4' +\n                                    '.426 -1.588,-1.588 -3.03,-3.169 -4.426,-4.699 -4.782,-5.243 -8.912,-9.771 -14' +\n                                    '.939,-9.771 -3.676,0 -7.255,1.793 -10.941,5.48 l -22.281,22.281 c -2.746,2.746' +\n                                    ' -5.103,9.066 0.122,14.426 l -95.821,95.821 -56.131,-56.131 c 4.012,-9.232 6.13' +\n                                    '7,-19.269 6.137,-29.638 0,-19.872 -7.739,-38.555 -21.791,-52.607 C 112.95,7.' +\n                                    '737 94.27,0 74.4,0 67.768,0 61.168,0.881 54.785,2.62 c -2.513,0.684 -4.569,2.' +\n                                    '752 -5.238,5.268 -0.683,2.565 0.096,5.206 2.121,7.232 0.266,0.267 26.668,26.873' +\n                                    ' 35.46,35.665 1.31,1.31 1.193,4.015 1.058,4.81 l -0.069,0.489 c -1.005,10.964 -' +\n                                    '3.034,24.215 -4.565,27.493 -3.303,1.581 -16.767,3.637 -27.911,4.633 l -0.149,-' +\n                                    '0.013 -0.302,0.072 c -0.082,0.009 -0.26,0.024 -0.508,0.024 -1.253,0 -3.096,-0.' +\n                                    '349 -4.758,-2.011 C 40.773,77.13 15.387,51.932 15.145,51.692 13.085,49.632 10.' +\n                                    '998,49.2 9.609,49.2 6.384,49.2 3.497,51.549 2.587,54.913 -4.357,80.592 3,108.' +\n                                    '214 21.786,127 c 14.051,14.051 32.733,21.79 52.606,21.79 10.369,0 20.407,-2.126' +\n                                    ' 29.639,-6.137 l 56.131,56.131 -22.013,22.013 c -3.536,-1.853 -7.497,-2.839 -' +\n                                    '11.618,-2.839 -6.693,0 -12.972,2.592 -17.678,7.298 l -12.282,12.283 c -1.175' +\n                                    ',-0.166 -2.369,-0.254 -3.578,-0.254 -6.692,0 -12.971,2.592 -17.677,7.298 l -' +\n                                    '64.351,64.35 c -4.707,4.706 -7.299,10.984 -7.299,17.678 0,6.693 2.592,12.971 7.' +\n                                    '299,17.678 l 28.44,28.44 c 4.706,4.706 10.984,7.298 17.678,7.298 6.692,0 12.971' +\n                                    ',-2.592 17.677,-7.298 l 64.35,-64.35 c 4.707,-4.706 7.299,-10.984 7.299,-17.' +\n                                    '678 0,-1.209 -0.087,-2.404 -0.254,-3.579 l 12.282,-12.282 c 4.707,-4.707 7.299,' +\n                                    '-10.984 7.299,-17.678 0,-4.121 -0.986,-8.082 -2.839,-11.618 l 22.013,-22.013 54' +\n                                    '.188,54.188 c 1.458,1.457 3.055,2.723 4.755,3.798 -4.201,9.414 -6.431,19.684 -6' +\n                                    '.431,30.302 0,19.873 7.739,38.555 21.791,52.607 14.048,14.048 32.729,21.785 52.' +\n                                    '6,21.786 0.001,0 0.001,0 0.003,0 6.63,0 13.23,-0.882 19.614,-2.62 2.513,-0.684 ' +\n                                    '4.568,-2.752 5.236,-5.268 0.682,-2.565 -0.097,-5.206 -2.122,-7.23 -0.266,-0.' +\n                                    '267 -26.667,-26.874 -35.459,-35.666 -1.31,-1.31 -1.193,-4.015 -1.058,-4.811 l' +\n                                    ' 0.069,-0.489 c 1.005,-10.964 3.034,-24.214 4.565,-27.493 3.303,-1.581 16.767' +\n                                    ',-3.637 27.911,-4.633 l 0.149,0.013 0.301,-0.072 c 0.083,-0.009 0.261,-0.024 0.' +\n                                    '508,-0.024 1.253,0 3.097,0.349 4.76,2.012 9.15,9.151 34.536,34.349 34.778,34.' +\n                                    '589 2.06,2.06 4.147,2.493 5.536,2.493 3.225,0 6.112,-2.349 7.023,-5.713 6.945,-2' +\n                                    '5.677 -0.413,-53.299 -19.2,-72.086 z m -278.221,70.499 -7.226,7.226 c -7.778,7.' +\n                                    '778 -20.506,7.778 -28.284,0 l -3.94,-3.941 c -7.778,-7.778 -7.778,-20.506 0,-28.' +\n                                    '284 l 7.226,-7.226 c 7.778,-7.778 20.506,-7.778 28.284,0 l 3.941,3.941 c 7.777,7' +\n                                    '.778 7.777,20.506 -10e-4,28.284 z m 159.465,-84.042 c -1.465,1.464 -3.385,2.197 ' +\n                                    '-5.304,2.197 -1.92,0 -3.839,-0.732 -5.304,-2.197 l -88.414,-88.414 c -2.929,-2' +\n                                    '.929 -2.929,-7.678 0,-10.607 2.931,-2.93 7.679,-2.929 10.607,0 l 27.519,27.519 ' +\n                                    'v 0 l 24.749,24.749 v 0 l 36.146,36.147 c 2.93,2.929 2.93,7.678 0.001,10.606 z'\n                                }\n                                id='path5730'\n                            />\n                        </g>\n                    </g>\n                </g>\n            </svg>\n        );\n    } else if (icon === 'api-product') {\n        return (\n            <svg\n                width={width}\n                height={height}\n                className={className}\n                stroke={strokeColor}\n                viewBox='0 0 8.467 8.467'\n                id='prefix__svg8'\n                {...props}\n            >\n                <g id='prefix__layer2' transform='translate(82.262 -41.963)' stroke={strokeColor}>\n                    <g id='prefix__g994' stroke={strokeColor}>\n                        <g\n                            transform='matrix(.76623 0 0 .76623 171.718 7.386)'\n                            id='prefix__g5764'\n                            display='inline'\n                            fill='#8b8e95'\n                            fillOpacity={0.933}\n                        >\n                            <path\n                                d={\n                                    'M-326.924 45.126a.142.142 0 00-.142.143v1.111a3.903 3.903 0 ' +\n                                    '00-1.527.636l-.788-.789a.142.142 0 00-.202 0l-.78.781a.142.142 ' +\n                                    '0 000 .202l.785.786a3.903 3.903 0 00-.63 1.529h-1.114a.142.142 0' +\n                                    ' 00-.143.142v1.104c0 .08.064.143.143.143h1.111a3.903 3.903 0 00.636' +\n                                    ' 1.526l-.789.789a.142.142 0 000 .201l.781.781a.142.142 0 00.202' +\n                                    ' 0l.786-.786a3.903 3.903 0 001.529.631v1.114c0 ' +\n                                    '.079.063.142.142.142h1.104a.142.142 0 00.143-.142v-1.112a3.903' +\n                                    ' 3.903 0 001.526-.635l.789.788a.142.142 0 00.201 0l.781-.78a.142.142' +\n                                    ' 0 000-.202l-.786-.786a3.903 3.903 0 00.631-1.53h1.114a.142.142 0' +\n                                    ' 00.142-.142v-1.104a.142.142 0 00-.142-.142h-1.112a3.903 3.903 0' +\n                                    ' 00-.635-1.527l.788-.788a.142.142 0 000-.202l-.78-.78a.142.142 0' +\n                                    ' 00-.202 0l-.786.785a3.903 3.903 0 00-1.53-.63v-1.114a.142.142 0' +\n                                    ' 00-.142-.143zm.552 2.082a3.012 3.012 0 013.012 3.011 3.012 3.012' +\n                                    ' 0 01-3.012 3.012 3.012 3.012 0 01-3.012-3.012 3.012 3.012 0 013.012-3.011z'\n                                }\n                                id='prefix__path5728'\n                                stroke='none'\n                                strokeWidth={0.937}\n                                strokeLinejoin='round'\n                                strokeMiterlimit={4}\n                                strokeDasharray='none'\n                                strokeOpacity={1}\n                            />\n                            <g id='prefix__g5762' transform='matrix(.01024 0 0 .01024 -328.341 48.178)'>\n                                <path\n                                    id='prefix__path5730'\n                                    d={\n                                        'M364.427 259.214c-14.051-14.052-32.733-21.79-52.605-21.79-10.619' +\n                                        ' 0-20.888 2.23-30.302 6.431a27.521 27.521 0 00-3.799-4.756l-54.188-54.188' +\n                                        ' 95.825-95.825c2.645 2.529 5.363 3.085 7.197 3.085 4.06 0 6.8-2.535' +\n                                        ' 7.308-3.042l22.197-22.197c3.771-3.771 5.563-7.434' +\n                                        ' 5.477-11.197-.135-5.897-4.599-9.968-9.767-14.683-1.53-1.395-3.111-2.838' +\n                                        '-4.7-4.426-1.588-1.588-3.03-3.169-4.426-4.699-4.782-5.243-8.912-9.771-14.' +\n                                        '939-9.771-3.676 0-7.255 1.793-10.941 5.48l-22.281 22.281c-2.746 2.746-5.103' +\n                                        ' 9.066.122 14.426l-95.821 95.821-56.131-56.131c4.012-9.232 6.137-19.269' +\n                                        ' 6.137-29.638 0-19.872-7.739-38.555-21.791-52.607C112.95 7.737 94.27' +\n                                        ' 0 74.4 0a74.64 74.64 0 00-19.615 2.62c-2.513.684-4.569 2.752-5.238' +\n                                        ' 5.268-.683 2.565.096 5.206 2.121 7.232.266.267 26.668 26.873 35.46' +\n                                        ' 35.665 1.31 1.31 1.193 4.015 1.058 4.81l-.069.489c-1.005 10.964-3.034' +\n                                        ' 24.215-4.565 27.493-3.303 1.581-16.767 3.637-27.911 4.633l-.149-.013-.' +\n                                        '302.072c-.082.009-.26.024-.508.024-1.253 0-3.096-.349-4.758-2.011-9.151' +\n                                        '-9.152-34.537-34.35-34.779-34.59-2.06-2.06-4.147-2.492-5.536-2.492-3.225' +\n                                        ' 0-6.112 2.349-7.022 5.713C-4.357 80.592 3 108.214 21.786 127c14.051 14.051' +\n                                        ' 32.733 21.79 52.606 21.79 10.369 0 20.407-2.126 29.639-6.137l56.131' +\n                                        ' 56.131-22.013 22.013a24.953 24.953 0 00-11.618-2.839c-6.693 0-12.972' +\n                                        ' 2.592-17.678 7.298l-12.282 12.283a25.561 25.561 0 00-3.578-.254c-6.692' +\n                                        ' 0-12.971 2.592-17.677 7.298l-64.351 64.35c-4.707 4.706-7.299' +\n                                        ' 10.984-7.299 17.678 0 6.693 2.592 12.971 7.299 17.678l28.44' +\n                                        ' 28.44c4.706 4.706 10.984 7.298 17.678 7.298 6.692 0 12.971-2.592' +\n                                        ' 17.677-7.298l64.35-64.35c4.707-4.706 7.299-10.984 7.299-17.678' +\n                                        ' 0-1.209-.087-2.404-.254-3.579l12.282-12.282c4.707-4.707 7.299-10.984' +\n                                        ' 7.299-17.678 0-4.121-.986-8.082-2.839-11.618l22.013-22.013 54.188' +\n                                        ' 54.188a27.547 27.547 0 004.755 3.798c-4.201 9.414-6.431 19.684-6.431' +\n                                        ' 30.302 0 19.873 7.739 38.555 21.791 52.607 14.048 14.048 32.729 21.785' +\n                                        ' 52.6 21.786h.003c6.63 0 13.23-.882 19.614-2.62 2.513-.684 4.568-2.752' +\n                                        ' 5.236-5.268.682-2.565-.097-5.206-2.122-7.23-.266-.267-26.667-26.874-35' +\n                                        '.459-35.666-1.31-1.31-1.193-4.015-1.058-4.811l.069-.489c1.005-10.964' +\n                                        ' 3.034-24.214 4.565-27.493 3.303-1.581 16.767-3.637 27.911-4.633l.149' +\n                                        '.013.301-.072c.083-.009.261-.024.508-.024 1.253 0 3.097.349 4.76 2.012' +\n                                        ' 9.15 9.151 34.536 34.349 34.778 34.589 2.06 2.06 4.147 2.493 5.536 2.493' +\n                                        ' 3.225 0 6.112-2.349 7.023-5.713 ' +\n                                        ' 6.945-25.677-.413-53.299-19.2-72.086zM86.206' +\n                                        ' 329.713l-7.226 7.226c-7.778 7.778-20.506 7.778-28.284 0l-3.94-3.941c-7.' +\n                                        '778-7.778-7.778-20.506 0-28.284l7.226-7.226c7.778-7.778 20.506-7.778 28.284' +\n                                        ' 0l3.941 3.941c7.777 7.778 7.777 20.506-.001 28.284zm159.465-84.042a7.482' +\n                                        ' 7.482 0 01-5.304 2.197 7.476 7.476 0 01-5.304-2.197l-88.414-88.414a7.5' +\n                                        ' 7.5 0 0110.607-10.607l27.519 27.519 24.749 24.749 36.146 36.147a7.498' +\n                                        ' 7.498 0 01.001 10.606z'\n                                    }\n                                />\n                            </g>\n                        </g>\n                        <path\n                            id='prefix__rect893'\n                            d={\n                                'M-77.015 45.818a.343.343 0 00-.341.345v1.255h-4.282a.343.343 0 00-.34.345v2.072c0' +\n                                ' .191.151.345.34.345h7.26c.189 0 .341-.154.341-.345v-3.672a.343.343 0 00-.341-.345z'\n                            }\n                            opacity={1}\n                            fill='#fff'\n                            fillOpacity={0.535}\n                            fillRule='nonzero'\n                            strokeWidth={0.499}\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeMiterlimit={4}\n                            strokeDasharray='none'\n                            strokeDashoffset={0}\n                            strokeOpacity={0.933}\n                            paintOrder='stroke markers fill'\n                        />\n                    </g>\n                </g>\n\n            </svg>\n        );\n    }\n    return null;\n}\n\nCustomIcon.defaultProps = {\n    strokeColor: '#8b8e95',\n    width: 32,\n    height: 32,\n    icon: 'api',\n    className: '',\n};\n\nCustomIcon.propTypes = {\n    strokeColor: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    icon: PropTypes.oneOf(['overview', 'api']),\n    className: '',\n};\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\n\nconst styles = theme => ({\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    button: {\n        margin: theme.spacing.unit,\n        marginBottom: 0,\n    },\n    buttonRight: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n    },\n    ListingWrapper: {\n        paddingTop: 10,\n        paddingLeft: 35,\n    },\n    root: {\n        height: 70,\n        background: theme.palette.background.paper,\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {},\n    APICreateMenu: {\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    content: {\n        flexGrow: 1,\n    },\n    backText: {\n        color: theme.palette.primary.main,\n        cursor: 'pointer',\n        fontFamily: theme.typography.fontFamily,\n    },\n    backLink: {\n        alignItems: 'center',\n        textDecoration: 'none',\n        display: 'flex',\n        paddingLeft: theme.spacing.unit * 3,\n    },\n    backIcon: {\n        color: theme.palette.primary.main,\n        fontSize: 56,\n        cursor: 'pointer',\n    },\n    mainIconWrapper: {\n        paddingTop: 13,\n        paddingLeft: 0,\n        paddingRight: 20,\n    },\n});\n\nconst APIProductDetailsTopMenu = ({ classes, theme }) => {\n    const strokeColorMain = theme.palette.getContrastText(theme.palette.background.paper);\n    return (\n        <main className={classes.content}>\n            <div className={classes.root}>\n                <Link to='/api-products' className={classes.backLink}>\n                    <KeyboardArrowLeft className={classes.backIcon} />\n                    <div className={classes.backText}>\n                        BACK TO <br />\n                        LISTING\n                    </div>\n                </Link>\n                <VerticalDivider height={70} />\n                <div className={classes.mainIconWrapper}>\n                    <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n                </div>\n                <div className={classes.mainTitleWrapper}>\n                    <Typography variant='h4'>\n                        <FormattedMessage\n                            id='apis.create.new.api.product'\n                            defaultMessage='API Products - Create New API Product'\n                        />\n                    </Typography>\n                    <Typography variant='caption' gutterBottom align='left'>\n                        <FormattedMessage\n                            id='fill.the.mandatory.fields.product'\n                            defaultMessage={\n                                'Fill the mandatory fields (Name, Context)' +\n                                ' and create the API Product. Configure advanced configurations later.'\n                            }\n                        />\n                    </Typography>\n                </div>\n            </div>\n        </main>\n    );\n};\n\nAPIProductDetailsTopMenu.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(APIProductDetailsTopMenu);\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport API from 'AppData/api.js';\nimport Alert from 'AppComponents/Shared/Alert';\nimport APICreateDefault from './APICreateDefault';\nimport APIProductDetailsTopMenu from '../Components/APIProductCreateTopMenu';\n\n/**\n * Wrapper for API create component. this wrapper is used when creating\n * an API\n */\nclass APIProductCreateWrapper extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            api: new API(),\n            valid: {\n                name: { empty: false, alreadyExists: false },\n                context: { empty: false, alreadyExists: false },\n                version: { empty: false },\n                endpoint: { empty: false },\n            },\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.inputChange = this.inputChange.bind(this);\n    }\n    /**\n     * Create API product\n     * @param {*} e\n     */\n    handleSubmit(e) {\n        e.preventDefault();\n        const { api: currentAPI } = this.state;\n        if (!currentAPI.name || !currentAPI.context) {\n            // Checking the api name,context undefined or empty states\n            this.setState((oldState) => {\n                const { valid, api } = oldState;\n                const validUpdated = valid;\n                validUpdated.name.empty = !api.name;\n                validUpdated.context.empty = !api.context;\n                return { valid: validUpdated };\n            });\n            return;\n        }\n        currentAPI.saveProduct()\n            .then((newAPI) => {\n                const redirectURL = '/api-products/' + newAPI.id + '/overview';\n                Alert.info(`${newAPI.name} created.`);\n                this.props.history.push(redirectURL);\n            })\n            .catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    Alert.error(error.response.body.message);\n                } else {\n                    Alert.error(`Something went wrong while creating ${currentAPI.name}`);\n                }\n            });\n    }\n    /**\n     * Change input\n     * @param {any} e Synthetic React Event\n     * @memberof APICreateForm\n     */\n    inputChange({ target }) {\n        const { name, value } = target;\n        this.setState(({ api, valid }) => {\n            const changes = api;\n            if (name === 'endpoint') {\n                changes[name] = [\n                    {\n                        inline: {\n                            name: `${api.name}_inline_production`,\n                            endpointConfig: {\n                                list: [\n                                    {\n                                        url: value,\n                                        timeout: '1000',\n                                    },\n                                ],\n                                endpointType: 'SINGLE',\n                            },\n                            endpointSecurity: {\n                                enabled: false,\n                                type: 'basic',\n                                username: 'basic',\n                                password: 'basic',\n                            },\n                            type: 'http',\n                        },\n                        type: 'production_endpoints',\n                    },\n                    {\n                        inline: {\n                            name: `${api.name}_inline_sandbox`,\n                            endpointConfig: {\n                                list: [\n                                    {\n                                        url: value,\n                                        timeout: '1000',\n                                    },\n                                ],\n                                endpointType: 'SINGLE',\n                            },\n                            endpointSecurity: {\n                                enabled: false,\n                                type: 'basic',\n                                username: 'basic',\n                                password: 'basic',\n                            },\n                            type: 'http',\n                        },\n                        type: 'sandbox_endpoints',\n                    },\n                ];\n            } else {\n                changes[name] = value;\n            }\n            // Checking validity.\n            const validUpdated = valid;\n            validUpdated.name.empty = !api.name;\n            validUpdated.context.empty = !api.context;\n            validUpdated.version.empty = !api.version;\n            validUpdated.endpoint.empty = !api.endpoint;\n            // TODO we need to add the already existing error for (context)\n            // by doing an api call ( the swagger definition does not contain such api call)\n            return { api: changes, valid: validUpdated };\n        });\n    }\n    /**\n     * @inheritDoc\n     */\n    render() {\n        return (\n            <React.Fragment>\n                <APIProductDetailsTopMenu />\n                <APICreateDefault\n                    api={this.state.api}\n                    handleSubmit={this.handleSubmit}\n                    inputChange={this.inputChange}\n                    isAPIProduct\n                    valid={this.state.valid}\n                />\n            </React.Fragment>);\n    }\n}\n\nAPIProductCreateWrapper.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.func.isRequired,\n    }).isRequired,\n    type: PropTypes.shape({}).isRequired,\n    valid: PropTypes.shape({}).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string,\n    }).isRequired,\n};\nexport default APIProductCreateWrapper;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDropzone } from 'react-dropzone';\n\n/**\n *\n * Convert raw byte values to human readable format\n * @param {Number} bytes number of bytes\n * @param {boolean} [si=false]\n * @returns {String} Human readable string format\n */\nfunction humanFileSize(bytesParam, si = false) {\n    let bytes = bytesParam; // To prevent `no-param-reassign` eslint rule violation\n    const thresh = si ? 1000 : 1024;\n    if (Math.abs(bytes) < thresh) {\n        return bytes + ' B';\n    }\n    const units = si\n        ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n        : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let u = -1;\n    do {\n        bytes /= thresh;\n        ++u;\n    } while (Math.abs(bytes) >= thresh && u < units.length - 1);\n    return bytes.toFixed(1) + ' ' + units[u];\n}\n\nconst baseStyle = {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '20px',\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: '#eeeeee',\n    borderStyle: 'dashed',\n    backgroundColor: '#fafafa',\n    color: '#bdbdbd',\n    outline: 'none',\n    transition: 'border .24s ease-in-out',\n};\n\nconst activeStyle = {\n    borderColor: '#2196f3',\n};\n\nconst acceptStyle = {\n    borderColor: '#00e676',\n};\n\nconst rejectStyle = {\n    borderColor: '#ff1744',\n};\n\n/**\n *\n * Provide a class friendly Dropzone wrapper using hooks.\n * @export\n * @returns\n */\nexport default function DropZoneLocal(props) {\n    let { files } = props;\n    const {\n        message, onDrop, error, showFilesList, children,\n    } = props;\n    files = files instanceof File ? [files] : files;\n    const dropZoneObject = useDropzone({ onDrop });\n    const {\n        getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject,\n    } = dropZoneObject;\n    let { acceptedFiles } = dropZoneObject;\n    acceptedFiles = files || acceptedFiles;\n    const filesList = acceptedFiles.map(file => (\n        <li key={file.path}>\n            {file.path} - {humanFileSize(file.size)}\n        </li>\n    ));\n    baseStyle.borderColor = error ? rejectStyle.borderColor : '#eeeeee';\n    const style = useMemo(\n        () => ({\n            ...baseStyle,\n            ...(isDragActive ? activeStyle : {}),\n            ...(isDragAccept ? acceptStyle : {}),\n            ...(isDragReject ? rejectStyle : {}),\n        }),\n        [isDragActive, isDragReject, error],\n    );\n    return (\n        <section className='container'>\n            <div {...getRootProps({ style })}>\n                <input {...getInputProps()} />\n                {children || <p>{message}</p>}\n            </div>\n            {showFilesList && (\n                <aside>\n                    <h4>Files</h4>\n                    <ul>{filesList}</ul>\n                </aside>\n            )}\n        </section>\n    );\n}\nDropZoneLocal.defaultProps = {\n    message: \"Drag 'n' drop some files here, or click to select files\",\n    onDrop: () => {},\n    showFilesList: true,\n    files: null,\n    children: null,\n    error: false,\n};\nDropZoneLocal.propTypes = {\n    message: PropTypes.string,\n    onDrop: PropTypes.func,\n    showFilesList: PropTypes.bool,\n    files: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.object), PropTypes.instanceOf(File)]),\n    children: PropTypes.oneOfType([PropTypes.element, PropTypes.array]),\n    error: PropTypes.oneOfType([PropTypes.bool, PropTypes.shape({})]),\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Radio from '@material-ui/core/Radio';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport APIValidation from 'AppData/APIValidation';\nimport API from 'AppData/api';\nimport DropZoneLocal from 'AppComponents/Shared/DropZoneLocal';\n\nconst useStyles = makeStyles(theme => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n    },\n}));\n\n/**\n * Sub component of API Create using OpenAPI UI, This is handling the taking input of WSDL file or URL from the user\n * In the create API using OpenAPI wizard first step out of 2 steps\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nexport default function ProvideOpenAPI(props) {\n    const { apiInputs, inputsDispatcher, onValidate } = props;\n    const isFileInput = apiInputs.inputType === 'file';\n    const classes = useStyles();\n    // If valid value is `null`,that means valid, else an error object will be there\n    const [isValid, setValidity] = useState({ url: null, file: null });\n    const [isValidating, setIsValidating] = useState(false);\n    /**\n     *\n     *\n     * @param {*} files\n     */\n    function onDrop(files) {\n        setIsValidating(true);\n\n        // Why `files.pop()` below is , We only handle one OpenAPI file at a time,\n        // So if use provide multiple, We would only\n        // accept the first file. This information is shown in the dropdown helper text\n        const file = files.pop();\n        let validFile = null;\n        API.validateOpenAPIByFile(file)\n            .then((response) => {\n                const {\n                    body: { isValid: isValidFile, info },\n                } = response;\n                if (isValidFile) {\n                    validFile = file;\n                    inputsDispatcher({ action: 'preSetAPI', value: info });\n                    setValidity({ ...isValid, file: null });\n                } else {\n                    setValidity({ ...isValid, file: { message: 'OpenAPI content validation failed!' } });\n                }\n            })\n            .catch((error) => {\n                setValidity({ ...isValid, file: { message: 'OpenAPI content validation failed!' } });\n                console.error(error);\n            })\n            .finally(() => {\n                setIsValidating(false); // Stop the loading animation\n                onValidate(validFile !== null); // If there is a valid file then validation has passed\n                // If the given file is valid , we set it as the inputValue else set `null`\n                inputsDispatcher({ action: 'inputValue', value: validFile });\n            });\n    }\n\n    /**\n     * Trigger the provided onValidate call back on each input validation run\n     * Do the validation state aggregation and call the onValidate method with aggregated value\n     * @param {Object} state Validation state object returned from Joi `.validate()` method\n     */\n    function validateURL(state) {\n        // State `null` means URL is valid, We do backend validation only in valid URLs\n        if (state === null) {\n            setIsValidating(true);\n            API.validateOpenAPIByUrl(apiInputs.inputValue).then((response) => {\n                const {\n                    body: { isValid: isValidURL, info },\n                } = response;\n                if (isValidURL) {\n                    inputsDispatcher({ action: 'preSetAPI', value: info });\n                    setValidity({ ...isValid, url: null });\n                } else {\n                    setValidity({ ...isValid, url: { message: 'OpenAPI content validation failed!' } });\n                }\n                onValidate(isValidURL);\n                setIsValidating(false);\n            });\n            // Valid URL string\n            // TODO: Handle catch network or api call failures ~tmkb\n        } else {\n            setValidity({ ...isValid, url: state });\n            onValidate(false);\n        }\n    }\n    return (\n        <React.Fragment>\n            <Grid container spacing={5}>\n                <Grid item md={12}>\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend'>\n                            <React.Fragment>\n                                <sup className={classes.mandatoryStar}>*</sup>{' '}\n                                <FormattedMessage\n                                    id='Apis.Create.OpenAPI.Steps.ProvideOpenAPI.Input.type'\n                                    defaultMessage='Input type'\n                                />\n                            </React.Fragment>\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='Input type'\n                            value={apiInputs.inputType}\n                            onChange={event => inputsDispatcher({ action: 'inputType', value: event.target.value })}\n                        >\n                            <FormControlLabel value='url' control={<Radio />} label='OpenAPI URL' />\n                            <FormControlLabel value='file' control={<Radio />} label='OpenAPI File' />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n                <Grid item md={7}>\n                    {isFileInput ? (\n                        <React.Fragment>\n                            <DropZoneLocal error={isValid.file} onDrop={onDrop} files={apiInputs.inputValue}>\n                                {isValidating && <CircularProgress />}\n                                {isValid.file ? (\n                                    isValid.file.message\n                                ) : (\n                                    <FormattedMessage\n                                        id='Apis.Create.OpenAPI.Steps.ProvideOpenAPI.Input.file.dropzone'\n                                        defaultMessage='Select an OpenAPI definition file'\n                                    />\n                                )}\n                            </DropZoneLocal>\n                        </React.Fragment>\n                    ) : (\n                        <TextField\n                            autoFocus\n                            id='outlined-full-width'\n                            label='OpenAPI URL'\n                            placeholder='Enter OpenAPI URL'\n                            fullWidth\n                            margin='normal'\n                            variant='outlined'\n                            onChange={({ target: { value } }) => inputsDispatcher({ action: 'inputValue', value })}\n                            value={apiInputs.inputValue}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            InputProps={{\n                                onBlur: ({ target: { value } }) => {\n                                    validateURL(APIValidation.url.required().validate(value).error);\n                                },\n                                endAdornment: isValidating && (\n                                    <InputAdornment position='end'>\n                                        <CircularProgress />\n                                    </InputAdornment>\n                                ),\n                            }}\n                            // 'Give the URL of OpenAPI endpoint'\n                            helperText={isValid.url && isValid.url.message}\n                            error={Boolean(isValid.url)}\n                            disabled={isValidating}\n                        />\n                    )}\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n}\n\nProvideOpenAPI.defaultProps = {\n    onValidate: () => {},\n};\nProvideOpenAPI.propTypes = {\n    apiInputs: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    inputsDispatcher: PropTypes.func.isRequired,\n    onValidate: PropTypes.func,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\n\nimport ProvideOpenAPI from './Steps/ProvideOpenAPI';\n\n/**\n * Handle API creation from OpenAPI Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateOpenAPI(props) {\n    const [wizardStep, setWizardStep] = useState(0);\n    const { history } = props;\n\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'inputValue':\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                    version: value.version,\n                    context: value.context,\n                };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiCreateOpenAPI',\n        inputType: 'url',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name, version, context, endpoint, policies, inputValue, inputType,\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n        };\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        additionalProperties.gatewayEnvironments = ['Production and Sandbox'];\n        const newAPI = new API(additionalProperties);\n        const promisedResponse =\n            inputType === 'file' ? newAPI.importOpenAPIByFile(inputValue) : newAPI.importOpenAPIByUrl(inputValue);\n        promisedResponse\n            .then((api) => {\n                Alert.info('API created successfully');\n                history.push(`/apis/${api.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={\n                <React.Fragment>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.heading'\n                            defaultMessage='Create an API using OpenAPI definition'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.sub.heading'\n                            defaultMessage={\n                                'Use an existing OpenAPI definition file or URL' +\n                                ' to create an API in WSO2 API Manager.'\n                            }\n                        />\n                    </Typography>\n                </React.Fragment>\n            }\n        >\n            <Paper elevation={1}>\n                <Stepper activeStep={0}>\n                    <Step>\n                        <StepLabel>\n                            <FormattedMessage\n                                id='Apis.Create.OpenAPI.ApiCreateOpenAPI.wizard.one'\n                                defaultMessage='Provide OpenAPI'\n                            />\n                        </StepLabel>\n                    </Step>\n\n                    <Step>\n                        <StepLabel>\n                            <FormattedMessage\n                                id='Apis.Create.OpenAPI.ApiCreateOpenAPI.wizard.two'\n                                defaultMessage='Create API'\n                            />\n                        </StepLabel>\n                    </Step>\n                </Stepper>\n            </Paper>\n\n            <Grid container spacing={3}>\n                <Grid item md={12} />\n                <Grid item md={1} />\n                <Grid item md={11}>\n                    {wizardStep === 0 && (\n                        <ProvideOpenAPI\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm onValidate={handleOnValidate} onChange={handleOnChange} api={apiInputs} />\n                    )}\n                </Grid>\n                <Grid item md={1} />\n                <Grid item md={9}>\n                    <Grid container direction='row' justify='space-between'>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button variant='outlined'>\n                                        <FormattedMessage\n                                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && <Button onClick={() => setWizardStep(step => step - 1)}>Back</Button>}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    onClick={() => setWizardStep(step => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                >\n                                    Next\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating}\n                                    onClick={createAPI}\n                                >\n                                    Create {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n\nApiCreateOpenAPI.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","/**\n * Copyright (c) 2019, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport APIClientFactory from './APIClientFactory';\nimport Utils from './Utils';\nimport Resource from './Resource';\n\n/**\n * An abstract representation of a Scopes\n */\nclass Wsdl extends Resource {\n    /**\n     *\n     *\n     * @static\n     * @param {*} scope\n     * @memberof Scopes\n     */\n    static validate(input) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return apiClient.then((client) => {\n            return client.apis.Validation.validateWSDLDefinition({ url: input, returnContent: true });\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} resource\n     * @param {*} additionalProperties\n     * @param {*} implementationType SOAPTOREST\n     * @memberof Wsdl\n     */\n    static import(input, additionalProperties, implementationType = 'SOAP') {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return apiClient.then((client) => {\n            return client.apis.APIs.importWSDLDefinition({\n                url: input,\n                additionalProperties: JSON.stringify(additionalProperties),\n                implementationType,\n            });\n        });\n    }\n}\n\nexport default Wsdl;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Radio from '@material-ui/core/Radio';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport APIValidation from 'AppData/APIValidation';\nimport Wsdl from 'AppData/Wsdl';\nimport DropZoneLocal from 'AppComponents/Shared/DropZoneLocal';\n\nconst useStyles = makeStyles(theme => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n    },\n}));\n\n/**\n * Sub component of API Create using WSDL UI, This is handling the taking input of WSDL file or URL from the user\n * In the create API using WSDL wizard first step out of 2 steps\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nexport default function ProvideWSDL(props) {\n    const { apiInputs, inputsDispatcher, onValidate } = props;\n    const isFileInput = apiInputs.inputType === 'file';\n    const isArchiveInput = apiInputs.inputType === 'archive';\n    const isGenerateRESTAPI = apiInputs.type === 'SOAPtoREST';\n    const classes = useStyles();\n    const [isError, setValidity] = useState(); // If valid value is `null` else an error object will be there\n    const [isValidating, setIsValidating] = useState(false);\n    /**\n     *\n     *\n     * @param {*} files\n     */\n    function onDrop(files) {\n        // Why `files[0]` below is , We only handle one wsdl file at a time, So if use provide multiple, We would only\n        // accept the first file. This information is shown in the dropdown helper text\n        inputsDispatcher({ action: 'inputValue', value: [files[0]] });\n    }\n\n    /**\n     * Trigger the provided onValidate call back on each input validation run\n     * Do the validation state aggregation and call the onValidate method with aggregated value\n     * @param {Object} state Validation state object\n     */\n    function validate(state) {\n        if (state === null) {\n            setIsValidating(true);\n            Wsdl.validate(apiInputs.inputValue).then((response) => {\n                const {\n                    body: { isValid },\n                } = response;\n                if (isValid) {\n                    setValidity(null);\n                } else {\n                    setValidity({ message: 'WSDL content validation failed!' });\n                }\n                onValidate(isValid);\n                setIsValidating(false);\n            });\n            // Valid URL string\n            // TODO: Handle catch network or api call failures ~tmkb\n        } else {\n            setValidity(state);\n            onValidate(false);\n        }\n    }\n    return (\n        <React.Fragment>\n            <Grid container spacing={5}>\n                <Grid item md={12}>\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend'>\n                            <React.Fragment>\n                                <sup className={classes.mandatoryStar}>*</sup>{' '}\n                                <FormattedMessage\n                                    id='Apis.Create.WSDL.Steps.ProvideWSDL.implementation.type'\n                                    defaultMessage='Implementation type'\n                                />\n                            </React.Fragment>\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='Implementation type'\n                            value={apiInputs.type}\n                            onChange={event => inputsDispatcher({ action: 'type', value: event.target.value })}\n                        >\n                            <FormControlLabel\n                                value='PASS'\n                                control={<Radio />}\n                                label={<FormattedMessage\n                                    id='Apis.Create.WSDL.Steps.ProvideWSDL.passthrough.label'\n                                    defaultMessage='Pass Through'\n                                />}\n                            />\n                            <FormControlLabel\n                                value='SOAPtoREST'\n                                control={<Radio />}\n                                label={<FormattedMessage\n                                    id='Apis.Create.WSDL.Steps.ProvideWSDL.SOAPtoREST.label'\n                                    defaultMessage='Generate REST APIs'\n                                />}\n                            />\n                        </RadioGroup>\n                        <FormHelperText>\n                            <sup>*</sup>\n                            <b>Generate REST APIs</b> option is only available for WSDL URL input type\n                        </FormHelperText>\n                    </FormControl>\n                </Grid>\n                <Grid item md={12}>\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend'>\n                            <React.Fragment>\n                                <sup className={classes.mandatoryStar}>*</sup>{' '}\n                                <FormattedMessage\n                                    id='Apis.Create.WSDL.Steps.ProvideWSDL.Input.type'\n                                    defaultMessage='Input type'\n                                />\n                            </React.Fragment>\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='Input type'\n                            value={apiInputs.inputType}\n                            onChange={event => inputsDispatcher({ action: 'inputType', value: event.target.value })}\n                        >\n                            <FormControlLabel\n                                value='url'\n                                control={<Radio />}\n                                label={<FormattedMessage\n                                    id='Apis.Create.WSDL.Steps.ProvideWSDL.url.label'\n                                    defaultMessage='WSDL URL'\n                                />}\n                            />\n                            <FormControlLabel\n                                value='file'\n                                control={<Radio />}\n                                label={<FormattedMessage\n                                    id='Apis.Create.WSDL.Steps.ProvideWSDL.file.label'\n                                    defaultMessage='WSDL File'\n                                />}\n                            />\n                            <FormControlLabel\n                                disabled={isGenerateRESTAPI}\n                                value='archive'\n                                control={<Radio />}\n                                label={<FormattedMessage\n                                    id='Apis.Create.WSDL.Steps.ProvideWSDL.archive.label'\n                                    defaultMessage='WSDL Archive'\n                                />}\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n                <Grid item md={7}>\n                    {(isFileInput || isArchiveInput) ? (\n                        // TODO: Pass message saying accepting only one file ~tmkb\n                        <DropZoneLocal onDrop={onDrop} files={apiInputs.inputValue} />\n                    ) : (\n                        <TextField\n                            autoFocus\n                            id='outlined-full-width'\n                            label='WSDL URL'\n                            placeholder='Enter WSDL URL'\n                            fullWidth\n                            margin='normal'\n                            variant='outlined'\n                            onChange={({ target: { value } }) => inputsDispatcher({ action: 'inputValue', value })}\n                            value={apiInputs.inputValue}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            InputProps={{\n                                onBlur: ({ target: { value } }) => {\n                                    validate(APIValidation.url.required().validate(value).error);\n                                },\n                                endAdornment: isValidating && (\n                                    <InputAdornment position='end'>\n                                        <CircularProgress />\n                                    </InputAdornment>\n                                ),\n                            }}\n                            // 'Give the URL of WSDL endpoint'\n                            helperText={isError && isError.message}\n                            error={Boolean(isError)}\n                            disabled={isValidating}\n                        />\n                    )}\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n}\n\nProvideWSDL.defaultProps = {\n    onValidate: () => { },\n};\nProvideWSDL.propTypes = {\n    apiInputs: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    inputsDispatcher: PropTypes.func.isRequired,\n    onValidate: PropTypes.func,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport Wsdl from 'AppData/Wsdl';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\n\nimport ProvideWSDL from './Steps/ProvideWSDL';\n\n/**\n * Handle API creation from WSDL.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function SOAPToREST() {\n    const [wizardStep, setWizardStep] = useState(0);\n\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'inputValue':\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : [] };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'SOAPtoREST',\n        inputType: 'url',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name, version, context, endpoint, policies,\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n        };\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n\n        const promisedWSDLImport = Wsdl.import(apiInputs.inputValue, additionalProperties, 'SOAPTOREST');\n        promisedWSDLImport\n            .then(() => {\n                Alert.info('API created successfully');\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={\n                <React.Fragment>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.WSDL.ApiCreateWSDL.heading'\n                            defaultMessage='Create an API using WSDL'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.WSDL.ApiCreateWSDL.sub.heading'\n                            defaultMessage={\n                                'Use an existing SOAP endpoint to create a managed API.' +\n                                ' Import the WSDL of the SOAP service.'\n                            }\n                        />\n                    </Typography>\n                </React.Fragment>\n            }\n        >\n            <Paper elevation={1}>\n                <Stepper activeStep={0}>\n                    <Step>\n                        <StepLabel>Provide WSDL</StepLabel>\n                    </Step>\n\n                    <Step>\n                        <StepLabel>Create API</StepLabel>\n                    </Step>\n                </Stepper>\n            </Paper>\n\n            <Grid container spacing={3}>\n                <Grid item md={12} />\n                <Grid item md={1} />\n                <Grid item md={11}>\n                    {wizardStep === 0 && (\n                        <ProvideWSDL\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm onValidate={handleOnValidate} onChange={handleOnChange} api={apiInputs} />\n                    )}\n                </Grid>\n                <Grid item md={1} />\n                <Grid item md={9}>\n                    <Grid container direction='row' justify='space-between'>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button variant='outlined'>\n                                        <FormattedMessage\n                                            id='Apis.Create.WSDL.ApiCreateWSDL.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && <Button onClick={() => setWizardStep(step => step - 1)}>Back</Button>}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    onClick={() => setWizardStep(step => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                >\n                                    Next\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating}\n                                    onClick={createAPI}\n                                >\n                                    Create {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport API from 'AppData/api';\nimport DropZoneLocal from 'AppComponents/Shared/DropZoneLocal';\n\nconst useStyles = makeStyles(theme => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n    },\n}));\n\n/**\n * Sub component of API Create using GraphQL UI, This is handling the taking input of GraphQL file or URL from the user\n * In the create API using OpenAPI wizard first step out of 2 steps\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nexport default function ProvideGraphQL(props) {\n    const { apiInputs, inputsDispatcher, onValidate } = props;\n    const classes = useStyles();\n    // If valid value is `null`,that means valid, else an error object will be there\n    const [isValid, setValidity] = useState({ file: null });\n    const [isValidating, setIsValidating] = useState(false);\n    /**\n     *\n     *\n     * @param {*} files\n     */\n    function onDrop(files) {\n        setIsValidating(true);\n\n        // Why `files.pop()` below is , We only handle one graphQL file at a time,\n        // So if use provide multiple, We would only\n        // accept the first file. This information is shown in the dropdown helper text\n        const file = files.pop();\n        let validFile = null;\n        API.validateGraphQLFile(file)\n            .then((response) => {\n                const {\n                    body: { isValid: isValidFile, info: graphQLInfo },\n                } = response;\n                if (isValidFile) {\n                    validFile = file;\n                    inputsDispatcher({ action: 'graphQLBean', value: graphQLInfo });\n                    setValidity({ ...isValid, file: null });\n                } else {\n                    setValidity({ ...isValid, file: { message: 'GraphQL content validation failed!' } });\n                }\n            })\n            .catch((error) => {\n                setValidity({ ...isValid, file: { message: 'GraphQL content validation failed!' } });\n                console.error(error);\n            })\n            .finally(() => {\n                setIsValidating(false); // Stop the loading animation\n                onValidate(validFile !== null); // If there is a valid file then validation has passed\n                // If the given file is valid , we set it as the inputValue else set `null`\n                inputsDispatcher({ action: 'inputValue', value: validFile });\n            });\n    }\n\n    return (\n        <React.Fragment>\n            <Grid container spacing={5}>\n                <Grid item md={12}>\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend'>\n                            <React.Fragment>\n                                <sup className={classes.mandatoryStar}>*</sup>{' '}\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.Steps.ProvideGraphQL.Input.type'\n                                    defaultMessage='Provide GraphQL File'\n                                />\n                            </React.Fragment>\n                        </FormLabel>\n                    </FormControl>\n                </Grid>\n                <Grid item md={7}>\n                    <DropZoneLocal error={isValid.file} onDrop={onDrop} files={apiInputs.inputValue}>\n                        {isValidating && <CircularProgress />}\n                        {isValid.file ? (\n                            isValid.file.message\n                        ) : (\n                            <FormattedMessage\n                                id='Apis.Create.GraphQL.Steps.ProvideGraphQL.Input.file.dropzone'\n                                defaultMessage='Select an GraphQL definition file'\n                            />\n                        )}\n                    </DropZoneLocal>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n}\n\nProvideGraphQL.defaultProps = {\n    onValidate: () => {},\n};\nProvideGraphQL.propTypes = {\n    apiInputs: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    inputsDispatcher: PropTypes.func.isRequired,\n    onValidate: PropTypes.func,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\n\nimport ProvideGraphQL from './Steps/ProvideGraphQL';\n\n/**\n * Handle API creation from GraphQL Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateGraphQL(props) {\n    const [wizardStep, setWizardStep] = useState(0);\n    const { history } = props;\n\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'inputValue':\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            case 'graphQLBean':\n                return { ...currentState, [action]: value };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                    version: value.version,\n                    context: value.context,\n                };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiCreateGraphQL',\n        inputType: 'file',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name, version, context, endpoint, policies, implementationType, inputValue,\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n        };\n        const uploadMethod = 'file';\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        additionalProperties.gatewayEnvironments = ['Production and Sandbox'];\n        const newApi = new API(additionalProperties);\n        const apiData = {\n            additionalProperties: JSON.stringify(additionalProperties),\n            implementationType,\n            [uploadMethod]: uploadMethod,\n            file: inputValue,\n        };\n\n        newApi\n            .importGraphQL(apiData)\n            .then((response) => {\n                const uuid = response.obj.id;\n                Alert.info(`${name} API created successfully`);\n                history.push(`/apis/${uuid}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            }).finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={\n                <React.Fragment>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.GraphQL.ApiCreateGraphQL.heading'\n                            defaultMessage='Create an API using GraphQL SDL definition'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.GraphQL.ApiCreateGraphQL.sub.heading'\n                            defaultMessage={\n                                'Use an existing GraphQL SDL definition file' +\n                                ' to create an API in WSO2 API Manager.'\n                            }\n                        />\n                    </Typography>\n                </React.Fragment>\n            }\n        >\n            <Paper elevation={1}>\n                {wizardStep === 0 && (\n                    <Stepper activeStep={0}>\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.one'\n                                    defaultMessage='Provide GraphQL'\n                                />\n                            </StepLabel>\n                        </Step>\n\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.two'\n                                    defaultMessage='Create API'\n                                />\n                            </StepLabel>\n                        </Step>\n                    </Stepper>\n                )}\n                {wizardStep === 1 && (\n                    <Stepper activeStep={1}>\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.one'\n                                    defaultMessage='Provide GraphQL'\n                                />\n                            </StepLabel>\n                        </Step>\n\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.two'\n                                    defaultMessage='Create API'\n                                />\n                            </StepLabel>\n                        </Step>\n                    </Stepper>\n                )}\n            </Paper>\n\n            <Grid container spacing={3}>\n                <Grid item md={12} />\n                <Grid item md={1} />\n                <Grid item md={11}>\n                    {wizardStep === 0 && (\n                        <ProvideGraphQL\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm onValidate={handleOnValidate} onChange={handleOnChange} api={apiInputs} />\n                    )}\n                </Grid>\n                <Grid item md={1} />\n                <Grid item md={9}>\n                    <Grid container direction='row' justify='space-between'>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button variant='outlined'>\n                                        <FormattedMessage\n                                            id='Apis.Create.GraphQL.ApiCreateGraphQL.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && <Button onClick={() => setWizardStep(step => step - 1)}>Back</Button>}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    onClick={() => setWizardStep(step => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                >\n                                    Next\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating}\n                                    onClick={createAPI}\n                                >\n                                    Create {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n\nApiCreateGraphQL.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","/**\n * Copyright (c) 2018, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport APICreateWrapper from 'AppComponents/Apis/Create/Default/APICreateWrapper';\n\nconst ApiCreateWebSocket = (props) => {\n    return (<APICreateWrapper {...props} type='ws' />);\n};\nexport default ApiCreateWebSocket;\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nimport { Route, Switch } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { PageNotFound } from 'AppComponents/Base/Errors/index';\n\nimport APICreateWrapper from './Default/APICreateWrapper';\nimport APIProductCreateWrapper from './Default/APIProductCreateWrapper';\nimport ApiCreateSwagger from './OpenAPI/ApiCreateOpenAPI';\nimport ApiCreateWSDL from './WSDL/ApiCreateWSDL';\nimport ApiCreateGraphQL from './GraphQL/ApiCreateGraphQL';\nimport ApiCreateWebSocket from './WebSocket/ApiCreateWebSocket';\n\nconst styles = {\n    content: {\n        flexGrow: 1,\n    },\n};\n\n\n/**\n *\n * Handle routing for APIs create\n * @param {*} props\n * @returns @inheritdoc\n */\nfunction ApiCreate(props) {\n    const { classes } = props;\n    return (\n        <main className={classes.content}>\n            <Switch>\n                <Route path='/apis/create/rest' component={APICreateWrapper} />\n                <Route path='/api-products/create' component={APIProductCreateWrapper} />\n                <Route path='/apis/create/graphQL' component={ApiCreateGraphQL} />\n                <Route path='/apis/create/openapi' component={ApiCreateSwagger} />\n                <Route path='/apis/create/wsdl' component={ApiCreateWSDL} />\n                <Route path='/apis/create/ws' component={ApiCreateWebSocket} />\n                <Route component={PageNotFound} />\n            </Switch>\n        </main>\n    );\n}\n\nApiCreate.propTypes = {\n    classes: PropTypes.shape({ content: PropTypes.string }).isRequired,\n};\n\nexport default withStyles(styles)(ApiCreate);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n    svgImage: {\n        cursor: 'pointer',\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n};\n\nfunction Background(props) {\n    const {\n        classes, colorPair, width, height,\n    } = props;\n    // Creating the background\n\n    const thumbnailBox = {\n        width: 250,\n        height: 200,\n    };\n\n    const thumbnailBoxChild = {\n        width: 50,\n        height: 50,\n    };\n\n    const rects = [];\n    for (let i = 0; i <= 4; i++) {\n        for (let j = 0; j <= 4; j++) {\n            rects.push(<rect\n                key={i + '_' + j}\n                {...thumbnailBoxChild}\n                /* eslint no-mixed-operators: 0 */\n                fill={'#' + (colorPair.sub - ((0x00000025 * i) - (j * 0x00000015))).toString(16)}\n                x={200 - i * 54}\n                y={54 * j}\n            />);\n        }\n    }\n\n    return (\n        <svg width={width} height={height} className={classes.svgImage}>\n            <rect {...thumbnailBox} fill={'#' + colorPair.prime.toString(16)} />\n            {rects}\n        </svg>\n    );\n}\n\nBackground.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    width: PropTypes.shape({}).isRequired,\n    height: PropTypes.shape({}).isRequired,\n    colorPair: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(Background);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport MaterialIcons from 'MaterialIcons';\nimport Background from './Background';\n\nconst styles = {\n    icon: {},\n    iconWrapper: {\n        position: 'relative',\n        '& span': {\n            position: 'absolute',\n            left: '50%',\n        },\n    },\n};\n\n/**\n * Generate dynamic API thumbnail image (SVG), Use PureComponent to avoid unnessasary re-rendering when hover ect\n *\n * @class ImageGenerator\n * @extends {PureComponent}\n */\nclass ImageGenerator extends PureComponent {\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.PureComponent} @inheritdoc\n     * @memberof ImageGenerator\n     */\n    render() {\n        const {\n            classes, api, width, height, theme, fixedIcon,\n        } = this.props;\n\n        const {\n            category, key, color, backgroundIndex,\n        } = fixedIcon;\n        let str = api;\n        if (typeof api === 'object') str = api.name;\n        if (!str) str = 'default';\n        let count;\n        let colorPair;\n        let randomBackgroundIndex;\n        let IconElement;\n        const colorPairs = theme.custom.thumbnail.backgrounds;\n\n        // Creating the icon\n        if (key && category) {\n            IconElement = key;\n        } else if (api.type === 'DOC') {\n            IconElement = theme.custom.thumbnail.document.icon;\n        } else {\n            count = MaterialIcons.categories[0].icons.length;\n            const randomIconIndex = (str.charCodeAt(0) + str.charCodeAt(str.length - 1)) % count;\n            IconElement = MaterialIcons.categories[0].icons[randomIconIndex].id;\n        }\n\n        if (api.type === 'DOC') {\n            colorPair = theme.custom.thumbnail.document.backgrounds;\n        } else if (backgroundIndex && colorPairs.length > backgroundIndex) {\n            // Obtain or generate background color pair\n            colorPair = colorPairs[backgroundIndex];\n        } else {\n            randomBackgroundIndex = (str.charCodeAt(0) + str.charCodeAt(str.length - 1)) % colorPairs.length;\n            colorPair = colorPairs[randomBackgroundIndex];\n        }\n        return (\n            <div className={classes.iconWrapper} style={{ width }}>\n                <Icon className={classes.icon} style={{ fontSize: height, marginLeft: -height / 2, color }}>\n                    {IconElement}\n                </Icon>\n                <Background width={width} height={height} colorPair={colorPair} />\n            </div>\n        );\n    }\n}\n\nImageGenerator.defaultProps = {\n    height: 190,\n    width: 250,\n    fixedIcon: {\n        category: null,\n        key: null,\n        color: '',\n        backgroundIndex: null,\n    },\n};\n\nImageGenerator.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    height: PropTypes.number,\n    width: PropTypes.number,\n    fixedIcon: PropTypes.shape({}),\n    api: PropTypes.shape({}).isRequired,\n    iconSettings: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ImageGenerator);\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* TODO: Move this file to components/Shared/ location ~tmkb */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AuthManager from 'AppData/AuthManager';\n\nconst resourcePath = {\n    APIS: '/apis',\n    API_PRODUCTS: '/api-products',\n    SINGLE_API: '/apis/{apiId}',\n    SINGLE_API_PRODUCT: '/api-products/{apiId}',\n    API_SWAGGER: '/apis/{apiId}/swagger',\n    API_WSDL: '/apis/{apiId}/wsdl',\n    API_GW_CONFIG: '/apis/{apiId}/gateway-config',\n    API_THUMBNAIL: '/apis/{apiId}/thumbnail',\n    API_COPY: '/apis/copy-api',\n    API_LC_HISTORY: '/apis/{apiId}/lifecycle-history',\n    API_CHANGE_LC: '/apis/change-lifecycle',\n    API_LC: '/apis/{apiId}/lifecycle',\n    API_LC_PENDING_TASK: '/apis/{apiId}/lifecycle/lifecycle-pending-task',\n    API_DEF: '/apis/import-definition',\n    API_VALIDATE_DEF: '/apis/validate-definition',\n    API_DOCS: '/apis/{apiId}/documents',\n    API_DOC: \"'/apis/{apiId}/documents/{documentId}'\",\n    API_DOC_CONTENT: \"'/apis/{apiId}/documents/{documentId}/content'\",\n    EXPORT_APIS: '/export/apis',\n    IMPORT_APIS: '/import/apis',\n    SUBSCRIPTION: '/subscriptions',\n    SUBSCRIPTIONS: '/subscriptions',\n    BLOCK_SUBSCRIPTION: '/subscriptions/block-subscription',\n    UNBLOCK_SUBSCRIPTION: '/subscriptions/unblock-subscription',\n    POLICIES: \"'/policies/{tierLevel}'\",\n    POLICY: \"'/policies/{tierLevel}/{tierName}'\",\n    ENDPOINTS: '/endpoints',\n    ENDPOINT: '/endpoints/{endpointId}',\n    LABLES: '/labels',\n    WORKFLOW: '/workflows/{workflowReferenceId}',\n    SERVICE_DISCOVERY: '/external-resources/services',\n};\n\nconst resourceMethod = {\n    POST: 'post',\n    PUT: 'put',\n    GET: 'get',\n    DELETE: 'delete',\n};\n\n/**\n * Show element iff user has proper scope for the view/action\n * @class ScopeValidation\n * @extends {React.Component}\n */\nclass ScopeValidation extends React.Component {\n    /**\n     * Creates an instance of ScopeValidation.\n     * @param {any} props @inheritDoc\n     * @memberof ScopeValidation\n     */\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    /**\n     * @inheritDoc\n     * @memberof ScopeValidation\n     */\n    componentDidMount() {\n        const hasScope = AuthManager.hasScopes(this.props.resourcePath, this.props.resourceMethod);\n        hasScope.then((haveScope) => {\n            this.setState({ haveScope });\n        });\n    }\n\n    /**\n     * @inheritDoc\n     * @returns {React.Component} Return react component\n     * @memberof ScopeValidation\n     */\n    render() {\n        const { children } = this.props;\n        const { haveScope } = this.state;\n        if (haveScope) {\n            return children || null;\n        }\n        return null;\n    }\n}\n\nScopeValidation.propTypes = {\n    children: PropTypes.node.isRequired,\n    resourcePath: PropTypes.string.isRequired,\n    resourceMethod: PropTypes.string.isRequired,\n};\n\nexport { ScopeValidation, resourceMethod, resourcePath };\n","import React from 'react';\n\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core/';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Slide from '@material-ui/core/Slide';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport API from 'AppData/api';\nimport { resourceMethod, resourcePath, ScopeValidation } from 'AppData/ScopeValidation';\nimport Alert from 'AppComponents/Shared/Alert';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport { FormattedMessage } from 'react-intl';\n\nconst styles = theme => ({\n    root: {\n        height: 70,\n        background: theme.palette.background.paper,\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    backLink: {\n        alignItems: 'center',\n        textDecoration: 'none',\n        display: 'flex',\n    },\n    backIcon: {\n        color: theme.palette.primary.main,\n        fontSize: 56,\n        cursor: 'pointer',\n    },\n    backText: {\n        color: theme.palette.primary.main,\n        cursor: 'pointer',\n        fontFamily: theme.typography.fontFamily,\n    },\n    deleteWrapper: {\n        flex: 0,\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: theme.spacing.unit * 2,\n    },\n    delete: {\n        display: 'flex',\n        flexDirection: 'column',\n        textAlign: 'center',\n        color: theme.custom.deleteButtonColor,\n        justifyContent: 'center',\n        cursor: 'pointer',\n    },\n    linkText: {\n        fontSize: theme.typography.fontSize,\n    },\n});\n\n/**\n * Handle Delete an API from API Overview/Details page\n *\n * @class DeleteApiButton\n * @extends {React.Component}\n */\nclass DeleteApiButton extends React.Component {\n    /**\n     *Creates an instance of DeleteApiButton.\n     * @param {*} props @inheritDoc\n     * @memberof DeleteApiButton\n     */\n    constructor(props) {\n        super(props);\n        this.handleApiDelete = this.handleApiDelete.bind(this);\n        this.handleRequestClose = this.handleRequestClose.bind(this);\n        this.handleRequestOpen = this.handleRequestOpen.bind(this);\n        this.state = { openMenu: false };\n    }\n\n    /**\n     * Handle Delete button close event\n     *\n     * @memberof DeleteApiButton\n     */\n    handleRequestClose() {\n        this.setState({ openMenu: false });\n    }\n\n    /**\n     * Handle Delete button onClick event\n     *\n     * @memberof DeleteApiButton\n     */\n    handleRequestOpen() {\n        this.setState({ openMenu: true });\n    }\n\n    /**\n     *\n     * Send API delete REST API request\n     * @param {*} e\n     * @memberof DeleteApiButton\n     */\n    handleApiDelete() {\n        const { api, history } = this.props;\n        if (api.apiType === API.CONSTS.APIProduct) {\n            api.deleteProduct().then((response) => {\n                if (response.status !== 200) {\n                    console.log(response);\n                    Alert.error('Something went wrong while deleting the API Product!');\n                    return;\n                }\n                const redirectURL = '/api-products';\n                Alert.success('API Product ' + api.name + ' was deleted successfully!');\n                history.push(redirectURL);\n            });\n        } else {\n            api.delete().then((response) => {\n                if (response.status !== 200) {\n                    console.log(response);\n                    Alert.error('Something went wrong while deleting the API!');\n                    return;\n                }\n                const redirectURL = '/apis';\n                Alert.success('API ' + api.name + ' was deleted successfully!');\n                history.push(redirectURL);\n            });\n        }\n    }\n\n    /**\n     *\n     * @inheritDoc\n     * @returns {React.Component} inherit docs\n     * @memberof DeleteApiButton\n     */\n    render() {\n        const { api, onClick, classes } = this.props;\n        const type = api.apiType === API.CONSTS.APIProduct ? 'API Product ' : 'API ';\n        const version = api.apiType === API.CONSTS.APIProduct ? null : '-' + api.version;\n        const deleteHandler = onClick || this.handleApiDelete;\n        return (\n            <React.Fragment>\n                {/* allowing delete based on scopes */}\n                <ScopeValidation resourceMethod={resourceMethod.DELETE} resourcePath={resourcePath.SINGLE_API}>\n                    <div className={classes.deleteWrapper}>\n                        <VerticalDivider height={70} />\n                        <a\n                            onClick={this.handleRequestOpen}\n                            onKeyDown={this.handleRequestOpen}\n                            className={classes.delete}\n                        >\n                            <div>\n                                <DeleteIcon />\n                            </div>\n                            <div className={classes.linkText}>Delete</div>\n                        </a>\n                    </div>\n                </ScopeValidation>\n                <Dialog open={this.state.openMenu} transition={Slide}>\n                    <DialogTitle>\n                        <FormattedMessage\n                            id='Apis.Details.components.DeleteApiButton.title.confirm'\n                            defaultMessage='Confirm'\n                        />\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            <FormattedMessage\n                                id='Apis.Details.components.DeleteApiButton.text.content'\n                                defaultMessage='Are you sure you want to delete the {type} {name} {version} ?'\n                                values={{ type, name: api.name, version }}\n                            />\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button\n                            dense\n                            variant='outlined'\n                            color='secondary'\n                            onClick={() => {\n                                deleteHandler();\n                                this.handleRequestClose();\n                            }}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.components.DeleteApiButton.button.delete'\n                                defaultMessage='Delete'\n                            />\n                        </Button>\n                        <Button dense onClick={this.handleRequestClose}>\n                            <FormattedMessage\n                                id='Apis.Details.components.DeleteApiButton.button.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n        );\n    }\n}\n\nDeleteApiButton.defaultProps = {\n    onClick: false,\n};\n\nDeleteApiButton.propTypes = {\n    api: PropTypes.shape({\n        delete: PropTypes.func,\n    }).isRequired,\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    onClick: PropTypes.func,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nexport default withRouter(withStyles(styles, { withTheme: true })(DeleteApiButton));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport green from '@material-ui/core/colors/green';\nimport red from '@material-ui/core/colors/red';\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Slide from '@material-ui/core/Slide';\nimport Select from '@material-ui/core/Select';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport PropTypes from 'prop-types';\nimport Dropzone from 'react-dropzone';\nimport { SketchPicker } from 'react-color';\nimport Api from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport MaterialIcons from 'MaterialIcons';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ImageGenerator from './ImageGenerator';\nimport Background from './Background';\n\nconst windowURL = window.URL || window.webkitURL;\nconst styles = theme => ({\n    acceptDrop: {\n        backgroundColor: green[50],\n    },\n    dropzone: {\n        border: '1px dashed ' + theme.palette.primary.main,\n        borderRadius: '5px',\n        cursor: 'pointer',\n        height: 'calc(100vh - 10em)',\n        padding: `${theme.spacing.unit * 2}px 0px`,\n        position: 'relative',\n        textAlign: 'center',\n        width: '100%',\n        margin: '10px 0',\n    },\n    dropZoneWrapper: {\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& span': {\n            fontSize: 100,\n            color: theme.palette.primary.main,\n        },\n    },\n    media: {\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n    preview: {\n        height: theme.spacing.unit * 25,\n    },\n    rejectDrop: {\n        backgroundColor: red[50],\n    },\n    suppressLinkStyles: {\n        textDecoration: 'none',\n        color: theme.palette.text.disabled,\n    },\n    thumb: {\n        '&:hover': {\n            zIndex: 1,\n            '& $thumbBackdrop': {\n                opacity: 0.2,\n            },\n        },\n    },\n    thumbBackdrop: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        backgroundColor: theme.palette.common.black,\n        opacity: 0.4,\n    },\n    thumbButton: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: theme.palette.common.white,\n    },\n    group: {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: '0 0 0 20px',\n    },\n    popupHeader: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    iconView: {\n        width: 30,\n        margin: 10,\n        cursor: 'pointer',\n    },\n    subtitle: {\n        marginRight: 20,\n    },\n    subtitleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    body: {\n        marginBottom: 10,\n    },\n    imageGenWrapper: {\n        '& > div': {\n            position: 'fixed',\n            marginTop: 20,\n        },\n    },\n    backgroundSelection: {\n        cursor: 'pointer',\n        marginRight: 10,\n        display: 'inline-block',\n    },\n    actionBox: {\n        boxShadow:\n            '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\n        justifyContent: 'flex-start',\n        padding: '10px 0 10px 10px',\n    },\n    imageContainer: {\n        paddingTop: 10,\n    },\n});\n\n/**\n * Give the icons array from category name\n *\n * @param {*} category\n * @param {*} allKeys\n * @returns\n */\nfunction FindCategoryKeys(category) {\n    for (let i = 0; i < MaterialIcons.categories.length; i++) {\n        if (MaterialIcons.categories[i].name === category) {\n            return MaterialIcons.categories[i].icons;\n        }\n    }\n}\n/**\n * Slide up transition for modal\n *\n * @param {any} props Properties\n * @returns {Slide} Slide up transition\n */\nfunction Transition(props) {\n    return <Slide direction='up' {...props} />;\n}\n/**\n * Provides a view for the API Thumbnail image.\n * This can be either user defined image uploaded earlier or a generated Image.\n */\nclass ThumbnailView extends Component {\n    /**\n     * Initializes the ThumbnailView Component\n     *\n     * @param {any} props Component properties\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            file: null,\n            thumbnail: null,\n            selectedTab: 'design',\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n        };\n        this.handleClick = this.handleClick.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    /**\n     * Load required data for showing the thumbnail view\n     */\n    componentDidMount() {\n        const { api: { apiType, id, type } } = this.props;\n        if (type !== 'DOC') {\n            const promisedThumbnail = apiType === Api.CONSTS.APIProduct ? new APIProduct().getAPIProductThumbnail(id) :\n                new Api().getAPIThumbnail(id);\n\n            promisedThumbnail.then((response) => {\n                if (response && response.data) {\n                    if (response.headers['content-type'] === 'application/json') {\n                        const iconJson = JSON.parse(response.data);\n                        this.setState({\n                            selectedIcon: iconJson.key,\n                            category: iconJson.category,\n                            color: iconJson.color,\n                            backgroundIndex: iconJson.backgroundIndex,\n                        });\n                    } else if (response && response.data.size > 0) {\n                        const url = windowURL.createObjectURL(response.data);\n                        this.setState({ thumbnail: url });\n                    }\n                }\n            });\n        }\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.thumbnail);\n        }\n    }\n\n    /**\n     * Event listener for file drop on the dropzone\n     *\n     * @param {File} acceptedFile dropped file\n     */\n    onDrop(acceptedFile) {\n        this.setState({ file: acceptedFile });\n    }\n\n    /**\n     * @param {SyntheticEvent} e React event object\n     */\n    handleClick = (action, intl) => () => {\n        if (action === 'btnEditAPIThumb') {\n            this.setState({ open: true });\n        } else if (action === 'btnUploadAPIThumb') {\n            const { api } = this.props;\n            const {\n                selectedTab, selectedIcon, category, color, backgroundIndex, file,\n            } = this.state;\n            let fileObj;\n            if (selectedTab === 'upload') {\n                if (!api.id && !file) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Listing.components.ImageGenerator.ThumbnailView.thumbnail.validation.error',\n                        defaultMessage: 'Invalid file or API information is not set correctly.',\n                    }));\n                    return;\n                }\n                /* eslint prefer-destructuring: [\"error\", {VariableDeclarator: {object: true}}] */\n                fileObj = file[0];\n            } else {\n                if (!selectedIcon && !color && !backgroundIndex) {\n                    Alert.error(intl.formatMessage({\n                        id: 'the.icon.is.not.modified',\n                        defaultMessage: 'The icon is not modified',\n                    }));\n                    return;\n                }\n                const newIconJson = {\n                    key: selectedIcon,\n                    category,\n                    color,\n                    backgroundIndex,\n                };\n                const blob = new Blob([JSON.stringify(newIconJson)], { type: 'application/json' });\n                fileObj = new File([blob], 'FileName.json', { type: 'application/json' });\n            }\n\n            this.uploadThumbnail(api.id, fileObj, intl);\n        }\n    };\n\n    /**\n     * Add new thumbnail image to an API\n     *\n     * @param {String} apiId ID of the API to be updated\n     * @param {File} file new thumbnail image file\n     */\n    uploadThumbnail(apiId, file, intl) {\n        const { api: { apiType, id } } = this.props;\n        const promisedThumbnail = apiType === Api.CONSTS.APIProduct ?\n            new APIProduct().addAPIProductThumbnail(id, file) :\n            new Api().addAPIThumbnail(id, file);\n\n        promisedThumbnail\n            .then(() => {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Listing.components.ImageGenerator.ThumbnailView.thumbnail.upload.success',\n                    defaultMessage: 'Thumbnail uploaded successfully',\n                }));\n                this.setState({ open: false, thumbnail: file.preview });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Listing.components.ImageGenerator.ThumbnailView.thumbnail.upload.error',\n                    defaultMessage: 'Error occurred while uploading new thumbnail. Please try again.',\n                }));\n            });\n    }\n\n    /**\n     * Handle modal close event\n     */\n    handleClose() {\n        if (this.state.file) {\n            windowURL.revokeObjectURL(this.state.file.preview);\n        }\n        this.setState({ open: false, file: null });\n    }\n    handleChange = (event, selectedTab) => {\n        this.setState({ selectedTab });\n    };\n    handleSelectionChange = name => (event) => {\n        this.setState({ [name]: event.target.value });\n    };\n    selectIcon = (selectedIcon) => {\n        this.setState({ selectedIcon });\n    };\n    handleChangeComplete = (color) => {\n        this.setState({ color: color.hex });\n    };\n    selectBackground = (backgroundIndex) => {\n        this.setState({ backgroundIndex });\n    };\n    saveDisableEnable() {\n        const {\n            file, selectedTab, selectedIcon, color, backgroundIndex,\n        } = this.state;\n        if (selectedTab === 'upload') {\n            return !(file && file[0]); // If no files is uploaded retrun true\n        } else {\n            return !(selectedIcon || backgroundIndex || color); // If one of them is selected we return false\n        }\n    }\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const {\n            api, classes, width, height, isEditable, theme, intl,\n        } = this.props;\n        const colorPairs = theme.custom.thumbnail.backgrounds;\n        const {\n            file, thumbnail, selectedTab, selectedIcon, color, backgroundIndex,\n        } = this.state;\n        let { category } = this.state;\n        if (!category) category = MaterialIcons.categories[0].name;\n        let overviewPath = '';\n        if (api.apiType) {\n            overviewPath = (api.apiType === Api.CONSTS.APIProduct) ?\n                `/api-products/${api.id}/overview` : `/apis/${api.id}/overview`;\n        } else {\n            overviewPath = `/apis/${api.apiUUID}/documents/${api.id}/details`;\n        }\n        let view;\n\n        if (thumbnail) {\n            view = <img height={height} width={width} src={thumbnail} alt='API Thumbnail' className={classes.media} />;\n        } else {\n            view = (\n                <ImageGenerator\n                    width={width}\n                    height={height}\n                    api={api}\n                    fixedIcon={{\n                        key: selectedIcon,\n                        color,\n                        backgroundIndex,\n                        category,\n                        api,\n                    }}\n                />\n            );\n        }\n\n        return (\n            <React.Fragment>\n                {isEditable ? (\n                    <ButtonBase\n                        style={{ marginBottom: theme.spacing(3) }}\n                        focusRipple\n                        className={classes.thumb}\n                        onClick={this.handleClick('btnEditAPIThumb', intl)}\n                    >\n                        {view}\n                        <span className={classes.thumbBackdrop} />\n                        <span className={classes.thumbButton}>\n                            <Typography component='span' variant='subtitle1' color='inherit'>\n                                <EditIcon />\n                            </Typography>\n                        </span>\n                    </ButtonBase>\n                ) : (\n                    <Link className={classes.suppressLinkStyles} to={overviewPath}>\n                        {view}\n                    </Link>\n                )}\n\n                <Dialog\n                    TransitionComponent={Transition}\n                    aria-labelledby='thumb-dialog-title'\n                    disableBackdropClick\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    fullWidth='true'\n                    maxWidth='lg'\n                    fullScreen\n                >\n                    <Paper square className={classes.popupHeader}>\n                        <IconButton color='inherit' onClick={this.handleClose} aria-label='Close'>\n                            <Icon>close</Icon>\n                        </IconButton>\n                        <RadioGroup\n                            aria-label='APIThumbnail'\n                            name='apiThumbnail'\n                            className={classes.group}\n                            value={this.state.selectedTab}\n                            onChange={this.handleChange}\n                        >\n                            <FormControlLabel\n                                value='design'\n                                control={<Radio />}\n                                label={<FormattedMessage\n                                    id='Apis.Listing.components.ImageGenerator.ThumbnailView.design'\n                                    defaultMessage='Design'\n                                />}\n                            />\n                            <FormControlLabel\n                                value='upload'\n                                control={<Radio />}\n                                label={<FormattedMessage\n                                    id='Apis.Listing.components.ImageGenerator.ThumbnailView.upload'\n                                    defaultMessage='Upload'\n                                />}\n                            />\n                        </RadioGroup>\n                    </Paper>\n\n                    <DialogContent>\n                        {selectedTab === 'upload' && (\n                            <Grid container spacing={4}>\n                                <Grid item xs={3}>\n                                    <div className={classes.imageContainer}>\n                                        <img\n                                            className={classes.preview}\n                                            src={\n                                                file && file.length > 0\n                                                    ? file[0].preview\n                                                    : '/publisher-new/site/public/images/api/api-default.png'\n                                            }\n                                            alt='Thumbnail Preview'\n                                        />\n                                    </div>\n                                </Grid>\n                                <Grid item xs={9}>\n                                    <Dropzone\n                                        multiple={false}\n                                        accept='image/*'\n                                        className={classes.dropzone}\n                                        activeClassName={classes.acceptDrop}\n                                        rejectClassName={classes.rejectDrop}\n                                        onDrop={(dropFile) => {\n                                            this.onDrop(dropFile);\n                                        }}\n                                    >\n                                        <div className={classes.dropZoneWrapper}>\n                                            <Icon className={classes.dropIcon}>cloud_upload</Icon>\n                                        </div>\n                                    </Dropzone>\n                                </Grid>\n                            </Grid>\n                        )}\n                        {selectedTab === 'design' && (\n                            <Grid container spacing={4}>\n                                <Grid item xs={3} className={classes.imageGenWrapper}>\n                                    <ImageGenerator\n                                        width={width}\n                                        height={height}\n                                        api={api}\n                                        fixedIcon={{\n                                            key: selectedIcon,\n                                            color,\n                                            backgroundIndex,\n                                            category,\n                                            api,\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={9}>\n                                    <div className={classes.subtitleWrapper}>\n                                        <Typography component='p' variant='subtitle2' className={classes.subtitle}>\n                                            <FormattedMessage\n                                                id={'Apis.Listing.components' +\n                                                '.ImageGenerator.ThumbnailView.select.category'}\n                                                defaultMessage='Select Category'\n                                            />\n                                        </Typography>\n                                        <Select\n                                            native\n                                            value={this.state.category}\n                                            onChange={this.handleSelectionChange('category')}\n                                        >\n                                            {MaterialIcons.categories.map(cat => (\n                                                <option value={cat.name}>{cat.name}</option>\n                                            ))}\n                                        </Select>\n                                    </div>\n                                    <Typography component='p' variant='body1' className={classes.body}>\n                                        <FormattedMessage\n                                            id='Apis.Listing.components.ImageGenerator.ThumbnailView.select.an.icon'\n                                            defaultMessage='Select an icon from the Material Icons for you api.'\n                                        />\n                                    </Typography>\n                                    <div style={{ background: '#efefef', maxHeight: 180, overflow: 'scroll' }}>\n                                        {FindCategoryKeys(category).map(icon => (\n                                            <Icon className={classes.iconView} onClick={() => this.selectIcon(icon.id)}>\n                                                {icon.id}\n                                            </Icon>\n                                        ))}\n                                    </div>\n                                    <div className={classes.subtitleWrapper}>\n                                        <Typography component='p' variant='subtitle2' className={classes.subtitle}>\n                                            <FormattedMessage\n                                                id={'Apis.Listing.components.ImageGenerator.ThumbnailView.select.' +\n                                                'color.for.the.icon'}\n                                                defaultMessage='Select a color for the icon'\n                                            />\n                                        </Typography>\n                                    </div>\n                                    <SketchPicker\n                                        color={this.state.color || '#ffffff'}\n                                        onChangeComplete={this.handleChangeComplete}\n                                    />\n                                    <div className={classes.subtitleWrapper}>\n                                        <Typography component='p' variant='subtitle2' className={classes.subtitle}>\n                                            <FormattedMessage\n                                                id={'Apis.Listing.components.ImageGenerator.' +\n                                                'ThumbnailView.select.background'}\n                                                defaultMessage='Select a Background'\n                                            />\n                                        </Typography>\n                                    </div>\n                                    {colorPairs.map((colorPair, index) => (\n                                        <div\n                                            className={classes.backgroundSelection}\n                                            onClick={() => this.selectBackground(index)}\n                                            onKeyDown={() => {}}\n                                        >\n                                            <Background width={100} height={100} colorPair={colorPair} />\n                                        </div>\n                                    ))}\n                                </Grid>\n                            </Grid>\n                        )}\n                    </DialogContent>\n                    <DialogActions className={classes.actionBox}>\n                        <Button\n                            disabled={this.saveDisableEnable()}\n                            variant='contained'\n                            color='primary'\n                            size='small'\n                            onClick={this.handleClick('btnUploadAPIThumb')}\n                        >\n                            <FormattedMessage\n                                id='Apis.Listing.components.ImageGenerator.ThumbnailView.upload.btn'\n                                defaultMessage='Upload'\n                            />\n                        </Button>\n                        <Button variant='contained' size='small' onClick={this.handleClose}>\n                            <FormattedMessage\n                                id='Apis.Listing.components.ImageGenerator.ThumbnailView.cancel.btn'\n                                defaultMessage='CANCEL'\n                            />\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n        );\n    }\n}\n\nThumbnailView.defaultProps = {\n    height: 190,\n    width: 250,\n    isEditable: false,\n};\n\nThumbnailView.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    height: PropTypes.number,\n    width: PropTypes.number,\n    isEditable: PropTypes.bool,\n    intl: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(ThumbnailView));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport green from '@material-ui/core/colors/green';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport DeleteApiButton from 'AppComponents/Apis/Details/components/DeleteApiButton';\n\nimport ThumbnailView from './ThumbnailView';\n\nconst styles = theme => ({\n    card: {\n        margin: theme.spacing.unit * (3 / 2),\n        maxWidth: theme.spacing.unit * 32,\n        transition: 'box-shadow 0.3s ease-in-out',\n    },\n    providerText: {\n        textTransform: 'capitalize',\n    },\n    apiDetails: { padding: theme.spacing.unit },\n    apiActions: { justifyContent: 'space-between', padding: `0px 0px ${theme.spacing.unit}px 8px` },\n    deleteProgress: {\n        color: green[200],\n        position: 'absolute',\n        marginLeft: '200px',\n    },\n});\n\n/**\n *\n * Render API Card component in API listing card view,containing essential API information like name , version ect\n * @class APIThumb\n * @extends {Component}\n */\nclass APIThumb extends Component {\n    /**\n     *Creates an instance of APIThumb.\n     * @param {*} props\n     * @memberof APIThumb\n     */\n    constructor(props) {\n        super(props);\n        this.state = { isHover: false, loading: false };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n        this.handleApiDelete = this.handleApiDelete.bind(this);\n    }\n\n    /**\n     *\n     * Delete an API listed in the listing page\n     * @param {React.SyntheticEvent} event OnClick event of delete button\n     * @param {String} [name=''] API Name use for alerting purpose only\n     * @memberof Listing\n     */\n    handleApiDelete() {\n        const { id, name } = this.props.api;\n        this.setState({ loading: true });\n        const { updateData, isAPIProduct } = this.props;\n        if (isAPIProduct) {\n            const promisedDelete = API.deleteProduct(id);\n            promisedDelete.then((response) => {\n                if (response.status !== 200) {\n                    Alert.info('Something went wrong while deleting the API Product!');\n                    return;\n                }\n                updateData(id);\n                Alert.info(`API Product ${name} deleted Successfully`);\n                this.setState({ loading: false });\n            });\n        } else {\n            const promisedDelete = API.delete(id);\n            promisedDelete.then((response) => {\n                if (response.status !== 200) {\n                    Alert.info('Something went wrong while deleting the API!');\n                    return;\n                }\n                updateData(id);\n                Alert.info(`API ${name} deleted Successfully`);\n                this.setState({ loading: false });\n            });\n        }\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof APIThumb\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof APIThumb\n     */\n    render() {\n        const { classes, api, isAPIProduct } = this.props;\n        const { isHover, loading } = this.state;\n\n        if (isAPIProduct) {\n            api.apiType = API.CONSTS.APIProduct;\n        } else {\n            api.apiType = API.CONSTS.API;\n        }\n\n        if (!api.lifeCycleStatus) {\n            api.lifeCycleStatus = api.status;\n        }\n\n        return (\n            <Card\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                raised={isHover}\n                className={classes.card}\n            >\n                <CardMedia src='None' component={ThumbnailView} height={140} title='Thumbnail' api={api} />\n                <CardContent className={classes.apiDetails}>\n                    <Typography gutterBottom variant='h5' component='h2'>\n                        {api.name}\n                    </Typography>\n                    <Grid container>\n                        <Grid item md={6}>\n                            <FormattedMessage id='by' defaultMessage='By' />:\n                            <Typography className={classes.providerText} variant='body1' gutterBottom>\n                                {api.provider}\n                            </Typography>\n                        </Grid>\n                        <Grid item md={6}>\n                            <FormattedMessage id='context' defaultMessage='Context' />:\n                            <Typography variant='body1' gutterBottom>\n                                {api.context}\n                            </Typography>\n                        </Grid>\n                        {isAPIProduct ? null : (\n                            <Grid item md={6}>\n                                <FormattedMessage id='version' defaultMessage='Version' />:\n                                <Typography variant='body1'>{api.version}</Typography>\n                            </Grid>\n                        )}\n                    </Grid>\n                </CardContent>\n                <CardActions className={classes.apiActions}>\n                    <Chip\n                        label={(api.apiType === API.CONSTS.APIProduct) ? api.state : api.lifeCycleStatus}\n                        color='default'\n                    />\n                    {api.type === 'GRAPHQL' && (\n                        <Chip label={api.type} color='primary' />\n                    )}\n                    <DeleteApiButton onClick={this.handleApiDelete} api={api} />\n                    {loading && <CircularProgress className={classes.deleteProgress} />}\n                </CardActions>\n            </Card>\n        );\n    }\n}\n\nAPIThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        apiType: PropTypes.string.isRequired,\n    }).isRequired,\n    updateData: PropTypes.func.isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(APIThumb));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport green from '@material-ui/core/colors/green';\n\nimport ThumbnailView from './ThumbnailView';\n\nconst styles = theme => ({\n    card: {\n        margin: theme.spacing.unit * (3 / 2),\n        maxWidth: theme.spacing.unit * 32,\n        transition: 'box-shadow 0.3s ease-in-out',\n    },\n    providerText: {\n        textTransform: 'capitalize',\n    },\n    docDetails: { padding: theme.spacing.unit },\n    docActions: { justifyContent: 'space-between', padding: `0px 0px ${theme.spacing.unit}px 0px` },\n    deleteProgress: {\n        color: green[200],\n        position: 'absolute',\n        marginLeft: '200px',\n    },\n});\n\n/**\n *\n * Render Doc Card component in Search listing card view,containing essential Doc information like doc name ,\n * source type ect\n * @class DocThumb\n * @extends {Component}\n */\nclass DocThumb extends Component {\n    /**\n     *Creates an instance of DocThumb.\n     * @param {*} props\n     * @memberof DocThumb\n     */\n    constructor(props) {\n        super(props);\n        this.state = { isHover: false };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof DocThumb\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof DocThumb\n     */\n    render() {\n        const { classes, doc } = this.props;\n        const { isHover } = this.state;\n\n        return (\n            <Card\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                raised={isHover}\n                className={classes.card}\n            >\n                <CardMedia src='None' component={ThumbnailView} height={140} title='Thumbnail' api={doc} />\n                <CardContent className={classes.docDetails}>\n                    <Typography gutterBottom variant='h5' component='h2'>\n                        {doc.name}\n                    </Typography>\n                    <Grid container>\n                        <Grid item md={6}>\n                            <FormattedMessage\n                                id='Apis.Listing.components.ImageGenerator.DocThumb.sourceType'\n                                defaultMessage='Source Type'\n                            />:\n                            <Typography variant='body1'>{doc.sourceType}</Typography>\n                        </Grid>\n                        <Grid item md={6}>\n                            <FormattedMessage\n                                id='Apis.Listing.components.ImageGenerator.DocThumb.apiName'\n                                defaultMessage='Api Name'\n                            />:\n                            <Typography className={classes.providerText} variant='body1' gutterBottom>\n                                {doc.apiName}\n                            </Typography>\n                        </Grid>\n                        <Grid item md={6}>\n                            <FormattedMessage\n                                id='Apis.Listing.components.ImageGenerator.DocThumb.apiVersion'\n                                defaultMessage='Api Version'\n                            />:\n                            <Typography variant='body1' gutterBottom>\n                                {doc.apiVersion}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nDocThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    doc: PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        sourceType: PropTypes.string.isRequired,\n        apiName: PropTypes.string.isRequired,\n        apiVersion: PropTypes.string.isRequired,\n    }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(DocThumb));\n","import React from 'react';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * React component for handling confirmation dialog box.\n * @class ConfirmDialog\n * @extends {React.Component}\n */\nexport default function ConfirmDialog(props) {\n    const {\n        title, message, labelCancel, labelOk, open, callback,\n    } = props;\n\n    /**\n     * If user confirms the action invoke the callback with true else false\n     * @param {String} action One of ConfirmDialog.Action actions\n     * @memberof ConfirmDialog\n     */\n    function handleRequestClose(action) {\n        if (action === ConfirmDialog.Action.OK) {\n            callback(true);\n        } else {\n            callback(false);\n        }\n    }\n\n    return (\n        <Dialog open={open} onClose={handleRequestClose}>\n            <DialogTitle>{title}</DialogTitle>\n            <DialogContent>\n                <DialogContentText>{message}</DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => handleRequestClose(ConfirmDialog.Action.CANCEL)} color='primary'>\n                    {labelCancel}\n                </Button>\n                <Button onClick={() => handleRequestClose(ConfirmDialog.Action.OK)} color='primary'>\n                    {labelOk}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nConfirmDialog.defaultProps = {\n    title: <FormattedMessage id='Apis.Shared.ConfirmDialog.please.confirm' defaultMessage='Please Confirm' />,\n    message: <FormattedMessage id='Apis.Shared.ConfirmDialog.are.you.sure' defaultMessage='Are you sure?' />,\n    labelOk: <FormattedMessage id='Apis.Shared.ConfirmDialog.ok' defaultMessage='OK' />,\n    labelCancel: <FormattedMessage id='Apis.Shared.ConfirmDialog.cancel' defaultMessage='Cancel' />,\n    callback: () => {},\n};\nConfirmDialog.propTypes = {\n    title: PropTypes.string,\n    message: PropTypes.string,\n    labelCancel: PropTypes.string,\n    labelOk: PropTypes.string,\n    open: PropTypes.bool.isRequired,\n    callback: PropTypes.func,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\nConfirmDialog.Action = {\n    OK: 'ok',\n    CANCEL: 'cancel',\n};\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport { Button } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst styles = theme => ({\n    wrapper: {\n        margin: theme.spacing.unit,\n        position: 'relative',\n    },\n    buttonSuccess: {\n        backgroundColor: green[500],\n        '&:hover': {\n            backgroundColor: green[700],\n        },\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n});\n\n/**\n * Provide animating button element with loading animation and success icon.\n * @param {Object} props React properties\n * @returns {React.Component} Button component\n */\nconst InteractiveButton = (props) => {\n    // TODO: This prop transformation can be nicely done with ES6  (Rest/Spread Properties) if use stage 2 support ~tmkb\n    const {\n        loading,\n        success,\n        children,\n        classes,\n        color,\n        disableFocusRipple,\n        disableRipple,\n        fullWidth,\n        href,\n        mini,\n        size,\n        variant,\n    } = props;\n    const buttonProps = {\n        color,\n        disableFocusRipple,\n        disableRipple,\n        fullWidth,\n        href,\n        mini,\n        size,\n        variant,\n    };\n    const buttonClassName = classNames({\n        [classes.buttonSuccess]: success,\n    });\n    return (\n        <div className={classes.wrapper}>\n            <Button {...buttonProps} className={buttonClassName} disabled={loading}>\n                {children}\n            </Button>\n            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n        </div>\n    );\n};\n\nInteractiveButton.defaultProps = {\n    loading: false,\n    success: false,\n    color: 'default',\n    disabled: false,\n    disableFocusRipple: false,\n    fullWidth: false,\n    mini: false,\n    size: 'medium',\n    type: 'button',\n    variant: 'flat',\n    disableRipple: false,\n    href: '',\n};\n\n/* porpTypes taken from MUI button class */\nInteractiveButton.propTypes = {\n    loading: PropTypes.bool,\n    success: PropTypes.bool,\n    children: PropTypes.node.isRequired,\n    classes: PropTypes.shape({\n        buttonSuccess: PropTypes.string,\n        wrapper: PropTypes.string,\n        buttonProgress: PropTypes.string,\n    }).isRequired,\n    /**\n     * The color of the component. It supports those theme colors that make sense for this component.\n     */\n    color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n    /**\n     * If `true`, the button will be disabled.\n     */\n    disabled: PropTypes.bool,\n    /**\n     * If `true`, the  keyboard focus ripple will be disabled.\n     * `disableRipple` must also be true.\n     */\n    disableFocusRipple: PropTypes.bool,\n    /**\n     * If `true`, the ripple effect will be disabled.\n     */\n    disableRipple: PropTypes.bool,\n    /**\n     * If `true`, the button will take up the full width of its container.\n     */\n    fullWidth: PropTypes.bool,\n    /**\n     * The URL to link to when the button is clicked.\n     * If defined, an `a` element will be used as the root node.\n     */\n    href: PropTypes.string,\n    /**\n     * If `true`, and `variant` is `'fab'`, will use mini floating action button styling.\n     */\n    mini: PropTypes.bool,\n    /**\n     * The size of the button.\n     * `small` is equivalent to the dense button styling.\n     */\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\n    /**\n     * @ignore\n     */\n    type: PropTypes.string,\n    /**\n     * The type of button.\n     */\n    variant: PropTypes.oneOf(['flat', 'raised', 'fab']),\n};\nexport default withStyles(styles)(InteractiveButton);\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport Progress from './Progress';\n\nimport './redirecting.css';\n\nconst Redirecting = (props) => {\n    const { message } = props;\n\n    return (\n        <div className='redirect-flex-container'>\n            <Grid container justify='center' alignItems='center' spacing={0} className='redirect-grid-container'>\n                <Grid item lg={6} md={8} xs={10}>\n                    <Grid container alignItems='center'>\n                        <Grid item sm={2} xs={12}>\n                            <Progress className='redirect-loadingbar' />\n                        </Grid>\n                        <Grid item sm={10} xs={12}>\n                            <div className='redirect-main-content'>\n                                <Paper elevation={5} square className='redirect-paper'>\n                                    {message}\n                                </Paper>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n\nRedirecting.propTypes = {\n    message: PropTypes.string.isRequired,\n};\n\nexport default Redirecting;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Icon from '@material-ui/core/Icon';\nimport VerticalDivider from './VerticalDivider';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing.unit * 2,\n        borderRadius: theme.shape.borderRadius,\n        border: 'solid 1px ' + theme.palette.secondary.main,\n        '& span.material-icons': {\n            fontSize: 80,\n            color: theme.palette.primary.main,\n        },\n    },\n    button: {\n        marginTop: theme.spacing.unit,\n        marginBottom: theme.spacing.unit,\n    },\n    content: {\n        paddingTop: theme.spacing.unit,\n        paddingBottom: theme.spacing.unit,\n        paddingRight: theme.spacing.unit,\n    },\n});\n\nclass InlineMessage extends React.Component {\n    handleExpandClick = () => {\n        this.setState(state => ({ expanded: !state.expanded }));\n    };\n\n    render() {\n        const { classes, height, type } = this.props;\n        return (\n            <Paper className={classes.root} elevation={1} {...this.props}>\n                {type === 'info' && <Icon>{type}</Icon>}\n                <VerticalDivider height={height} />\n                <div className={classes.content}>{this.props.children}</div>\n            </Paper>\n        );\n    }\n}\n\nInlineMessage.propTypes = {\n    classes: PropTypes.shape({\n        root: PropTypes.string,\n        iconItem: PropTypes.string,\n        content: PropTypes.string,\n    }).isRequired,\n    height: PropTypes.number,\n    type: PropTypes.string,\n    children: PropTypes.shape({}).isRequired,\n};\nInlineMessage.defaultProps = {\n    height: 100,\n    type: 'info',\n};\nexport default withStyles(styles)(InlineMessage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    paper: {\n        marginRight: theme.spacing.unit * 2,\n    },\n    position: {\n        zIndex: 1,\n    },\n});\n\n/**\n * Button with dropdown menu\n *\n * @class MenuButton\n * @extends {React.Component}\n */\nclass MenuButton extends React.Component {\n    /**\n     *Creates an instance of MenuButton.\n     * @param {Object} props @inheritdoc\n     * @memberof MenuButton\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof MenuButton\n     */\n    handleToggle() {\n        this.setState(state => ({ open: !state.open }));\n    }\n\n    /**\n     *\n     *\n     * @param {React.SyntheticEvent} event\n     * @memberof MenuButton\n     */\n    handleClose(event) {\n        if (this.anchorEl.contains(event.target)) {\n            return;\n        }\n        this.setState({ open: false });\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof MenuButton\n     */\n    render() {\n        const { children, menuList, buttonProps } = this.props;\n        const { open } = this.state;\n        return (\n            <React.Fragment>\n                <Button\n                    buttonRef={(node) => {\n                        this.anchorEl = node;\n                    }}\n                    aria-owns={open ? 'menu-list-grow' : null}\n                    aria-haspopup='true'\n                    onClick={this.handleToggle}\n                    {...buttonProps}\n                >\n                    {children} ▼\n                </Button>\n                <Popper\n                    open={open}\n                    placement='bottom-start'\n                    anchorEl={this.anchorEl}\n                    transition\n                    disablePortal\n                    className={this.props.classes.position}\n                >\n                    {({ TransitionProps, placement }) => (\n                        <Grow\n                            {...TransitionProps}\n                            id='menu-list-grow'\n                            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                        >\n                            <Paper>\n                                <ClickAwayListener onClickAway={this.handleClose}>{menuList}</ClickAwayListener>\n                            </Paper>\n                        </Grow>\n                    )}\n                </Popper>\n            </React.Fragment>\n        );\n    }\n}\n\nMenuButton.propTypes = {\n    classes: PropTypes.shape({ position: PropTypes.shape({}) }).isRequired,\n    menuList: PropTypes.element.isRequired,\n    children: PropTypes.shape({}).isRequired,\n    buttonProps: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(MenuButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { List, ListItem, ListItemText, Divider } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/styles';\nimport { Link } from 'react-router-dom';\n\nimport MenuButton from 'AppComponents/Shared/MenuButton';\nimport { FormattedMessage } from 'react-intl';\n\nconst useStyles = makeStyles(theme => ({\n    links: {\n        textDecoration: 'none',\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n}));\n\nconst APICreateMenu = (props) => {\n    const classes = useStyles();\n\n    const createTypes = (\n        <List>\n            <ListItem>\n                <Link to='/apis/create/rest' className={classes.links}>\n                    <ListItemText\n                        primary={\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.primary.rest'\n                                defaultMessage='Design a New REST API'\n                            />\n                        }\n                        secondary={\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.secondary.rest'\n                                defaultMessage='Design and prototype a new REST API'\n                            />\n                        }\n                    />\n                </Link>\n            </ListItem>\n            <Divider />\n            <ListItem>\n                <Link to='/apis/create/openapi' className={classes.links}>\n                    <ListItemText\n                        primary={\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.primary.swagger'\n                                defaultMessage='I Have an Existing REST API'\n                            />\n                        }\n                        secondary={\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.secondary.swagger'\n                                defaultMessage='Use an existing REST endpoint or Swagger definition'\n                            />\n                        }\n                    />\n                </Link>\n            </ListItem>\n            <Divider />\n            <ListItem>\n                <Link to='/apis/create/wsdl' className={classes.links}>\n                    <ListItemText\n                        primary={\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.primary.soap'\n                                defaultMessage='I Have a SOAP Endpoint'\n                            />\n                        }\n                        secondary={\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.secondary.soap'\n                                defaultMessage='Use an existing SOAP or Import the WSDL'\n                            />\n                        }\n                    />\n                </Link>\n            </ListItem>\n            <Divider />\n            <ListItem>\n                <Link to='/apis/create/graphQL' className={classes.links}>\n                    <ListItemText\n                        primary={\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.primary.graphql'\n                                defaultMessage='I Have a GraphQL SDL schema'\n                            />\n                        }\n                        secondary={\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.secondary.graphql'\n                                defaultMessage='Import a GraphQL SDL schema'\n                            />\n                        }\n                    />\n                </Link>\n            </ListItem>\n            <Divider />\n            <ListItem>\n                <Link to='/apis/create/ws' className={classes.links}>\n                    <ListItemText\n                        primary={\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.primary.ws'\n                                defaultMessage='Design New Websocket API'\n                            />\n                        }\n                        secondary={\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.secondary.ws'\n                                defaultMessage='Design and prototype a new WebSocket API'\n                            />\n                        }\n                    />\n                </Link>\n            </ListItem>\n        </List>\n    );\n    return <MenuButton {...props} menuList={createTypes} />;\n};\n\nAPICreateMenu.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.element, PropTypes.array]).isRequired,\n};\nexport default APICreateMenu;\n","const getSwagger = policyLevel => ({\n    paths: {\n        '/order': {\n            post: {\n                'x-auth-type': 'Application & Application User',\n                'x-throttling-tier': policyLevel,\n                description: 'Create a new Order',\n                parameters: [\n                    {\n                        schema: { $ref: '#/definitions/Order' },\n                        description: 'Order object that needs to be added',\n                        name: 'body',\n                        required: true,\n                        in: 'body',\n                    },\n                ],\n                responses: {\n                    201: {\n                        headers: {\n                            Location: {\n                                description: 'The URL of the newly created resource.',\n                                type: 'string',\n                            },\n                            'Content-Type': {\n                                description: 'The content type of the body.',\n                                type: 'string',\n                            },\n                        },\n                        schema: { $ref: '#/definitions/Order' },\n                        description:\n                            'Created. Successful response with the newly created object as entity in' +\n                            'the body. Location header contains URL of newly created entity.',\n                    },\n                    400: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description: 'Bad Request. Invalid request or validation error.',\n                    },\n                    415: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description: 'Unsupported Media Type. The entity of the request was in a not supported format.',\n                    },\n                },\n            },\n        },\n        '/menu': {\n            get: {\n                'x-auth-type': 'Application & Application User',\n                'x-throttling-tier': policyLevel,\n                description: 'Return a list of available menu items',\n                parameters: [],\n                responses: {\n                    200: {\n                        headers: {},\n                        schema: {\n                            items: { $ref: '#/definitions/MenuItem' },\n                            type: 'array',\n                        },\n                        description: 'OK. List of APIs is returned.',\n                    },\n                    304: {\n                        description:\n                            'Not Modified. Empty body because the client has already the latest' +\n                            ' version of the requested resource.',\n                    },\n                    406: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description: 'Not Acceptable. The requested media type is not supported',\n                    },\n                },\n            },\n        },\n        '/order/{orderId}': {\n            put: {\n                'x-auth-type': 'Application & Application User',\n                'x-throttling-tier': policyLevel,\n                description: 'Update an existing Order',\n                parameters: [\n                    {\n                        description: 'Order Id',\n                        name: 'orderId',\n                        format: 'string',\n                        type: 'string',\n                        required: true,\n                        in: 'path',\n                    },\n                    {\n                        schema: { $ref: '#/definitions/Order' },\n                        description: 'Order object that needs to be added',\n                        name: 'body',\n                        required: true,\n                        in: 'body',\n                    },\n                ],\n                responses: {\n                    200: {\n                        headers: {\n                            Location: {\n                                description: 'The URL of the newly created resource.',\n                                type: 'string',\n                            },\n                            'Content-Type': {\n                                description: 'The content type of the body.',\n                                type: 'string',\n                            },\n                        },\n                        schema: { $ref: '#/definitions/Order' },\n                        description: 'OK. Successful response with updated Order',\n                    },\n                    400: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description: 'Bad Request. Invalid request or validation error',\n                    },\n                    404: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description: 'Not Found. The resource to be updated does not exist.',\n                    },\n                    412: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description:\n                            'Precondition Failed. The request has not been performed because one ' +\n                            'of the preconditions is not met.',\n                    },\n                },\n            },\n            get: {\n                'x-auth-type': 'Application & Application User',\n                'x-throttling-tier': policyLevel,\n                description: 'Get details of an Order',\n                parameters: [\n                    {\n                        description: 'Order Id',\n                        name: 'orderId',\n                        format: 'string',\n                        type: 'string',\n                        required: true,\n                        in: 'path',\n                    },\n                ],\n                responses: {\n                    200: {\n                        schema: { $ref: '#/definitions/Order' },\n                        headers: {},\n                        description: 'OK Requested Order will be returned',\n                    },\n                    304: {\n                        description:\n                            'Not Modified. Empty body because the client has already the latest' +\n                            ' version of the requested resource.',\n                    },\n                    404: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description: 'Not Found. Requested API does not exist.',\n                    },\n                    406: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description: 'Not Acceptable. The requested media type is not supported',\n                    },\n                },\n            },\n            delete: {\n                'x-auth-type': 'Application & Application User',\n                'x-throttling-tier': policyLevel,\n                description: 'Delete an existing Order',\n                parameters: [\n                    {\n                        description: 'Order Id',\n                        name: 'orderId',\n                        format: 'string',\n                        type: 'string',\n                        required: true,\n                        in: 'path',\n                    },\n                ],\n                responses: {\n                    200: {\n                        description: 'OK. Resource successfully deleted.',\n                    },\n                    404: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description: 'Not Found. Resource to be deleted does not exist.',\n                    },\n                    412: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description:\n                            'Precondition Failed. The request has not been performed because one of the' +\n                            ' preconditions is not met.',\n                    },\n                },\n            },\n        },\n    },\n    schemes: ['https'],\n    produces: ['application/json'],\n    swagger: '2.0',\n    definitions: {\n        ErrorListItem: {\n            title: 'Description of individual errors that may have occored during a request.',\n            properties: {\n                message: {\n                    description: 'Description about individual errors occored',\n                    type: 'string',\n                },\n                code: { format: 'int64', type: 'integer' },\n            },\n            required: ['code', 'message'],\n        },\n        MenuItem: {\n            title: 'Pizza menu Item',\n            properties: {\n                price: { type: 'string' },\n                description: { type: 'string' },\n                name: { type: 'string' },\n                image: { type: 'string' },\n            },\n            required: ['name'],\n        },\n        Order: {\n            title: 'Pizza Order',\n            properties: {\n                customerName: { type: 'string' },\n                delivered: { type: 'boolean' },\n                address: { type: 'string' },\n                pizzaType: { type: 'string' },\n                creditCardNumber: { type: 'string' },\n                quantity: { type: 'number' },\n                orderId: { type: 'string' },\n            },\n            required: ['orderId'],\n        },\n        Error: {\n            title: 'Error object returned with 4XX HTTP status',\n            properties: {\n                message: {\n                    description: 'Error message.',\n                    type: 'string',\n                },\n                error: {\n                    items: { $ref: '#/definitions/ErrorListItem' },\n                    description:\n                        'If there are more than one error list them out. Ex. list out validation errors by each field.',\n                    type: 'array',\n                },\n                description: {\n                    description: 'A detail description about the error message.',\n                    type: 'string',\n                },\n                code: { format: 'int64', type: 'integer' },\n                moreInfo: {\n                    description: 'Preferably an url with more details about the error.',\n                    type: 'string',\n                },\n            },\n            required: ['code', 'message'],\n        },\n    },\n    consumes: ['application/json'],\n    info: {\n        title: 'PizzaShackAPI',\n        description: 'This is a RESTFul API for Pizza Shack online pizza delivery store.\\n',\n        license: {\n            name: 'Apache 2.0',\n            url: 'http://www.apache.org/licenses/LICENSE-2.0.html',\n        },\n        contact: {\n            email: 'architecture@pizzashack.com',\n            name: 'John Doe',\n            url: 'http://www.pizzashack.com',\n        },\n        version: '1.0.0',\n    },\n});\n\nexport default getSwagger;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Redirect from 'react-router-dom/Redirect';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport Create from '@material-ui/icons/Create';\nimport GetApp from '@material-ui/icons/GetApp';\nimport { PropTypes } from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport APICreateMenu from '../components/APICreateMenu';\nimport getSampleSwagger from './SamplePetStore.js';\n\nconst styles = theme => ({\n    buttonProgress: {\n        color: green[500],\n        position: 'relative',\n    },\n    headline: {\n        paddingTop: theme.spacing.unit * 1.25,\n        paddingLeft: theme.spacing.unit * 2.5,\n    },\n    head: {\n        paddingBottom: theme.spacing.unit * 2,\n        fontWeight: 200,\n    },\n    content: {\n        paddingBottom: theme.spacing.unit * 2,\n    },\n    buttonLeft: {\n        marginRight: theme.spacing.unit,\n    },\n});\n\n/**\n * Show Initial Welcome card if no APIs are available to list\n * Handle deploying a sample API (Create and Publish)\n *\n * @class SampleAPI\n * @extends {Component}\n */\nclass SampleAPI extends Component {\n    /**\n     *Creates an instance of SampleAPI.\n     * @param {Object} props @inheritdoc\n     * @memberof SampleAPI\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            published: false,\n            api: null,\n            deploying: false,\n        };\n        this.sampleApi = new API();\n        this.handleDeploySample = this.handleDeploySample.bind(this);\n        this.createSampleAPI = this.createSampleAPI.bind(this);\n    }\n\n    /**\n     *Handle onClick event for `Deploy Sample API` Button\n     * @memberof SampleAPI\n     */\n    handleDeploySample() {\n        const { intl } = this.props;\n        this.setState({ deploying: true });\n        const promisedSampleAPI = this.createSampleAPI();\n        const swaggerUpdatePromise = promisedSampleAPI.then((sampleAPI) => {\n            Alert.info(intl.formatMessage({\n                id: 'Apis.Listing.SampleAPI.SampleAPI.created',\n                defaultMessage: 'Sample PizzaShackAPI API created successfully',\n            }));\n            return sampleAPI.updateSwagger(getSampleSwagger('Unlimited'));\n        });\n        swaggerUpdatePromise.catch((error) => {\n            console.error(error);\n            Alert.error(error);\n        });\n        swaggerUpdatePromise.then((api) => {\n            api.publish()\n                .then(() => {\n                    this.setState({ published: true, api });\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Listing.SampleAPI.SampleAPI.published',\n                        defaultMessage: 'PizzaShackAPI API published successfully',\n                    }));\n                })\n                .catch((error) => {\n                    console.error(error);\n                    this.setState({ deploying: false });\n                    Alert.error(error);\n                });\n        });\n    }\n\n    /**\n     * Construct the sample API date and invoke API.create method to create API\n     * @returns {Promise} SwaggerJs client promise appending an error handler and mapping response.obj as resolved value\n     * @memberof SampleAPI\n     */\n    createSampleAPI() {\n        const data = {\n            name: 'PizzaShackAPI',\n            description: 'This is a simple API for Pizza Shack online pizza delivery store.',\n            context: '/pizzashack',\n            version: '1.0.0',\n            transport: ['http', 'https'],\n            tags: ['pizza'],\n            policies: ['Unlimited'],\n            securityScheme: ['oauth2'],\n            visibility: 'PUBLIC',\n            gatewayEnvironments: ['Production and Sandbox'],\n            businessInformation: {\n                businessOwner: 'Jane Roe',\n                businessOwnerEmail: 'marketing@pizzashack.com',\n                technicalOwner: 'John Doe',\n                technicalOwnerEmail: 'architecture@pizzashack.com',\n            },\n            endpointConfig: {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: 'https://localhost:9443/am/sample/pizzashack/v1/api/',\n                },\n                production_endpoints: {\n                    url: 'https://localhost:9443/am/sample/pizzashack/v1/api/',\n                },\n            },\n            operations: [\n                {\n                    target: '/order/{orderId}',\n                    verb: 'GET',\n                    throttlingPolicy: 'Unlimited',\n                    authType: 'Application & Application User',\n                },\n                {\n                    target: '/order/{orderId}',\n                    verb: 'DELETE',\n                    throttlingPolicy: 'Unlimited',\n                    authType: 'Application & Application User',\n                },\n                {\n                    target: '/order/{orderId}',\n                    verb: 'PUT',\n                    throttlingPolicy: 'Unlimited',\n                    authType: 'Application & Application User',\n                },\n                {\n                    target: '/menu',\n                    verb: 'GET',\n                    throttlingPolicy: 'Unlimited',\n                    authType: 'Application & Application User',\n                },\n                {\n                    target: '/order',\n                    verb: 'POST',\n                    throttlingPolicy: 'Unlimited',\n                    authType: 'Application & Application User',\n                },\n            ],\n        };\n\n        const sampleAPI = new API(data);\n        return sampleAPI.save().catch((error) => {\n            console.error(error);\n            this.setState({ deploying: false });\n            const { response } = error;\n            if (response) {\n                const { code, description, message } = response.body;\n                Alert.error(`ERROR[${code}] : ${description} | ${message}`);\n            } else {\n                Alert.error(error);\n            }\n        });\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof SampleAPI\n     */\n    render() {\n        const { published, api, deploying } = this.state;\n        const { classes } = this.props;\n\n        if (published && api) {\n            const url = '/apis/' + api.id + '/overview';\n            return <Redirect to={url} />;\n        }\n        return (\n            <InlineMessage type='info' height={140}>\n                <div className={classes.contentWrapper}>\n                    <Typography variant='h5' component='h3' className={classes.head}>\n                        <FormattedMessage\n                            id='welcome.to.wso2.api.manager'\n                            defaultMessage='Welcome to WSO2 API Manager'\n                        />\n                    </Typography>\n                    <Typography component='p' className={classes.content}>\n                        <FormattedMessage\n                            id='Apis.Listing.SampleAPI.SampleAPI.description'\n                            defaultMessage={\n                                'WSO2 API Publisher enables API providers to ' +\n                                ' publish APIs, share documentation, provision API keys and gather feedback' +\n                                ' on features, quality and usage. To get started, Create an API ' +\n                                'or Publish a sample API.'\n                            }\n                        />\n                    </Typography>\n                    <div className={classes.actions}>\n                        <APICreateMenu\n                            buttonProps={{\n                                size: 'small',\n                                color: 'primary',\n                                variant: 'outlined',\n                                className: classes.buttonLeft,\n                            }}\n                        >\n                            <Create />\n                            <FormattedMessage id='create.new.api' defaultMessage='Create New API' />\n                        </APICreateMenu>\n                        <Button\n                            size='small'\n                            color='primary'\n                            disabled={deploying}\n                            variant='outlined'\n                            onClick={this.handleDeploySample}\n                        >\n                            <GetApp />\n                            <FormattedMessage id='deploy.sample.api' defaultMessage='Deploy Sample API' />\n                            {deploying && <CircularProgress size={24} className={classes.buttonProgress} />}\n                        </Button>\n                    </div>\n                </div>\n            </InlineMessage>\n        );\n    }\n}\n\nSampleAPI.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(SampleAPI));\n","const getApiProductPayload = (calculatorApiId, mathApiId) => ({\n    name: 'CalculatorAPIProduct',\n    context: '/calc_prod',\n    description: 'A calculator API Product that supports basic operations',\n    thumbnailUri: '/api-products/01234567-0123-0123-0123-012345678901/thumbnail',\n    visibility: 'PUBLIC',\n    visibleRoles: ['testrole', 'admin'],\n    visibleTenants: ['string'],\n    policies: ['Bronze', 'Silver', 'Unlimited'],\n    state: 'PUBLISHED',\n    subscriptionAvailability: 'ALL_TENANTS',\n    subscriptionAvailableTenants: [],\n    additionalProperties: {\n        newprop: 'string',\n        additionalProp2: 'string',\n        additionalProp3: 'string',\n    },\n    businessInformation: {\n        businessOwner: 'businessowner',\n        businessOwnerEmail: 'businessowner@wso2.com',\n    },\n    gatewayEnvironments: ['Production and Sandbox'],\n    transport: ['http', 'https'],\n    apis: [\n        {\n            apiId: calculatorApiId,\n            operations: [\n                {\n                    target: '/add',\n                    verb: 'POST',\n                },\n                {\n                    target: '/divide',\n                    verb: 'POST',\n                },\n            ],\n        },\n        {\n            apiId: mathApiId,\n            operations: [\n                {\n                    target: '/area',\n                    verb: 'GET',\n                },\n                {\n                    target: '/volume',\n                    verb: 'GET',\n                },\n            ],\n        },\n    ],\n});\n\nexport default getApiProductPayload;\n","const mathPayload = {\n    name: 'MathAPI',\n    description: 'This is a simple API for Pizza Shack online pizza delivery store.',\n    context: '/mathapi',\n    version: '1.0',\n    transport: ['http', 'https'],\n    tags: ['math'],\n    policies: ['Unlimited'],\n    securityScheme: ['oauth2'],\n    visibility: 'PUBLIC',\n    gatewayEnvironments: ['Production and Sandbox'],\n    businessInformation: {\n        businessOwner: 'Jane Roe',\n        businessOwnerEmail: 'marketing@math.com',\n        technicalOwner: 'John Doe',\n        technicalOwnerEmail: 'architecture@math.com',\n    },\n    endpointConfig: {\n        endpoint_type: 'http',\n        sandbox_endpoints: {\n            url: 'http://www.mocky.io/v2/5afe55d53200000f00222e02',\n        },\n        production_endpoints: {\n            url: 'http://www.mocky.io/v2/5afe55d53200000f00222e02',\n        },\n    },\n    operations: [\n        {\n            target: '/area',\n            verb: 'GET',\n            throttlingPolicy: 'Unlimited',\n            authType: 'Application & Application User',\n        },\n        {\n            target: '/volume',\n            verb: 'GET',\n            throttlingPolicy: 'Unlimited',\n            authType: 'Application & Application User',\n        },\n        {\n            target: '/multiply',\n            verb: 'POST',\n            throttlingPolicy: 'Unlimited',\n            authType: 'Application & Application User',\n        },\n    ],\n};\n\nexport default mathPayload;\n","const calculatorPayload = {\n    name: 'CalculatorAPI',\n    description: 'This is a simple API for Pizza Shack online pizza delivery store.',\n    context: '/calculator',\n    version: '1.0',\n    transport: ['http', 'https'],\n    tags: ['calculator'],\n    policies: ['Unlimited'],\n    securityScheme: ['oauth2'],\n    visibility: 'PUBLIC',\n    gatewayEnvironments: ['Production and Sandbox'],\n    businessInformation: {\n        businessOwner: 'Jane Roe',\n        businessOwnerEmail: 'marketing@calculator.com',\n        technicalOwner: 'John Doe',\n        technicalOwnerEmail: 'architecture@calculator.com',\n    },\n    endpointConfig: {\n        endpoint_type: 'http',\n        sandbox_endpoints: {\n            url: 'http://www.mocky.io/v2/5afe55d53200000f00222e02',\n        },\n        production_endpoints: {\n            url: 'http://www.mocky.io/v2/5afe55d53200000f00222e02',\n        },\n    },\n    operations: [\n        {\n            target: '/add',\n            verb: 'POST',\n            throttlingPolicy: 'Unlimited',\n            authType: 'Application & Application User',\n        },\n        {\n            target: '/divide',\n            verb: 'POST',\n            throttlingPolicy: 'Unlimited',\n            authType: 'Application & Application User',\n        },\n        {\n            target: '/multiply',\n            verb: 'POST',\n            throttlingPolicy: 'Unlimited',\n            authType: 'Application & Application User',\n        },\n    ],\n};\nexport default calculatorPayload;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Avatar from '@material-ui/core/Avatar';\nimport Icon from '@material-ui/core/Icon';\nimport classNames from 'classnames';\nimport Box from '@material-ui/core/Box';\nimport { PropTypes } from 'prop-types';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { FormattedMessage } from 'react-intl';\n\nconst useStyles = makeStyles(theme => ({\n    chipHeadWrapperDefault: {\n        background: theme.palette.grey[100],\n        color: theme.palette.getContrastText(theme.palette.grey[100]),\n    },\n    chipHeadWrapperDone: {\n        background: theme.custom.productSampleProgess.backgroundMain,\n        color: theme.palette.getContrastText(theme.custom.productSampleProgess.backgroundMain),\n    },\n    chipHeadWrapper: {\n        padding: 5,\n        borderRadius: 10,\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n        marginTop: 10,\n    },\n    chipAvatarDone: {\n        background: theme.custom.productSampleProgess.backgroundChip,\n        color: theme.palette.getContrastText(theme.custom.productSampleProgess.backgroundChip),\n        marginRight: 10,\n    },\n    chipAvatarDefault: {\n        background: theme.palette.grey[50],\n        color: theme.palette.getContrastText(theme.palette.grey[50]),\n        marginRight: 10,\n    },\n    post: {\n        background: theme.custom.resourceChipColors.post,\n        color: theme.palette.getContrastText(theme.custom.resourceChipColors.post),\n        display: 'inline-block',\n        marginLeft: 5,\n        marginRight: 15,\n        borderRadius: 5,\n        padding: 5,\n        textTransform: 'lowercase',\n    },\n    get: {\n        background: theme.custom.resourceChipColors.get,\n        color: theme.palette.getContrastText(theme.custom.resourceChipColors.get),\n        display: 'inline-block',\n        marginLeft: 10,\n        borderRadius: 5,\n        padding: 5,\n        textTransform: 'lowercase',\n    },\n    actions: {\n        justifyContent: 'flex-start',\n        paddingLeft: 20,\n        paddingTop: 20,\n    },\n    progress: {\n        width: '100%',\n        marginLeft: 20,\n    },\n    chipHeadTitle: {\n        whiteSpace: 'nowrap',\n    },\n}));\n\nfunction SampleAPIProductWizard(props) {\n    const classes = useStyles();\n    const {\n        step, setStep, productPath, history,\n    } = props;\n\n    function handleClose() {\n        if (step === 4) {\n            setStep(0);\n            history.push(productPath);\n        }\n        setStep(0);\n    }\n\n    return (\n        <React.Fragment>\n            <Dialog\n                fullWidth\n                maxWidth='md'\n                open={step !== 0}\n                onClose={handleClose}\n                aria-labelledby='max-width-dialog-title'\n            >\n                <DialogTitle id='max-width-dialog-title'>\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPIProductWizard.title'\n                        defaultMessage='Auto Generating API Product Progress..'\n                    />\n                </DialogTitle>\n                <DialogContent>\n                    {/* Calculator api creation */}\n                    <div\n                        className={classNames(classes.chipHeadWrapper, {\n                            [classes.chipHeadWrapperDefault]: step < 2,\n                            [classes.chipHeadWrapperDone]: step >= 2,\n                        })}\n                    >\n                        <Avatar\n                            className={classNames({\n                                [classes.chipAvatarDefault]: step < 2,\n                                [classes.chipAvatarDone]: step >= 2,\n                            })}\n                        >\n                            {step < 2 ? <Icon>border_inner</Icon> : <Icon>done</Icon>}\n                        </Avatar>\n                        <div className={classes.chipHeadTitle}>\n                            <FormattedMessage\n                                id='Apis.Listing.SampleAPI.SampleAPIProductWizard.calculator.text'\n                                defaultMessage='Creating API Calculator'\n                            />\n                        </div>\n                        {step < 2 && <LinearProgress variant='query' className={classes.progress} />}\n                    </div>\n                    <Box fontWeight='fontWeightBold' m={1} component='span'>\n                        <FormattedMessage\n                            id='Apis.Listing.SampleAPI.SampleAPIProductWizard.resource'\n                            defaultMessage='Resources'\n                        />\n                    </Box>\n                    <Box m={1} component='span'>\n                        <span>/add</span> <span className={classes.post}>post</span>\n                    </Box>\n                    <Box m={1} component='span'>\n                        <span>/divide</span> <span className={classes.post}>post</span>\n                    </Box>\n                    <Box m={1} component='span'>\n                        <span>/multiply</span> <span className={classes.post}>post</span>\n                    </Box>\n\n                    {/* Math Api creation */}\n                    <div\n                        className={classNames(classes.chipHeadWrapper, {\n                            [classes.chipHeadWrapperDefault]: step < 3,\n                            [classes.chipHeadWrapperDone]: step >= 3,\n                        })}\n                    >\n                        <Avatar\n                            className={classNames({\n                                [classes.chipAvatarDefault]: step < 3,\n                                [classes.chipAvatarDone]: step >= 3,\n                            })}\n                        >\n                            {step < 3 ? <Icon>border_inner</Icon> : <Icon>done</Icon>}\n                        </Avatar>\n                        <div className={classes.chipHeadTitle}>\n                            <FormattedMessage\n                                id='Apis.Listing.SampleAPI.SampleAPIProductWizard.mathapi'\n                                defaultMessage='Creating Math API'\n                            />\n                        </div>\n                        {step < 3 && <LinearProgress variant='query' className={classes.progress} />}\n                    </div>\n                    <Box fontWeight='fontWeightBold' m={1} component='span'>\n                        <FormattedMessage\n                            id='Apis.Listing.SampleAPI.SampleAPIProductWizard.resource'\n                            defaultMessage='Resources'\n                        />\n                    </Box>\n                    <Box m={1} component='span'>\n                        <span>/area</span> <span className={classes.get}>get</span>\n                    </Box>\n                    <Box m={1} component='span'>\n                        <span>/volume</span> <span className={classes.get}>get</span>\n                    </Box>\n                    <Box m={1} component='span'>\n                        <span>/multiply</span> <span className={classes.get}>get</span>\n                    </Box>\n                    {/* API Product creation */}\n                    <div\n                        className={classNames(classes.chipHeadWrapper, {\n                            [classes.chipHeadWrapperDefault]: step < 4,\n                            [classes.chipHeadWrapperDone]: step >= 4,\n                        })}\n                    >\n                        <Avatar\n                            className={classNames({\n                                [classes.chipAvatarDefault]: step < 4,\n                                [classes.chipAvatarDone]: step >= 4,\n                            })}\n                        >\n                            {step < 4 ? <Icon>border_inner</Icon> : <Icon>done</Icon>}\n                        </Avatar>\n                        <div className={classes.chipHeadTitle}>\n                            <FormattedMessage\n                                id='Apis.Listing.SampleAPI.SampleAPIProductWizard.product.title'\n                                defaultMessage={\n                                    'Creating CalculatorAPIProduct from the resources' +\n                                    'of Math API and Calculator API'\n                                }\n                            />\n                        </div>\n                        {step < 4 && <LinearProgress variant='query' className={classes.progress} />}\n                    </div>\n                    <Box fontWeight='fontWeightBold' m={1} component='span'>\n                        <FormattedMessage\n                            id='Apis.Listing.SampleAPI.SampleAPIProductWizard.resource'\n                            defaultMessage='Resources'\n                        />\n                    </Box>\n                    <Box m={1} component='span'>\n                        <span>/add</span> <span className={classes.post}>post</span>\n                    </Box>\n                    <Box m={1} component='span'>\n                        <span>/divide</span> <span className={classes.post}>post</span>\n                    </Box>\n                    <Box m={1} component='span'>\n                        <span>/area</span> <span className={classes.get}>get</span>\n                    </Box>\n                    <Box m={1} component='span'>\n                        <span>/volume</span> <span className={classes.get}>get</span>\n                    </Box>\n                </DialogContent>\n                <DialogActions className={classes.actions}>\n                    {step >= 4 && (\n                        <Link to={productPath}>\n                            <Button variant='contained' color='primary'>\n                                <FormattedMessage\n                                    id='Apis.Listing.SampleAPI.SampleAPIProductWizard.product.button'\n                                    defaultMessage='Go to CalculatorAPIProduct'\n                                />\n                            </Button>\n                        </Link>\n                    )}\n                    <Button onClick={handleClose} color='primary'>\n                        <FormattedMessage\n                            id='Apis.Listing.SampleAPI.SampleAPIProductWizard.product.close.button'\n                            defaultMessage='Close'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </React.Fragment>\n    );\n}\nSampleAPIProductWizard.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    step: PropTypes.number.isRequired,\n    setStep: PropTypes.func.isRequired,\n    productPath: PropTypes.string.isRequired,\n    history: PropTypes.shape({}).isRequired,\n};\nexport default withRouter(SampleAPIProductWizard);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport { withRouter } from 'react-router';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport Icon from '@material-ui/core/Icon';\nimport { PropTypes } from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport API from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport Alert from 'AppComponents/Shared/Alert';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport apiProduct from './apiProduct';\nimport mathPayload from './math';\nimport calculatorPayload from './calculator';\nimport SampleAPIProductWizard from './SampleAPIProductWizard';\n\nconst useStyles = makeStyles(theme => ({\n    buttonProgress: {\n        color: green[500],\n        position: 'relative',\n    },\n    headline: {\n        paddingTop: theme.spacing.unit * 1.25,\n        paddingLeft: theme.spacing.unit * 2.5,\n    },\n    head: {\n        paddingBottom: theme.spacing.unit * 2,\n        fontWeight: 200,\n    },\n    content: {\n        paddingBottom: theme.spacing.unit * 2,\n    },\n    deployButton: {\n        '& span.material-icons': {\n            fontSize: 24,\n            marginRight: theme.spacing.unit,\n        },\n    },\n}));\n\n/**\n * Show Initial Welcome card if no APIs are available to list\n * Handle deploying a sample API (Create and Publish)\n *\n * @class SampleAPI\n * @extends {Component}\n */\nfunction SampleAPI(props) {\n    const classes = useStyles();\n\n    const [step, setStep] = useState(0);\n    const [productPath, setProductPath] = useState(null);\n\n    /**\n     *Handle onClick event for `Deploy Sample API` Button\n     * @memberof SampleAPI\n     */\n    const handleDeploySample = () => {\n        const { intl } = props;\n        setStep(1);\n        const restApi = new API();\n        const calculatorPromise = restApi.create(calculatorPayload);\n        const mathPromise = restApi.create(mathPayload);\n\n        Promise.all([calculatorPromise, mathPromise]).then((data) => {\n            setStep(3);\n            const calculatorApiId = data[0].body.id;\n            const mathApiId = data[1].body.id;\n            const sampleProductPayload = apiProduct(calculatorApiId, mathApiId);\n            const productRestApi = new APIProduct();\n\n            const productPromise = productRestApi.create(sampleProductPayload);\n            productPromise\n                .then((prod) => {\n                    setStep(4);\n                    setProductPath(`/api-products/${prod.body.id}/overview`);\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Listing.SampleAPI.SampleAPIProduct.successful',\n                        defaultMessage: 'CalculatorAPIProduct published successfully',\n                    }));\n                })\n                .catch((error) => {\n                    setStep(0);\n                    this.setState({ deploying: false });\n                    Alert.error(error);\n                });\n        });\n    };\n\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof SampleAPI\n     */\n\n    return (\n        <InlineMessage type='info' height={140}>\n            <div className={classes.contentWrapper}>\n                <Typography variant='h5' component='h3' className={classes.head}>\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPIProduct.manager'\n                        defaultMessage='Welcome to WSO2 API Manager'\n                    />\n                </Typography>\n                <Typography component='p' className={classes.content}>\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPIProduct.description'\n                        defaultMessage={\n                            'The API resources in an API product can come from' +\n                            ' one or more APIs, so you can mix and match resources from multiple ' +\n                            ' API resources to create specialized feature sets.'\n                        }\n                    />\n                </Typography>\n                <div className={classes.actions}>\n                    <SampleAPIProductWizard step={step} setStep={setStep} productPath={productPath} />\n                    <Button\n                        size='small'\n                        color='primary'\n                        disabled={step !== 0}\n                        variant='outlined'\n                        onClick={handleDeploySample}\n                        className={classes.deployButton}\n                    >\n                        <Icon>play_circle_outline</Icon>\n                        <FormattedMessage\n                            id='Apis.Listing.SampleAPIProduct.deploy.button'\n                            defaultMessage='Deploy Sample API Product'\n                        />\n                        {step !== 0 && <CircularProgress size={24} className={classes.buttonProgress} />}\n                    </Button>\n                </div>\n            </div>\n        </InlineMessage>\n    );\n}\n\nSampleAPI.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nexport default withRouter(injectIntl(SampleAPI));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/icons/List';\nimport GridOn from '@material-ui/icons/GridOn';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport APICreateMenu from '../components/APICreateMenu';\n\nconst styles = theme => ({\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    button: {\n        margin: theme.spacing.unit,\n        marginBottom: 0,\n    },\n    buttonRight: {\n        display: 'flex',\n    },\n    ListingWrapper: {\n        paddingTop: 10,\n        paddingLeft: 35,\n    },\n    root: {\n        height: 70,\n        background: theme.palette.background.paper,\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n    },\n    mainIconWrapper: {\n        paddingTop: 13,\n        paddingLeft: 35,\n        paddingRight: 20,\n    },\n    mainTitleWrapper: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n    },\n    APICreateMenu: {\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    content: {\n        flexGrow: 1,\n    },\n    createButton: {\n        color: '#000000',\n        background: '#15b8cf',\n    },\n});\n\n/**\n *\n * @param props\n * @returns {*}\n */\nfunction getTitleForArtifactType(props) {\n    const {\n        isAPIProduct, query,\n    } = props;\n    if (query) {\n        return (\n            <FormattedMessage id='Apis.Listing.components.TopMenu.search.results' defaultMessage='Search Result(s)' />\n        );\n    } else if (isAPIProduct) {\n        return (\n            <FormattedMessage\n                id='Apis.Listing.components.TopMenu.apiproduct(s)'\n                defaultMessage='API Product(s)'\n            />\n        );\n    } else {\n        return (\n            <FormattedMessage id='Apis.Listing.components.TopMenu.api(s)' defaultMessage='API(s)' />\n        );\n    }\n}\n\n/**\n *\n * Renders the top menu\n * @param {*} props\n * @returns JSX\n */\nfunction TopMenu(props) {\n    const {\n        classes, data, setListType, theme, count, isAPIProduct, listType,\n    } = props;\n    const strokeColorMain = theme.palette.getContrastText(theme.palette.background.paper);\n    return (\n        <div className={classes.root}>\n            <div className={classes.mainIconWrapper}>\n                <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n            </div>\n            <div className={classes.mainTitleWrapper}>\n                {data && (\n                    <React.Fragment>\n                        <Typography variant='display1' className={classes.mainTitle} component='div'>\n                            {isAPIProduct ? (\n                                <FormattedMessage\n                                    id='Apis.Listing.components.TopMenu.apiproducts'\n                                    defaultMessage='API Products'\n                                />\n                            ) : (\n                                <FormattedMessage id='Apis.Listing.components.TopMenu.apis' defaultMessage='APIs' />\n                            )}\n                        </Typography>\n                        <Typography variant='caption' gutterBottom align='left' component='div'>\n                            <FormattedMessage\n                                id='Apis.Listing.components.TopMenu.displaying'\n                                defaultMessage='Displaying'\n                            />\n                            {' '} {count} {' '}\n                            {getTitleForArtifactType(props)}\n                        </Typography>\n                    </React.Fragment>\n                )}\n            </div>\n            <VerticalDivider height={70} />\n            <div className={classes.APICreateMenu}>\n                {isAPIProduct ? (\n                    <Link to='/api-products/create'>\n                        <Button variant='contained' className={classes.createButton}>\n                            <FormattedMessage\n                                id='Apis.Listing.components.TopMenu.create.an.api.product'\n                                defaultMessage='Create an API Product'\n                            />\n                        </Button>\n                    </Link>\n                ) : (\n                    <APICreateMenu buttonProps={{ variant: 'contained', color: 'primary', className: classes.button }}>\n                        <FormattedMessage id='Apis.Listing.components.TopMenu.create.api' defaultMessage='Create API' />\n                    </APICreateMenu>\n                )}\n            </div>\n            <div className={classes.buttonRight}>\n                <IconButton\n                    className={classes.button}\n                    disabled={data.length === 0}\n                    onClick={() => setListType('list')}\n                >\n                    <List color={listType === 'list' ? 'primary' : 'default'} />\n                </IconButton>\n                <IconButton\n                    className={classes.button}\n                    disabled={data.length === 0}\n                    onClick={() => setListType('grid')}\n                >\n                    <GridOn color={listType === 'grid' ? 'primary' : 'default'} />\n                </IconButton>\n            </div>\n        </div>\n    );\n}\n\nTopMenu.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    setListType: PropTypes.func.isRequired,\n    listType: PropTypes.string.isRequired,\n    data: PropTypes.shape({}).isRequired,\n    count: PropTypes.number.isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.string,\n    }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(TopMenu);\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { createMuiTheme, MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport queryString from 'query-string';\nimport API from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport ImageGenerator from 'AppComponents/Apis/Listing/components/ImageGenerator/ImageGenerator';\nimport ApiThumb from 'AppComponents/Apis/Listing/components/ImageGenerator/ApiThumb';\nimport DocThumb from 'AppComponents/Apis/Listing/components/ImageGenerator/DocThumb';\nimport { Progress } from 'AppComponents/Shared';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport SampleAPI from 'AppComponents/Apis/Listing/SampleAPI/SampleAPI';\nimport SampleAPIProduct from 'AppComponents/Apis/Listing/SampleAPI/SampleAPIProduct';\nimport TopMenu from 'AppComponents/Apis/Listing/components/TopMenu';\n\nconst styles = theme => ({\n    contentInside: {\n        padding: theme.spacing.unit * 3,\n        paddingTop: theme.spacing.unit * 2,\n        '& > div[class^=\"MuiPaper-root-\"]': {\n            boxShadow: 'none',\n            backgroundColor: 'transparent',\n        },\n    },\n});\n\n/**\n *\n *\n * @class TableView\n * @extends {React.Component}\n */\nclass TableView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apisAndApiProducts: null,\n            notFound: true,\n            listType: props.theme.custom.defaultApiView,\n        };\n        this.page = 0;\n        this.count = 100;\n        this.rowsPerPage = 10;\n        this.getLocalStorage();\n        this.setListType = this.setListType.bind(this);\n        this.updateData = this.updateData.bind(this);\n    }\n\n    componentDidMount() {\n        this.getLocalStorage();\n        this.getData();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { isAPIProduct, query } = this.props;\n        if (isAPIProduct !== prevProps.isAPIProduct || query !== prevProps.query) {\n            this.getLocalStorage();\n            this.getData();\n        }\n    }\n    componentWillUnmount() {\n        // The foollowing is resetting the styles for the mui-datatables\n        const { theme } = this.props;\n        const themeAdditions = {\n            overrides: {\n                MUIDataTable: {\n                    tableRoot: {\n                        display: 'table',\n                        '& tbody': {\n                            display: 'table-row-group',\n                        },\n                        '& thead': {\n                            display: 'table-header-group',\n                        },\n                    },\n                },\n            },\n        };\n        Object.assign(theme, themeAdditions);\n    }\n    getMuiTheme = () => {\n        const { listType } = this.state;\n        const { theme } = this.props;\n        let themeAdditions = {};\n        let muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        marginLeft: 40,\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                    },\n                    tableRoot: {\n                        '& tbody': {\n                            backgroundColor: '#fff',\n                        },\n                    },\n                },\n                MUIDataTableBodyCell: {\n                    root: {\n                        backgroundColor: 'transparent',\n                    },\n                },\n            },\n        };\n        if (listType === 'grid') {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                backgroundColor: 'transparent',\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                        },\n                    },\n                },\n            };\n        }\n        muiTheme = Object.assign(theme, muiTheme, themeAdditions);\n        return createMuiTheme(muiTheme);\n    };\n\n    // get apisAndApiProducts\n    getData = () => {\n        this.xhrRequest().then((data) => {\n            const { body } = data;\n            const { list, pagination } = body;\n            const { total } = pagination;\n            this.count = total;\n            this.setState({ apisAndApiProducts: list, notFound: false });\n        });\n    };\n\n    getLocalStorage = () => {\n        const { isAPIProduct } = this.props;\n        const paginationSufix = isAPIProduct ? 'products' : 'apis';\n        const storedPagination = window.localStorage.getItem('pagination-' + paginationSufix);\n        if (storedPagination) {\n            const pagination = JSON.parse(storedPagination);\n            if (pagination.page && pagination.count && pagination.rowsPerPage) {\n                this.page = pagination.page;\n                this.count = pagination.count;\n                this.rowsPerPage = pagination.rowsPerPage;\n            }\n        }\n    };\n\n    /**\n     *\n     * Switch the view between grid and list view\n     * @param {String} value UUID(ID) of the deleted API\n     * @memberof Listing\n     */\n    setListType = (value) => {\n        this.setState({ listType: value });\n    };\n    setLocalStorage = () => {\n        // Set the page to the localstorage\n        const { isAPIProduct } = this.props;\n        const paginationSufix = isAPIProduct ? 'products' : 'apis';\n        const pagination = { page: this.page, count: this.count, rowsPerPage: this.rowsPerPage };\n        window.localStorage.setItem('pagination-' + paginationSufix, JSON.stringify(pagination));\n    };\n    changePage = (page) => {\n        this.page = page;\n        this.xhrRequest().then((data) => {\n            const { body } = data;\n            const { list } = body;\n            this.setState({\n                apisAndApiProducts: list,\n                notFound: false,\n            });\n            this.setLocalStorage();\n        });\n    };\n    /**\n     *\n     * Update APIs list if an API get deleted in card or table view\n     * @param {String} apiUUID UUID(ID) of the deleted API\n     * @memberof Listing\n     */\n    updateData() {\n        const { page, rowsPerPage, count } = this;\n        if (count - 1 === rowsPerPage * page && page !== 0) {\n            this.page = page - 1;\n        }\n        this.getData();\n    }\n    xhrRequest = () => {\n        const { page, rowsPerPage } = this;\n        const { isAPIProduct, query } = this.props;\n        if (query) {\n            const composeQuery = queryString.parse(query);\n            composeQuery.limit = this.rowsPerPage;\n            composeQuery.offset = page * rowsPerPage;\n            return API.search(composeQuery);\n        }\n        if (isAPIProduct) {\n            return APIProduct.all({ limit: this.rowsPerPage, offset: page * rowsPerPage });\n        } else {\n            return API.all({ limit: this.rowsPerPage, offset: page * rowsPerPage });\n        }\n    };\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof TableView\n     */\n    render() {\n        const {\n            intl, isAPIProduct, classes, query,\n        } = this.props;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'image',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.image',\n                    defaultMessage: 'image',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.apisAndApiProducts[tableMeta.rowIndex];\n                            return <ImageGenerator api={artifact} width={30} height={30} />;\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.name',\n                    defaultMessage: 'name',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const { isAPIProduct } = tableViewObj.props; // eslint-disable-line no-shadow\n                            const artifact = tableViewObj.state.apisAndApiProducts[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[2];\n                            const apiId = tableMeta.rowData[0];\n                            if (isAPIProduct) {\n                                return <Link to={'/api-products/' + apiId + '/overview'}>{apiName}</Link>;\n                            }\n                            if (artifact) {\n                                if (artifact.type === 'DOC') {\n                                    return (\n                                        <Link to={'/apis/' + artifact.apiUUID + '/documents/' + apiId + '/details'}>\n                                            <FormattedMessage\n                                                id='Apis.Listing.TableView.TableView.doc.flag'\n                                                defaultMessage=' [Doc]'\n                                            />\n                                            {apiName}\n                                        </Link>\n                                    );\n                                }\n                                return <Link to={'/apis/' + apiId + '/overview'}>{apiName}</Link>;\n                            }\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'version',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.version',\n                    defaultMessage: 'version',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'context',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.context',\n                    defaultMessage: 'context',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'provider',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.provider',\n                    defaultMessage: 'provider',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n        ];\n        const { page, count, rowsPerPage } = this;\n        const { apisAndApiProducts, notFound, listType } = this.state;\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            serverSide: true,\n            search: false,\n            count,\n            page,\n            onTableChange: (action, tableState) => {\n                switch (action) {\n                    case 'changePage':\n                        this.changePage(tableState.page);\n                        break;\n                    default:\n                        break;\n                }\n            },\n            selectableRows: 'none',\n            rowsPerPage,\n            onChangeRowsPerPage: (numberOfRows) => {\n                this.rowsPerPage = numberOfRows;\n                this.getData();\n                this.setLocalStorage();\n            },\n        };\n        if (listType === 'grid') {\n            options.customRowRender = (data, dataIndex, rowIndex, tableViewObj = this) => {\n                const { isAPIProduct } = tableViewObj.props; // eslint-disable-line no-shadow\n                const artifact = tableViewObj.state.apisAndApiProducts[dataIndex];\n                if (artifact) {\n                    if (artifact.type === 'DOC') {\n                        return (<DocThumb doc={artifact} />);\n                    } else if (artifact.type === 'APIPRODUCT') {\n                        artifact.state = 'PUBLISHED';\n                        return (<ApiThumb\n                            api={artifact}\n                            isAPIProduct\n                            updateData={tableViewObj.updateData}\n                        />);\n                    } else {\n                        return (<ApiThumb\n                            api={artifact}\n                            isAPIProduct={isAPIProduct}\n                            updateData={tableViewObj.updateData}\n                        />);\n                    }\n                }\n                return <span />;\n            };\n            options.title = false;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n        } else {\n            options.customRowRender = null;\n            options.title = true;\n            options.filter = true;\n            options.print = true;\n            options.download = true;\n            options.viewColumns = true;\n        }\n\n        if (!apisAndApiProducts) {\n            return <Progress />;\n        }\n        if (notFound) {\n            return <ResourceNotFound />;\n        }\n        if (apisAndApiProducts.length === 0 && !query) {\n            return (\n                <React.Fragment>\n                    <TopMenu\n                        data={apisAndApiProducts}\n                        count={count}\n                        setListType={this.setListType}\n                        isAPIProduct={isAPIProduct}\n                        listType={listType}\n                    />\n                    <div className={classes.contentInside}>{isAPIProduct ? <SampleAPIProduct /> : <SampleAPI />}</div>\n                </React.Fragment>\n            );\n        }\n\n        return (\n            <React.Fragment>\n                <TopMenu\n                    data={apisAndApiProducts}\n                    count={count}\n                    setListType={this.setListType}\n                    isAPIProduct={isAPIProduct}\n                    listType={listType}\n                    query={query}\n                />\n                <div className={classes.contentInside}>\n                    <MuiThemeProvider theme={this.getMuiTheme()}>\n                        <MUIDataTable title='' data={apisAndApiProducts} columns={columns} options={options} />\n                    </MuiThemeProvider>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(TableView));\n\nTableView.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.string,\n    }).isRequired,\n    query: PropTypes.string,\n};\n\nTableView.defaultProps = {\n    query: '',\n};\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// TODO: DO we need this component ? this is a pure proxy just passing the props through this to children ? ~tmkb\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableView from './TableView/TableView';\n\nconst styles = {\n    content: {\n        flexGrow: 1,\n    },\n};\n/**\n * Render the APIs Listing page, This is the Default Publisher Landing page as well\n *\n * @function Listing\n * @returns {React.Component} @inheritdoc\n */\nfunction Listing(props) {\n    const {\n        classes, isAPIProduct, theme, location: { search },\n    } = props;\n    return (\n        <main className={classes.content}>\n            <TableView isAPIProduct={isAPIProduct} theme={theme} query={search} />\n        </main>\n    );\n}\n\nListing.propTypes = {\n    classes: PropTypes.shape({\n        content: PropTypes.string,\n        contentInside: PropTypes.string,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.string,\n    }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    location: PropTypes.shape({\n        search: PropTypes.string,\n    }),\n};\n\nListing.defaultProps = {\n    location: PropTypes.shape({\n        search: '',\n    }),\n};\n\nexport default withStyles(styles, { withTheme: true })(Listing);\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\n\nconst styles = theme => ({\n    leftLInkText: {\n        color: theme.palette.getContrastText(theme.palette.background.leftMenu),\n    },\n    leftLInkText_IconLeft: {\n        paddingLeft: 10,\n    },\n    LeftMenu: {\n        backgroundColor: theme.palette.background.leftMenu,\n        width: theme.custom.leftMenuWidth,\n        textAlign: 'center',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        top: 0,\n    },\n    leftLInk: {\n        paddingTop: theme.spacing.unit,\n        paddingBottom: theme.spacing.unit,\n        paddingLeft: theme.spacing.unit,\n        paddingRight: theme.spacing.unit,\n        fontSize: theme.typography.caption.fontSize,\n        cursor: 'pointer',\n        textDecoration: 'none',\n    },\n    leftLink_Icon: {\n        color: theme.palette.getContrastText(theme.palette.background.leftMenu),\n        fontSize: theme.custom.leftMenuIconSize + 'px',\n    },\n    leftLink_IconLeft: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    noIcon: {\n        display: 'none',\n    },\n    leftLInkText_NoText: {\n        diplay: 'none',\n    },\n});\nfunction LeftMenuItem(props) {\n    const [selected, setSelected] = useState(false);\n\n    const {\n        classes, theme, Icon, to, history, text,\n    } = props;\n    const { leftMenu } = theme.custom;\n    const strokeColor = theme.palette.getContrastText(theme.palette.background.leftMenu);\n    const iconSize = theme.custom.leftMenuIconSize;\n    const ditectCurrentMenu = (location) => {\n        const { pathname } = location;\n        const test1 = new RegExp('/' + text + '$', 'g');\n        const test2 = new RegExp('/' + text + '/', 'g');\n        if (pathname.match(test1) || pathname.match(test2)) {\n            setSelected(true);\n        } else {\n            setSelected(false);\n        }\n    };\n    useEffect(() => {\n        const { location } = history;\n        ditectCurrentMenu(location);\n    }, []);\n    history.listen((location) => {\n        ditectCurrentMenu(location);\n    });\n\n    return (\n        <Link\n            className={classNames(\n                classes.leftLInk,\n                {\n                    [classes.leftLink_IconLeft]: leftMenu === 'icon left',\n                },\n                'leftLInk',\n            )}\n            to={to}\n            style={{ backgroundColor: selected ? theme.palette.background.appBarSelected : '' }}\n        >\n            {// If the icon pro ( which is comming from the React Material library )\n            // is coming we add css class and render.\n            // If leftMenu='no icon' at the theme object we hide the icon. Also we add static classes to\n            // allow customers theme\n            // the product without compiling.\n                Icon ? (\n                    React.cloneElement(Icon, {\n                        className: classNames(\n                            classes.leftLink_Icon,\n                            {\n                                [classes.noIcon]: leftMenu === 'no icon',\n                            },\n                            'leftLink_Icon',\n                        ),\n                    })\n                ) : (\n                // We can also add custom icons\n                    <CustomIcon\n                        strokeColor={strokeColor}\n                        width={iconSize}\n                        height={iconSize}\n                        icon={props.text}\n                        className={classNames(\n                            classes.leftLInk,\n                            {\n                                [classes.noIcon]: leftMenu === 'no icon',\n                            },\n                            'leftLink_Icon',\n                        )}\n                    />\n                )}\n            <Typography\n                className={classNames(\n                    classes.leftLInkText,\n                    {\n                        [classes.leftLInkText_IconLeft]: leftMenu === 'icon left',\n                        [classes.leftLInkText_NoText]: leftMenu === 'no text',\n                    },\n                    'leftLInkText',\n                )}\n                style={{ textTransform: 'uppercase' }}\n            >\n                {props.text}\n            </Typography>\n        </Link>\n    );\n}\nLeftMenuItem.propTypes = {\n    classes: PropTypes.shape({\n        divider: PropTypes.string,\n        leftLInk: PropTypes.string,\n        leftLink_IconLeft: PropTypes.string,\n        noIcon: PropTypes.string,\n        leftLink_Icon: PropTypes.string,\n        leftLInkText: PropTypes.string,\n        leftLInkText_IconLeft: PropTypes.string,\n        leftLInkText_NoText: PropTypes.string,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            leftMenu: PropTypes.string,\n            leftMenuIconSize: PropTypes.number,\n        }),\n        palette: PropTypes.shape({\n            getContrastText: PropTypes.func,\n            background: PropTypes.shape({\n                leftMenu: PropTypes.string,\n                appBar: PropTypes.string,\n            }),\n            leftMenu: PropTypes.string,\n        }),\n    }).isRequired,\n    Icon: PropTypes.element.isRequired,\n    text: PropTypes.string.isRequired,\n    to: PropTypes.string.isRequired,\n    history: PropTypes.shape({\n        location: PropTypes.string.isRequired,\n    }).isRequired,\n};\nexport default withRouter(withStyles(styles, { withTheme: true })(LeftMenuItem));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Configurations from 'Config';\nimport { FormattedMessage } from 'react-intl';\n\nconst page = Configurations.app.context + '/services/auth/login';\n\n/**\n *\n * Just doing the redirection, If you want to trigger redirection to login page , Import this util method and use.\n * Note: Don't use this method inside a render method. It will cause to cancel the initial request in Chrome\n * and re-trigger same request\n * Sample usage:\n * import { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin'\n *\n * componentDidMount() {\n *      doRedirectToLogin();\n * }\n * @export\n */\nexport function doRedirectToLogin() {\n    window.location = page;\n}\n\n/**\n * This component is created to unify the login process from react UI.\n * If we need to change the login process in the future, Changing here will reflect\n * all the login redirection done in other places of the code\n * @class RedirectToLogin\n */\nclass RedirectToLogin extends React.Component {\n    /**\n     *\n     * @inheritdoc\n     * @memberof RedirectToLogin\n     */\n    componentDidMount() {\n        doRedirectToLogin();\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.Component}\n     * @memberof RedirectToLogin\n     */\n    render() {\n        return (\n            <FormattedMessage\n                id='Apis.Shared.RedirectToLogin.you.will.be.redirected.to'\n                defaultMessage='You will be redirected to {page}'\n                values={{ page }}\n            />\n        );\n    }\n}\n\nexport default RedirectToLogin;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useContext } from 'react';\n\nconst AppContext = React.createContext({ });\nexport const useAppContext = () => useContext(AppContext);\nexport const AppContextProvider = AppContext.Provider;\nexport default AppContext;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\n\nconst APIContext = React.createContext({\n    api: null,\n});\n\nconst { Provider: APIProvider } = APIContext;\n\n\n/**\n * withAPI HOC can be used with class style components, To get the context with hooks useContext,\n * use the default export. Using hooks is preferred over class components due to its contribution to wrapper hell\n *\n * @param {*} WrappedComponent\n * @returns {React.Component} withAPI HOC\n */\nfunction withAPI(WrappedComponent) {\n    /**\n     *\n     * Higher order component which passes the API context to its child component\n     * @param {*} props\n     * @returns\n     */\n    function HOCWithAPI(props) {\n        return (\n            <APIContext.Consumer>\n                {\n                    context => <WrappedComponent {...context} {...props} />\n                }\n            </APIContext.Consumer>\n        );\n    }\n    HOCWithAPI.displayName = `withAPI(${WrappedComponent.displayName})`;\n    return HOCWithAPI;\n}\n\nexport default APIContext;\n\nexport {\n    withAPI,\n    APIProvider,\n    APIContext,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Chip from '@material-ui/core/Chip';\nimport { FormattedMessage } from 'react-intl';\n\nimport Typography from '@material-ui/core/Typography';\nimport Api from 'AppData/api';\nimport CONSTS from 'AppData/Constants';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\n\nfunction RenderMethodBase(props) {\n    const { theme, method } = props;\n    let chipColor = theme.custom.resourceChipColors ? theme.custom.resourceChipColors[method] : null;\n    let chipTextColor = '#000000';\n    if (!chipColor) {\n        console.log('Check the theme settings. The resourceChipColors is not populated properly');\n        chipColor = '#cccccc';\n    } else {\n        chipTextColor = theme.palette.getContrastText(theme.custom.resourceChipColors[method]);\n    }\n    return (\n        <Chip\n            label={method}\n            style={{\n                backgroundColor: chipColor, color: chipTextColor, height: 20, marginRight: 5,\n            }}\n        />\n    );\n}\n\nRenderMethodBase.propTypes = {\n    method: PropTypes.string.isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nconst RenderMethod = withTheme(RenderMethodBase);\n\nconst styles = {\n    root: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n    },\n    heading: {\n        marginRight: 20,\n    },\n};\n\nclass Resources extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            paths: null,\n        };\n        this.restApi = new Api();\n    }\n\n    componentDidMount() {\n        const { id } = this.props.api;\n        const promisedAPI = this.restApi.getSwagger(id);\n        promisedAPI\n            .then((response) => {\n                if (response.obj.paths !== undefined) {\n                    this.setState({ paths: response.obj.paths });\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    }\n\n    render() {\n        const { paths } = this.state;\n        if (this.state.notFound) {\n            return (\n                <div>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.Resources.resource.not.found'\n                        defaultMessage='resource not found...'\n                    />\n                </div>);\n        }\n        if (!paths) {\n            return (\n                <div>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.Resources.loading'\n                        defaultMessage='loading...'\n                    />\n                </div>);\n        }\n        const { classes, parentClasses, api } = this.props;\n        return (\n            <React.Fragment>\n                <div className={parentClasses.titleWrapper} style={{ margin: '20px 0 10px' }}>\n                    { api.type === 'GraphQL' ? (\n                        <Typography variant='h5' component='h3' className={parentClasses.title}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.Operations.operations'\n                                defaultMessage='Operation'\n                            />\n                        </Typography>) :\n                        (\n                            <Typography variant='h5' component='h3' className={parentClasses.title}>\n                                <FormattedMessage\n                                    id='Apis.Details.NewOverview.Resources.resources'\n                                    defaultMessage='Resources'\n                                />\n                            </Typography>\n                        )}\n                </div>\n                <div className={classes.root}>\n                    <div className={classes.contentWrapper}>\n                        {Object.keys(paths).map((key) => {\n                            const path = paths[key];\n                            return (\n                                <div className={classes.root}>\n                                    <Typography className={classes.heading} variant='body1'>\n                                        {key}\n                                    </Typography>\n                                    {Object.keys(path).map((innerKey) => {\n                                        return CONSTS.HTTP_METHODS.includes(innerKey) ?\n                                            <RenderMethod method={innerKey} /> : null;\n                                    })}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\nResources.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.shape({}),\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.shape({}),\n    }).isRequired,\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({ id: PropTypes.string }).isRequired,\n};\n\nexport default withStyles(styles)(Resources);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport classNames from 'classnames';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ApiContext from '../components/ApiContext';\n\n/**\n *\n * @param {*} props\n */\nfunction RenderMethodBase(props) {\n    const { theme, method } = props;\n    let chipColor = theme.custom.operationChipColor ?\n        theme.custom.operationChipColor[method]\n        : null;\n    let chipTextColor = '#000000';\n    if (!chipColor) {\n        console.log('Check the theme settings. The resourceChipColors is not populated properlly');\n        chipColor = '#cccccc';\n    } else {\n        chipTextColor = theme.palette.getContrastText(theme.custom.operationChipColor[method]);\n    }\n    return <Chip label={method} style={{ backgroundColor: chipColor, color: chipTextColor, height: 20 }} />;\n}\n\nRenderMethodBase.propTypes = {\n    method: PropTypes.string.isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nconst RenderMethod = withTheme(RenderMethodBase);\n\nconst styles = {\n    root: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n    },\n    heading: {\n        marginRight: 20,\n    },\n};\n\n/**\n *\n * @param {*} props\n */\nfunction Operations(props) {\n    const { parentClasses } = props;\n    return (\n        <ApiContext.Consumer>\n            {({ api }) => (\n                <Paper className={classNames({ [parentClasses.root]: true, [parentClasses.specialGap]: true })}>\n                    <div className={parentClasses.titleWrapper}>\n                        <Typography variant='h5' component='h3' className={parentClasses.title}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.Operations.operation'\n                                defaultMessage='Operations'\n                            />\n                        </Typography>\n                        <Link to={'/apis/' + api.id + '/operations'}>\n                            <Button variant='contained' color='default'>\n                                <FormattedMessage\n                                    id='Apis.Details.NewOverview.Operations.edit'\n                                    defaultMessage='Edit'\n                                />\n                            </Button>\n                        </Link>\n                    </div>\n                    <div className={parentClasses.contentWrapper}>\n                        <Table>\n                            {api.operations\n                            && api.operations.length !== 0\n                            && api.operations.map(item => (\n                                <TableRow style={{ borderStyle: 'hidden' }}>\n                                    <TableCell>\n                                        <Typography className={parentClasses.heading} component='p' variant='body1'>\n                                            {item.target}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <RenderMethod method={item.verb.toLowerCase()} />\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </Table>\n                    </div>\n                </Paper>\n            )}\n        </ApiContext.Consumer>\n    );\n}\n\nOperations.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(Operations);\n\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * Render method base.\n * @param {*} props\n */\nfunction RenderMethodBase(props) {\n    const { theme, method } = props;\n    const methodLower = method.toLowerCase();\n    let chipColor = theme.custom.resourceChipColors ? theme.custom.resourceChipColors[methodLower] : null;\n    let chipTextColor = '#000000';\n    if (!chipColor) {\n        console.log('Check the theme settings. The resourceChipColors is not populated properly');\n        chipColor = '#cccccc';\n    } else {\n        chipTextColor = theme.palette.getContrastText(theme.custom.resourceChipColors[methodLower]);\n    }\n    return <Chip label={methodLower} style={{ backgroundColor: chipColor, color: chipTextColor, height: 20 }} />;\n}\n\nRenderMethodBase.propTypes = {\n    method: PropTypes.string.isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nconst RenderMethod = withTheme(RenderMethodBase);\n\nconst styles = {\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'left',\n        marginBottom: 10,\n        padding: 5,\n    },\n    heading: {\n        marginRight: 20,\n        paddingBottom: 10,\n    },\n    resourceRow: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginLeft: 10,\n    },\n};\n\n/**\n * Component to show api product resources in overview tab\n */\nclass ProductResources extends React.PureComponent {\n    /**\n     * @inheritDoc\n     */\n    render() {\n        const { classes, parentClasses, api } = this.props;\n        const apiResources = api.apis;\n        return (\n            <React.Fragment>\n                <div className={parentClasses.titleWrapper} style={{ margin: '20px 0 0' }}>\n                    <Typography variant='h5' component='h3' className={parentClasses.title}>\n                        <FormattedMessage\n                            id='Apis.Details.Overview.ProductResources.resources'\n                            defaultMessage='Resources'\n                        />\n                    </Typography>\n                </div>\n                <div className={classes.root}>\n                    <div className={classes.contentWrapper}>\n                        {Object.keys(apiResources).map((key) => {\n                            const resource = apiResources[key];\n                            return (\n                                <div className={classes.root}>\n                                    <Typography className={classes.heading} variant='body1'>\n                                        {resource.name}\n                                    </Typography>\n                                    {Object.keys(resource.operations).map((innerKey) => {\n                                        const operation = (resource.operations)[innerKey];\n                                        return (\n                                            <div className={classes.resourceRow}>\n                                                <Typography className={classes.heading} variant='body1'>\n                                                    {operation.target}\n                                                </Typography>\n                                                <RenderMethod method={operation.verb} />\n\n                                            </div>\n                                        );\n                                    })}\n\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\nProductResources.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.shape({}),\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.shape({}),\n    }).isRequired,\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({ id: PropTypes.string }).isRequired,\n};\n\nexport default withStyles(styles)(ProductResources);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction BusinessInformation(props) {\n    const { parentClasses, api } = props;\n    return (\n        <React.Fragment>\n            <Grid item xs={12} md={6} lg={4}>\n                {/* Business Owner */}\n                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.BusinessInformation.business.owner'\n                        defaultMessage='Business Owner'\n                    />\n                </Typography>\n            </Grid>\n            <Grid item xs={12} md={6} lg={8}>\n                <Typography component='p' variant='body1'>\n                    {api.businessInformation.businessOwner && (\n                        <React.Fragment>{api.businessInformation.businessOwner}</React.Fragment>\n                    )}\n                </Typography>\n                <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                    {!api.businessInformation.businessOwner && (\n                        <React.Fragment>&lt;\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.BusinessInformation.business.owner.not.configured'\n                                defaultMessage='Not Configured'\n                            />&gt;\n                        </React.Fragment>\n                    )}\n                </Typography>\n            </Grid>\n            <Grid item xs={12} md={6} lg={4}>\n                {/* Technical Owner */}\n                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.BusinessInformation.technical.owner'\n                        defaultMessage='Technical Owner'\n                    />\n                </Typography>\n            </Grid>\n            <Grid item xs={12} md={6} lg={8}>\n                <Typography component='p' variant='body1'>\n                    {api.businessInformation.technicalOwner &&\n                        <React.Fragment>{api.businessInformation.technicalOwner}</React.Fragment>}\n                </Typography>\n                <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                    {!api.businessInformation.technicalOwner && (\n                        <React.Fragment>&lt;\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.BusinessInformation.technical.owner.not.configured'\n                                defaultMessage='Not Configured'\n                            />&gt;\n                        </React.Fragment>\n                    )}\n                </Typography>\n            </Grid>\n        </React.Fragment>\n    );\n}\n\nBusinessInformation.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default withAPI(BusinessInformation);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction Policies(props) {\n    const { parentClasses, api } = props;\n    return (\n        <React.Fragment>\n            <Grid item xs={12} md={6} lg={4}>\n                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.Policies.business.plans'\n                        defaultMessage='Business Plans:'\n                    />\n                </Typography>\n            </Grid>\n            <Grid item xs={12} md={6} lg={8}>\n                {/* Throttling Policies */}\n                <Typography component='p' variant='body1'>\n                    {api.policies &&\n                    api.policies.length !== 0 &&\n                    api.policies.map((item, index) => (\n                        <span>\n                            {item}\n                            {api.policies.length !== index + 1 && ', '}{' '}\n                        </span>\n                    ))}\n                </Typography>\n            </Grid>\n        </React.Fragment>\n    );\n}\n\nPolicies.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default withAPI(Policies);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst showEndpoint = function (api, type) {\n    if (api.endpointConfig) {\n        if (type === 'prod') {\n            return api.getProductionEndpoint();\n        }\n        if (type === 'sand') {\n            return api.getSandboxEndpoint();\n        }\n    }\n    return null;\n};\n\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction Endpoints(props) {\n    const { parentClasses, api } = props;\n\n    return (\n        <React.Fragment>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={12} lg={12} style={{ paddingBottom: 0 }}>\n                    <div className={parentClasses.titleWrapper} style={{ marginTop: 20 }}>\n                        <Typography variant='h5' component='h3' className={parentClasses.title}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.Endpoints.endpoints'\n                                defaultMessage='Endpoints'\n                            />\n                        </Typography>\n                    </div>\n                </Grid>\n                <Grid item xs={12} md={6} lg={4}>\n                    {/* Production Endpoint (TODO) fix the endpoint\n                                            info when it's available with the api object */}\n                    <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                        <FormattedMessage\n                            id='Apis.Details.NewOverview.Endpoints.production.endpoint'\n                            defaultMessage='Production Endpoint'\n                        />\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} md={6} lg={8}>\n                    <Typography component='p' variant='body1'>\n                        {showEndpoint(api, 'prod') &&\n                            <React.Fragment>{showEndpoint(api, 'prod')}</React.Fragment>}\n                    </Typography>\n                    <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                        {!showEndpoint(api, 'prod') && (\n                            <React.Fragment>\n                                &lt;\n                                <FormattedMessage\n                                    id='Apis.Details.NewOverview.Endpoints.production.not.configured'\n                                    defaultMessage='Not Configured'\n                                />\n                                &gt;\n                            </React.Fragment>\n                        )}\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} md={6} lg={4}>\n                    {/* Sandbox Endpoint (TODO) fix the endpoint info when\n                                            it's available with the api object */}\n                    <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                        <FormattedMessage\n                            id='Apis.Details.NewOverview.Endpoints.sandbox.endpoint'\n                            defaultMessage='Sandbox Endpoint'\n                        />\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} md={6} lg={8}>\n                    <Typography component='p' variant='body1'>\n                        {showEndpoint(api, 'sand') &&\n                            <React.Fragment>{showEndpoint(api, 'sand')}</React.Fragment>}\n                    </Typography>\n                    <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                        {!showEndpoint(api, 'sand') && (\n                            <React.Fragment>\n                                &lt;\n                                <FormattedMessage\n                                    id='Apis.Details.NewOverview.Endpoints.sandbox.not.configured'\n                                    defaultMessage='Not Configured'\n                                />\n                                &gt;\n                            </React.Fragment>\n                        )}\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} md={6} lg={4}>\n                    {/* Sandbox Endpoint (TODO) fix the endpoint info when\n                                            it's available with the api object */}\n                    <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                        <FormattedMessage\n                            id='Apis.Details.NewOverview.Endpoints.endpoint.security'\n                            defaultMessage='Endpoint Security'\n                        />\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} md={6} lg={8}>\n                    <Typography component='p' variant='body1'>\n                        {api.endpointSecurity && <React.Fragment>{api.endpoint}</React.Fragment>}\n                    </Typography>\n                    <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                        {!api.endpointSecurity && <React.Fragment>&lt;Not configured&gt;</React.Fragment>}\n                    </Typography>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n}\n\nEndpoints.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default withAPI(Endpoints);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useContext } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport ThumbnailView from 'AppComponents/Apis/Listing/components/ImageGenerator/ThumbnailView';\nimport API from 'AppData/api';\nimport APIContext from '../components/ApiContext';\nimport BusinessInformation from './BusinessInformation';\nimport Policies from './Policies';\nimport Endpoints from './Endpoints';\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction Configuration(props) {\n    const { parentClasses } = props;\n    const securitySchemeMap = {\n        oauth2: 'OAuth2',\n        basic_auth: 'Basic Auth',\n        mutualssl: 'Mutual TLS',\n    };\n    const { api } = useContext(APIContext);\n    let loadEndpoints;\n\n    if (api.apiType === API.CONSTS.API) {\n        loadEndpoints = <Endpoints parentClasses={parentClasses} api={api} />;\n    }\n\n    return (\n        <React.Fragment>\n            <Grid container spacing={24}>\n                <Grid item xs={12} md={6} lg={6}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} md={6} lg={4}>\n                            {/* Thumbnail */}\n                            <ThumbnailView api={api} width={150} height={150} isEditable />\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={8}>\n                            <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.NewOverview.Configuration.description:'\n                                    defaultMessage='Description:'\n                                />\n                            </Typography>\n                            <Typography component='p' variant='body1'>\n                                {api.description && <React.Fragment>{api.description}</React.Fragment>}\n                            </Typography>\n                            <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                                {!api.description &&\n                                <React.Fragment>\n                                    &lt;Description Not Configured&gt;\n                                </React.Fragment>\n                                }\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={4}>\n                            {/* Provider */}\n                            <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.NewOverview.Configuration.provider:'\n                                    defaultMessage='Provider:'\n                                />\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={8}>\n                            <Typography component='p' variant='body1'>\n                                {api.provider && <React.Fragment>{api.provider}</React.Fragment>}\n                            </Typography>\n                        </Grid>\n                        {/* Type */}\n                        {api.apiType === API.CONSTS.APIProduct ? null : (\n                            <React.Fragment>\n                                <Grid item xs={12} md={6} lg={4}>\n                                    <React.Fragment>\n                                        <Typography\n                                            component='p'\n                                            variant='subtitle2'\n                                            className={parentClasses.subtitle}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.NewOverview.Configuration.type:'\n                                                defaultMessage='Type:'\n                                            />\n                                        </Typography>\n                                    </React.Fragment>\n                                </Grid>\n                                <Grid item xs={12} md={6} lg={8}>\n                                    <Typography component='p' variant='body1'>\n                                        {api.type && <React.Fragment>{api.type}</React.Fragment>}\n                                        {!api.type && <React.Fragment>?</React.Fragment>}\n                                    </Typography>\n                                </Grid>\n                            </React.Fragment>\n                        )}\n                        <Grid item xs={12} md={6} lg={4}>\n                            {/* workflowStatus */}\n                            <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.NewOverview.Configuration.workflow.status'\n                                    defaultMessage='Workflow Status'\n                                />\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={8}>\n                            <Typography component='p' variant='body1'>\n                                {api.workflowStatus && <React.Fragment>{api.workflowStatus}</React.Fragment>}\n                                {!api.workflowStatus && <React.Fragment>?</React.Fragment>}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={4}>\n                            {/* Transports */}\n                            <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.NewOverview.Configuration.transports'\n                                    defaultMessage='Transports'\n                                />\n                                <Tooltip\n                                    placement='top'\n                                    classes={{\n                                        tooltip: parentClasses.htmlTooltip,\n                                    }}\n                                    disableHoverListener\n                                    title={\n                                        <React.Fragment>\n                                            <FormattedMessage\n                                                id='Apis.Details.NewOverview.Configuration.transport.tooltip'\n                                                defaultMessage={\n                                                    'HTTP is less secure than HTTPS and ' +\n                                                    'makes your API vulnerable to security threats.'\n                                                }\n                                            />\n                                        </React.Fragment>\n                                    }\n                                >\n                                    <Button className={parentClasses.helpButton}>\n                                        <HelpOutline className={parentClasses.helpIcon} />\n                                    </Button>\n                                </Tooltip>\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={8}>\n                            <Typography component='p' variant='body1'>\n                                {api.transport && api.transport.length !== 0 && (\n                                    <React.Fragment>\n                                        {api.transport.map((item, index) => (\n                                            <span>\n                                                {item}\n                                                {api.transport.length !== index + 1 && ', '}\n                                            </span>\n                                        ))}\n                                    </React.Fragment>\n                                )}\n                                {!api.transport && <React.Fragment>?</React.Fragment>}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={4}>\n                            {/* Created Time */}\n                            <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.NewOverview.Configuration.created.time'\n                                    defaultMessage='Created Time'\n                                />\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={8}>\n                            <Typography component='p' variant='body1'>\n                                {api.createdTime &&\n                                <React.Fragment>\n                                    <Tooltip\n                                        title={moment(api.createdTime).calendar()}\n                                        aria-label='add'\n                                        interactive\n                                        placement='top-start'\n                                    >\n                                        <Typography variant='caption' display='block'>\n                                            {moment(api.createdTime).fromNow()}\n                                        </Typography>\n                                    </Tooltip>\n                                </React.Fragment>}\n                                {!api.createdTime && <React.Fragment>?</React.Fragment>}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={4}>\n                            {/* Last Updated Time */}\n                            <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.NewOverview.Configuration.last.updated.time'\n                                    defaultMessage='Last Updated Time'\n                                />\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={8}>\n                            <Typography component='p' variant='body1'>\n                                {api.lastUpdatedTime &&\n                                    <React.Fragment>\n                                        <Tooltip\n                                            title={moment(api.lastUpdatedTime).calendar()}\n                                            aria-label='add'\n                                            interactive\n                                            placement='top-start'\n                                        >\n                                            <Typography variant='caption' display='block'>\n                                                {moment(api.lastUpdatedTime).fromNow()}\n                                            </Typography>\n                                        </Tooltip>\n                                    </React.Fragment>}\n                                {!api.lastUpdatedTime && <React.Fragment>?</React.Fragment>}\n                            </Typography>\n                        </Grid>\n                        <BusinessInformation parentClasses={parentClasses} />\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} md={6} lg={6}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} md={6} lg={4}>\n                            <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.NewOverview.Configuration.context:'\n                                    defaultMessage='Context:'\n                                />\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={8}>\n                            <Typography component='p' variant='body1'>\n                                {api.context && <React.Fragment>{api.context}</React.Fragment>}\n                            </Typography>\n                        </Grid>\n                        {/* Version */}\n                        {api.apiType === API.CONSTS.API && (\n                            <React.Fragment>\n                                <Grid item xs={12} md={6} lg={4}>\n                                    <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.Configuration.version'\n                                            defaultMessage='Version'\n                                        />\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={12} md={6} lg={8}>\n                                    <Typography component='p' variant='body1'>\n                                        {api.version && <React.Fragment>{api.version}</React.Fragment>}\n                                    </Typography>\n                                </Grid>\n                            </React.Fragment>\n                        )}\n\n                        <Grid item xs={12} md={6} lg={4}>\n                            {/* API Security */}\n                            <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.NewOverview.Configuration.securityScheme'\n                                    defaultMessage='API Security'\n                                />\n                                <Tooltip\n                                    placement='top'\n                                    classes={{\n                                        tooltip: parentClasses.htmlTooltip,\n                                    }}\n                                    disableHoverListener\n                                    title={\n                                        <React.Fragment>\n                                            <FormattedMessage\n                                                id='Apis.Details.NewOverview.Configuration.securityScheme.tooltip'\n                                                defaultMessage='OAuth2 is used as the default security schema.'\n                                            />\n                                        </React.Fragment>\n                                    }\n                                >\n                                    <Button className={parentClasses.helpButton}>\n                                        <HelpOutline className={parentClasses.helpIcon} />\n                                    </Button>\n                                </Tooltip>\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={8}>\n                            <Typography component='p' variant='body1'>\n                                {api.securityScheme && api.securityScheme.length !== 0 && (\n                                    <React.Fragment>\n                                        {api.securityScheme.map(item =>\n                                            (item.includes('mandatory') ? null : (\n                                                <span>{securitySchemeMap[item] + ', '}</span>\n                                            )))}\n                                    </React.Fragment>\n                                )}\n                                {!api.securityScheme && <React.Fragment>?</React.Fragment>}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={4}>\n                            {/* Access Control */}\n                            <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.NewOverview.Configuration.access.control'\n                                    defaultMessage='Access Control'\n                                />\n                                <Tooltip\n                                    placement='top'\n                                    classes={{\n                                        tooltip: parentClasses.htmlTooltip,\n                                    }}\n                                    disableHoverListener\n                                    title={\n                                        <React.Fragment>\n                                            <FormattedMessage\n                                                id='Apis.Details.NewOverview.Configuration.access.control.all.tooltip'\n                                                defaultMessage={\n                                                    'All : The API is viewable, ' +\n                                                    'modifiable by all the publishers and creators.'\n                                                }\n                                            />\n                                            <br />\n                                            <FormattedMessage\n                                                id='Apis.Details.NewOverview.Configuration.access.control.tooltip'\n                                                defaultMessage={\n                                                    'Restricted by roles : The API can be viewable and' +\n                                                    ' modifiable by only specific publishers and creators ' +\n                                                    'with the roles that you specify'\n                                                }\n                                            />\n                                        </React.Fragment>\n                                    }\n                                >\n                                    <Button className={parentClasses.helpButton}>\n                                        <HelpOutline className={parentClasses.helpIcon} />\n                                    </Button>\n                                </Tooltip>\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={8}>\n                            <Typography component='p' variant='body1'>\n                                {api.accessControl && <React.Fragment>{api.accessControl}</React.Fragment>}\n                                {api.accessControl === 'RESTRICTED' && ' ( Visible to '}\n                                {api.accessControl === 'RESTRICTED' && api.accessControlRoles.join()}\n                                {api.accessControl === 'RESTRICTED' && ' ) '}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={4}>\n                            {/* Visibility */}\n                            <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.NewOverview.Configuration.visibility.store'\n                                    defaultMessage='Visibility on Store'\n                                />\n                                <Tooltip\n                                    placement='top'\n                                    classes={{\n                                        tooltip: parentClasses.htmlTooltip,\n                                    }}\n                                    disableHoverListener\n                                    title={\n                                        <React.Fragment>\n                                            <FormattedMessage\n                                                id='Apis.Details.NewOverview.Configuration.visibility.store.all.tooltip'\n                                                defaultMessage={\n                                                    'Public: The API is accessible to everyone and can be ' +\n                                                    'advertised in multiple stores - a central store ' +\n                                                    'and/or non-WSO2 stores.'\n                                                }\n                                            />\n                                            <br />\n                                            <FormattedMessage\n                                                id='Apis.Details.NewOverview.Configuration.visibility.store.res.tooltip'\n                                                defaultMessage={\n                                                    'Restricted by roles: The API is visible only ' +\n                                                    'to specific user roles in the tenant store that you specify.'\n                                                }\n                                            />\n                                        </React.Fragment>\n                                    }\n                                >\n                                    <Button className={parentClasses.helpButton}>\n                                        <HelpOutline className={parentClasses.helpIcon} />\n                                    </Button>\n                                </Tooltip>\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={8}>\n                            <Typography component='p' variant='body1'>\n                                {api.visibility && <React.Fragment>{api.visibility}</React.Fragment>}\n                                {api.visibility === 'RESTRICTED' && ' ( Visible to '}\n                                {api.visibility === 'RESTRICTED' && api.visibleRoles.join()}\n                                {api.visibility === 'RESTRICTED' && ' ) '}\n                            </Typography>\n                        </Grid>\n                        <Policies parentClasses={parentClasses} />\n                        {api.apiType === API.CONSTS.APIProduct ? null : (\n                            <React.Fragment>\n                                <Grid item xs={12} md={6} lg={4}>\n                                    <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.Configuration.tags'\n                                            defaultMessage='Tags'\n                                        />\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={12} md={6} lg={8}>\n                                    <Typography variant='body1'>\n                                        ({ api.tags && api.tags.map(tag =>\n                                            (<Chip key={tag} label={tag} className={parentClasses.chip} />))}\n                                        )\n                                    </Typography>\n                                </Grid>\n                            </React.Fragment>\n                        )}\n                    </Grid>\n                    {loadEndpoints}\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n}\n\nConfiguration.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n};\n\nexport default Configuration;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport green from '@material-ui/core/colors/green';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport API from 'AppData/api';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport Resources from './Resources';\nimport Operations from './Operations';\nimport ProductResources from './ProductResources';\nimport Configuration from './Configuration';\n\nconst styles = theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    contentWrapper: {\n        marginTop: theme.spacing(2),\n    },\n    buttonSuccess: {\n        backgroundColor: green[500],\n        '&:hover': {\n            backgroundColor: green[700],\n        },\n    },\n    checkItem: {\n        textAlign: 'center',\n    },\n    divider: {\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n        padding: 0,\n        height: 'auto',\n        '& span': {\n            padding: '0 5px',\n        },\n    },\n    imageContainer: {\n        display: 'flex',\n    },\n    imageWrapper: {\n        marginRight: theme.spacing(3),\n    },\n    subtitle: {\n        marginTop: theme.spacing(0),\n    },\n    specialGap: {\n        marginTop: theme.spacing(3),\n    },\n    resourceTitle: {\n        marginBottom: theme.spacing(3),\n    },\n    ListRoot: {\n        padding: 0,\n        margin: 0,\n    },\n    titleWrapper: {\n        display: 'flex',\n    },\n    title: {\n        flex: 1,\n    },\n    helpButton: {\n        padding: 0,\n        minWidth: 20,\n    },\n    helpIcon: {\n        fontSize: 16,\n    },\n    htmlTooltip: {\n        backgroundColor: '#f5f5f9',\n        color: 'rgba(0, 0, 0, 0.87)',\n        maxWidth: 220,\n        fontSize: theme.typography.pxToRem(14),\n        border: '1px solid #dadde9',\n        '& b': {\n            fontWeight: theme.typography.fontWeightMedium,\n        },\n    },\n    lifecycleWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    lifecycleIcon: {\n        fontSize: 36,\n        color: 'green',\n        marginRight: theme.spacing(1),\n    },\n    leftSideWrapper: {\n        paddingRight: theme.spacing(2),\n    },\n    notConfigured: {\n        color: 'rgba(0, 0, 0, 0.40)',\n    },\n});\n\n/**\n * API Overview page\n *\n * @param {*} props\n * @returns\n */\nfunction Overview(props) {\n    const { classes, api: newApi } = props;\n    const { api } = useContext(ApiContext);\n    function getResourcesClassForAPIs(apiType) {\n        switch (apiType) {\n            case 'GRAPHQL':\n                return <Operations parentClasses={classes} api={api} />;\n            case 'APIProduct':\n                return <ProductResources parentClasses={classes} api={api} />;\n            default:\n                return <Resources parentClasses={classes} api={api} />;\n        }\n    }\n\n    if (newApi.apiType === API.CONSTS.APIProduct) {\n        api.type = API.CONSTS.APIProduct;\n    }\n    return (\n        <React.Fragment>\n            <div className={classes.titleWrapper}>\n                <Typography variant='h4' align='left' className={classes.mainTitle}>\n                    <FormattedMessage\n                        id='Apis.Details.Overview.Overview.topic.header'\n                        defaultMessage='Overview'\n                    />\n                </Typography>\n            </div>\n            <div className={classes.contentWrapper}>\n                <Paper className={classes.root} elevation={1}>\n                    <Grid container spacing={24}>\n                        <Grid item xs={12} md={12} lg={12} className={classes.leftSideWrapper}>\n                            <Configuration parentClasses={classes} />\n                        </Grid>\n                        <Grid item xs={12} md={12} lg={12}>\n                            {getResourcesClassForAPIs(api.type)}\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </div>\n        </React.Fragment>\n    );\n}\n\nOverview.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n};\n\nexport default withStyles(styles)(Overview);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function AuthorizationHeader(props) {\n    const { api, configDispatcher } = props;\n\n    return (\n        <Grid container spacing={1} alignItems='center'>\n            <Grid item xs={11}>\n                <TextField\n                    disabled={isRestricted(['apim:api_create'], api)}\n                    id='outlined-name'\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.Configuration.auth.header.label'\n                            defaultMessage='Authorization Header'\n                        />\n                    )}\n                    value={api.authorizationHeader || ' '}\n                    margin='normal'\n                    variant='outlined'\n                    onChange={({ target: { value } }) => configDispatcher({ action: 'authorizationHeader', value })}\n                    style={{ display: 'flex' }}\n                />\n            </Grid>\n            <Grid item xs={1}>\n                <Tooltip\n                    title={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.Configuration.AuthHeader.tooltip'\n                            defaultMessage={\n                                'If you want to send the authorization '\n                                + 'information under different header name other than Authorization,'\n                                + 'You may specify that header name here'\n                            }\n                        />\n                    )}\n                    aria-label='Auth Header'\n                    placement='right-end'\n                    interactive\n                >\n                    <HelpOutline />\n                </Tooltip>\n            </Grid>\n        </Grid>\n    );\n}\n\nAuthorizationHeader.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function DefaultVersion(props) {\n    const { api, configDispatcher } = props;\n\n\n    return (\n        <Grid container spacing={1} alignItems='flex-start' xs={11}>\n            <Grid item>\n                <FormControl component='fieldset' style={{ display: 'flex', marginTop: 20 }}>\n                    <FormLabel component='legend'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.Configuration.isdefault.label'\n                            defaultMessage='Is Default'\n                        />\n                    </FormLabel>\n                    <RadioGroup\n                        aria-label='Is Default'\n                        value={api.isDefaultVersion}\n                        onChange={({\n                            target: { value },\n                        }) => configDispatcher({\n                            action: 'isDefaultVersion', value: value === 'true',\n                        })\n                        }\n                        style={{ display: 'flow-root' }}\n                    >\n                        <FormControlLabel\n                            disabled={isRestricted(['apim:api_create'], api)}\n                            value\n                            control={<Radio />}\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.Configuration.isdefault.yes'\n                                    defaultMessage='Yes'\n                                />\n                            )}\n                        />\n                        <FormControlLabel\n                            disabled={isRestricted(['apim:api_create'], api)}\n                            value={false}\n                            control={<Radio />}\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.Configuration.isdefault.no'\n                                    defaultMessage='No'\n                                />\n                            )}\n                        />\n                    </RadioGroup>\n                </FormControl>\n            </Grid>\n            <Grid item xs={1}>\n                <Tooltip\n                    title={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.Configuration.defaultversion.tooltip'\n                            defaultMessage={\n                                'If a particular version of an API is default, '\n                                + 'That API can be invoked without specifying the version'\n                                + ' parameter in the path, The default version will be wired '\n                                + 'to that request automatically'\n                            }\n                        />\n                    )}\n                    aria-label='add'\n                    placement='right-end'\n                    interactive\n                    style={{ marginTop: 20 }}\n                >\n                    <HelpOutline />\n                </Tooltip>\n            </Grid>\n        </Grid>\n    );\n}\n\nDefaultVersion.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { FormattedMessage } from 'react-intl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { isRestricted } from 'AppData/AuthManager';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ResponseCaching(props) {\n    const { api, configDispatcher } = props;\n\n\n    return (\n        <Grid container spacing={1} alignItems='flex-start'>\n            <Grid item>\n                <FormControl component='fieldset'>\n                    <FormLabel component='legend'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.Configuration.response.caching'\n                            defaultMessage='Response caching'\n                        />\n                    </FormLabel>\n                    <FormControlLabel\n                        control={(\n                            <Switch\n                                disabled={isRestricted(['apim:api_create'], api)}\n                                checked={api.responseCachingEnabled}\n                                onChange={({ target: { checked } }) => configDispatcher({\n                                    action: 'responseCachingEnabled',\n                                    value: checked,\n                                })\n                                }\n                                color='primary'\n                            />\n                        )}\n                    />\n                </FormControl>\n            </Grid>\n            <Grid item>\n                <Tooltip\n                    title={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.ResponseCaching.tooltip'\n                            defaultMessage={\n                                'If enabled, API response will be cached at the gateway level'\n                                + ' to improve the response time and minimize the backend load'\n                            }\n                        />\n                    )}\n                    aria-label='Response cache'\n                    placement='right-end'\n                    interactive\n                >\n                    <HelpOutline />\n                </Tooltip>\n            </Grid>\n        </Grid>\n    );\n}\n\nResponseCaching.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst useStyles = makeStyles(theme => ({\n    error: {\n        color: theme.palette.error.main,\n    },\n}));\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function Transports(props) {\n    const { api, configDispatcher } = props;\n    const classes = useStyles();\n    const Validate = () => {\n        if (api.transport.length === 0) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Configuration.components.transport.empty'\n                    defaultMessage='Please select at least one transport!'\n                />\n            );\n        }\n        return null; // No errors :-)\n    };\n    return (\n        <Grid container spacing={1} alignItems='flex-start'>\n            <Grid item>\n                <FormControl component='fieldset'>\n                    <FormLabel component='legend'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.Configuration.transports'\n                            defaultMessage='Transports'\n                        />\n                    </FormLabel>\n                    <FormGroup>\n                        <FormControlLabel\n                            control={(\n                                <Checkbox\n                                    disabled={isRestricted(['apim:api_create'], api)}\n                                    checked={api.transport.includes('http')}\n                                    onChange={({ target: { checked } }) => configDispatcher({\n                                        action: 'transport',\n                                        event: { checked, value: 'http' },\n                                    })\n                                    }\n                                    value='http'\n                                />\n                            )}\n                            label='HTTP'\n                        />\n                        <FormControlLabel\n                            control={(\n                                <Checkbox\n                                    disabled={isRestricted(['apim:api_create'], api)}\n                                    checked={api.transport.includes('https')}\n                                    onChange={({ target: { checked } }) => configDispatcher({\n                                        action: 'transport',\n                                        event: { checked, value: 'https' },\n                                    })\n                                    }\n                                    value='https'\n                                />\n                            )}\n                            label='HTTPS'\n                        />\n                    </FormGroup>\n                </FormControl>\n            </Grid>\n            <Grid item>\n                <Tooltip\n                    title={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.Transports.tooltip'\n                            defaultMessage='API will be exposed in selected transport(s) in the gateway(s)'\n                        />\n                    )}\n                    aria-label='Transports'\n                    placement='right-end'\n                    interactive\n                >\n                    <HelpOutline />\n                </Tooltip>\n            </Grid>\n            <Grid item>\n                <span className={classes.error}>\n                    <Validate />\n                </span>\n            </Grid>\n        </Grid>\n    );\n}\n\n\nTransports.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport { isRestricted } from 'AppData/AuthManager';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function Description(props) {\n    const { api, configDispatcher } = props;\n\n    return (\n        <TextField\n            id='outlined-multiline-static'\n            label='Description'\n            multiline\n            rows='4'\n            value={api.description}\n            margin='0'\n            fullWidth\n            variant='outlined'\n            onChange={e => configDispatcher({ action: 'description', value: e.target.value })}\n            disabled={isRestricted(['apim:api_create'], api)}\n        />\n    );\n}\n\nDescription.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Select from '@material-ui/core/Select';\nimport { isRestricted } from 'AppData/AuthManager';\nimport ChipInput from 'material-ui-chip-input';\nimport APIValidation from 'AppData/APIValidation';\nimport base64url from 'base64url';\nimport Error from '@material-ui/icons/Error';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Chip from '@material-ui/core/Chip';\nimport { red } from '@material-ui/core/colors/';\nimport Alert from 'AppComponents/Shared/Alert';\n\n/**\n *\n * api.accessControl possible values are `NONE` and `RESTRICTED`\n * @export\n * @param {*} props\n * @returns\n */\nexport default function AccessControl(props) {\n    const [roleValidity, setRoleValidity] = useState(true);\n    const [userRoleValidity, setUserRoleValidity] = useState(true);\n    const { api, configDispatcher } = props;\n\n    const [invalidRoles, setInvalidRoles] = useState([]);\n    useEffect(() => {\n        if (invalidRoles.length === 0) {\n            setRoleValidity(true);\n            setUserRoleValidity(true);\n        }\n    }, [invalidRoles]);\n    const handleRoleAddition = (role) => {\n        const systemRolePromise = APIValidation.role.validate(base64url.encode(role));\n        const userRolePromise = APIValidation.userRole.validate(base64url.encode(role));\n        systemRolePromise.then(() => {\n            setRoleValidity(true);\n            userRolePromise.then(() => {\n                setUserRoleValidity(true);\n                configDispatcher({\n                    action: 'accessControlRoles',\n                    value: [...api.accessControlRoles, role],\n                });\n            }).catch((error) => {\n                if (error.status === 404) {\n                    setUserRoleValidity(false);\n                    setInvalidRoles([...invalidRoles, role]);\n                } else {\n                    Alert.error('Error when validating role: ' + role);\n                    console.error('Error when validating user roles ' + error);\n                }\n            });\n        }).catch((error) => {\n            if (error.status === 404) {\n                setRoleValidity(false);\n                setInvalidRoles([...invalidRoles, role]);\n            } else {\n                Alert.error('Error when validating role: ' + role);\n                console.error('Error when validating roles ' + error);\n            }\n        });\n    };\n\n    const handleRoleDeletion = (role) => {\n        setInvalidRoles(invalidRoles.filter(existingRole => existingRole !== role));\n        configDispatcher({\n            action: 'accessControlRoles',\n            value: api.accessControlRoles.filter(existingRole => existingRole !== role),\n        });\n    };\n\n    const handleRoleValidationFailure = () => {\n        if (!roleValidity) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Scopes.Roles.Invalid'\n                    defaultMessage='Role is invalid'\n                />\n            );\n        } else if (!userRoleValidity) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Scopes.Roles.User.Invalid'\n                    defaultMessage='Role must be associated with API creator'\n                />\n            );\n        } else {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Scopes.CreateScope.roles.help'\n                    defaultMessage='Enter valid role and press enter'\n                />\n            );\n        }\n    };\n\n    return (\n        <Grid container spacing={0} alignItems='flex-start'>\n            <Grid item xs={11}>\n                <FormControl style={{ display: 'flex' }}>\n                    <InputLabel htmlFor='accessControl-selector'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.AccessControl.head.topic'\n                            defaultMessage='Access control'\n                        />\n                    </InputLabel>\n                    <Select\n                        disabled={isRestricted(['apim:api_create'], api)}\n                        value={api.accessControl}\n                        onChange={({ target: { value } }) => configDispatcher({ action: 'accessControl', value })}\n                        input={<Input name='accessControl' id='accessControl-selector' />}\n                    >\n                        <MenuItem value='NONE'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.AccessControl.dropdown.all'\n                                defaultMessage='All'\n                            />\n                        </MenuItem>\n                        <MenuItem value='RESTRICTED'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.AccessControl.dropdown.restrict'\n                                defaultMessage='Restrict by role'\n                            />\n                        </MenuItem>\n                    </Select>\n                    <FormHelperText>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.AccessControl.form.helper.text'\n                            defaultMessage='By default there is no access restrictions'\n                        />\n                    </FormHelperText>\n                </FormControl>\n            </Grid>\n            <Grid item xs={1}>\n                <Tooltip\n                    title={(\n                        <React.Fragment>\n                            <p>\n                                <strong>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.AccessControl.tooltip.all'\n                                        defaultMessage='All :'\n                                    />\n                                </strong>\n                                {'  '}\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.AccessControl.tooltip.all.desc'\n                                    defaultMessage='The API is viewable, modifiable by all the publishers and creators.'\n                                />\n                                <br />\n                                <br />\n                                <strong>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.AccessControl.tooltip.restrict'\n                                        defaultMessage='Restricted by roles :'\n                                    />\n                                </strong>\n                                {'  '}\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.AccessControl.tooltip.restrict.desc'\n                                    defaultMessage={'The API can be viewable and modifiable by only specific' +\n                                    ' publishers and creators with the roles that you specify'}\n                                />\n                            </p>\n                        </React.Fragment>\n                    )}\n                    aria-label='Access control'\n                    placement='right-end'\n                    interactive\n                >\n                    <HelpOutline />\n                </Tooltip>\n            </Grid>\n            {isRestricted && (\n                <Grid item>\n                    <ChipInput\n                        disabled={isRestricted(['apim:api_create'], api)}\n                        value={api.accessControlRoles.concat(invalidRoles)}\n                        alwaysShowPlaceholder={false}\n                        placeholder='Enter roles and press Enter'\n                        blurBehavior='clear'\n                        InputProps={{\n                            endAdornment: (!roleValidity || !userRoleValidity) && (\n                                <InputAdornment position='end'>\n                                    <Error color='error' />\n                                </InputAdornment>\n                            ),\n                        }}\n                        onAdd={handleRoleAddition}\n                        error={!roleValidity || !userRoleValidity}\n                        helperText={handleRoleValidationFailure()}\n                        chipRenderer={({ value }, key) => (\n                            <Chip\n                                key={key}\n                                label={value}\n                                onDelete={() => {\n                                    handleRoleDeletion(value);\n                                }}\n                                style={{\n                                    backgroundColor: invalidRoles.includes(value) ? red[300] : null,\n                                    margin: '8px 8px 8px 0',\n                                    float: 'left',\n                                }}\n                            />\n                        )}\n                    />\n                </Grid>\n            )}\n        </Grid>\n    );\n}\n\nAccessControl.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Select from '@material-ui/core/Select';\nimport ChipInput from 'material-ui-chip-input';\nimport APIValidation from 'AppData/APIValidation';\nimport base64url from 'base64url';\nimport Error from '@material-ui/icons/Error';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Chip from '@material-ui/core/Chip';\nimport { red } from '@material-ui/core/colors/';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { isRestricted } from 'AppData/AuthManager';\n\n/**\n *\n * api.accessControl possible values are `NONE` and `RESTRICTED`\n * @export\n * @param {*} props\n * @returns\n */\nexport default function StoreVisibility(props) {\n    const [roleValidity, setRoleValidity] = useState(true);\n    const { api, configDispatcher } = props;\n    const [invalidRoles, setInvalidRoles] = useState([]);\n    const isPublic = api.visibility === 'PUBLIC';\n    useEffect(() => {\n        if (invalidRoles.length === 0) {\n            setRoleValidity(true);\n        }\n    }, [invalidRoles]);\n    const handleRoleAddition = (role) => {\n        const promise = APIValidation.role.validate(base64url.encode(role));\n        promise.then(() => {\n            setRoleValidity(true);\n            configDispatcher({\n                action: 'visibleRoles',\n                value: [...api.visibleRoles, role],\n            });\n        }).catch((error) => {\n            if (error.status === 404) {\n                setRoleValidity(false);\n                setInvalidRoles([...invalidRoles, role]);\n            } else {\n                Alert.error('Error when validating role: ' + role);\n                console.error('Error when validating roles ' + error);\n            }\n        });\n    };\n\n    const handleRoleDeletion = (role) => {\n        if (invalidRoles.includes(role)) {\n            setInvalidRoles(invalidRoles.filter(existingRole => existingRole !== role));\n        }\n        configDispatcher({\n            action: 'visibleRoles',\n            value: api.visibleRoles.filter(existingRole => existingRole !== role),\n        });\n    };\n\n    return (\n        <Grid container spacing={0} alignItems='flex-start'>\n            <Grid item xs={11}>\n                <FormControl style={{ display: 'flex' }} >\n                    <InputLabel htmlFor='storeVisibility-selector'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.storeVisibility.head.topic'\n                            defaultMessage='Store Visibility'\n                        />\n                    </InputLabel>\n                    <Select\n                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                        value={api.visibility}\n                        onChange={({ target: { value } }) => configDispatcher({ action: 'visibility', value })}\n                        input={<Input name='storeVisibility' id='storeVisibility-selector' />}\n                    >\n                        <MenuItem value='PUBLIC'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.StoreVisibility.dropdown.public'\n                                defaultMessage='Public'\n                            />\n                        </MenuItem>\n                        <MenuItem value='RESTRICTED'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.storeVisibility.dropdown.restrict'\n                                defaultMessage='Restrict by role(s)'\n                            />\n                        </MenuItem>\n                    </Select>\n                    <FormHelperText>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.storeVisibility.form.helper.text'\n                            defaultMessage='By default API is visible to all store users'\n                        />\n                    </FormHelperText>\n                </FormControl>\n            </Grid>\n            <Grid item xs={1}>\n                <Tooltip\n                    title={(\n                        <React.Fragment>\n                            <p>\n                                <strong>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.storeVisibility.tooltip.public'\n                                        defaultMessage='Public :'\n                                    />\n                                </strong>\n                                {'  '}\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.storeVisibility.tooltip.public.desc'\n                                    defaultMessage={\n                                        'The API is accessible to everyone and can be advertised ' +\n                                        'in multiple stores - a central store and/or non-WSO2 stores.'\n                                    }\n                                />\n                                <br />\n                                <br />\n                                <strong>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.storeVisibility.tooltip.restrict'\n                                        defaultMessage='Restricted by roles(s) :'\n                                    />\n                                </strong>\n                                {'  '}\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.storeVisibility.tooltip.restrict.desc'\n                                    defaultMessage={\n                                        'The API is visible only to specific user' +\n                                        ' roles in the tenant store that you specify.'\n                                    }\n                                />\n                            </p>\n                        </React.Fragment>\n                    )}\n                    aria-label='Store Visibility'\n                    placement='right-end'\n                    interactive\n                >\n                    <HelpOutline />\n                </Tooltip>\n            </Grid>\n            {!isPublic && (\n                <Grid item>\n                    <ChipInput\n                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                        value={api.visibleRoles.concat(invalidRoles)}\n                        alwaysShowPlaceholder={false}\n                        placeholder='Enter roles and press Enter'\n                        blurBehavior='clear'\n                        InputProps={{\n                            endAdornment: !roleValidity && (\n                                <InputAdornment position='end'>\n                                    <Error color='error' />\n                                </InputAdornment>\n                            ),\n                        }}\n                        onAdd={handleRoleAddition}\n                        error={!roleValidity}\n                        helperText={\n                            roleValidity ? (\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.CreateScope.roles.help'\n                                    defaultMessage='Enter valid role and press enter'\n                                />\n                            ) : (\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.Roles.Invalid'\n                                    defaultMessage='Role is invalid'\n                                />\n                            )\n                        }\n                        chipRenderer={({ value }, key) => (\n                            <Chip\n                                key={key}\n                                label={value}\n                                onDelete={() => {\n                                    handleRoleDeletion(value);\n                                }}\n                                style={{\n                                    backgroundColor: invalidRoles.includes(value) ? red[300] : null,\n                                    margin: '8px 8px 8px 0',\n                                    float: 'left',\n                                }}\n                            />\n                        )}\n                    />\n                </Grid>\n            )}\n        </Grid>\n    );\n}\n\nStoreVisibility.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport ChipInput from 'material-ui-chip-input';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\n/**\n *\n * api.corsConfiguration possible values true and false\n * @export\n * @param {*} props\n * @returns\n */\nexport default function CORSConfiguration(props) {\n    const { api } = useContext(APIContext);\n    const { corsConfiguration } = api;\n    const { configDispatcher } = props;\n    const isCorsEnabled = corsConfiguration.corsConfigurationEnabled;\n    const isAllowAllOrigins =\n        corsConfiguration.accessControlAllowOrigins[0] === '*' &&\n        corsConfiguration.accessControlAllowOrigins.length === 1;\n\n    return (\n        <React.Fragment>\n            <Grid container>\n                <Grid item>\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.CORSConfiguration.cors.configuration'\n                                defaultMessage='CORS Configuration'\n                            />\n                        </FormLabel>\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    disabled={isRestricted(['apim:api_create'], api)}\n                                    checked={corsConfiguration.corsConfigurationEnabled}\n                                    onChange={({ target: { checked } }) =>\n                                        configDispatcher({\n                                            action: 'corsConfigurationEnabled',\n                                            value: checked,\n                                        })\n                                    }\n                                    color='primary'\n                                />\n                            }\n                        />\n                    </FormControl>\n                </Grid>\n                <Grid item>\n                    <Tooltip\n                        title={\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.CORSConfiguration.tooltip'\n                                defaultMessage='If enabled, the CORS configuration for the API will be enabled.'\n                            />\n                        }\n                        aria-label='Response cache'\n                        placement='right-end'\n                        interactive\n                    >\n                        <HelpOutline />\n                    </Tooltip>\n                </Grid>\n                <Grid container>\n                    <Grid item md={12}>\n                        {isCorsEnabled && (\n                            <Grid container>\n                                <Grid item md={12}>\n                                    <Typography variant='subtitle1'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.components.CORSConfiguration.allow.origins'\n                                            defaultMessage='Access Control Allow Origins'\n                                        />\n                                    </Typography>\n                                </Grid>\n                                <Grid item md={12}>\n                                    <Grid container>\n                                        <Grid item md={12}>\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox\n                                                        disabled={isRestricted(['apim:api_create'], api)}\n                                                        checked={isAllowAllOrigins}\n                                                        onChange={({ target: { checked, value } }) =>\n                                                            configDispatcher({\n                                                                action: 'accessControlAllowOrigins',\n                                                                event: { checked, value },\n                                                            })\n                                                        }\n                                                        value='*'\n                                                    />\n                                                }\n                                                label='Allow All Origins'\n                                            />\n                                        </Grid>\n                                        {!isAllowAllOrigins && (\n                                            <Grid item md={12}>\n                                                <ChipInput\n                                                    style={{ marginBottom: 40 }}\n                                                    value={corsConfiguration.accessControlAllowOrigins}\n                                                    helperText={\n                                                        <FormattedMessage\n                                                            id={\n                                                                'Apis.Details.Configuration.components' +\n                                                                '.CORSConfigurations.origin.helper'\n                                                            }\n                                                            defaultMessage={\n                                                                'Press `enter` after typing the origin name,' +\n                                                                'To add a new origin'\n                                                            }\n                                                        />\n                                                    }\n                                                    onAdd={(accessControlAllowOrigin) => {\n                                                        configDispatcher({\n                                                            action: 'accessControlAllowOrigins',\n                                                            event: {\n                                                                value: [\n                                                                    ...corsConfiguration.accessControlAllowOrigins,\n                                                                    accessControlAllowOrigin,\n                                                                ],\n                                                            },\n                                                        });\n                                                    }}\n                                                    onDelete={(accessControlAllowOrigin) => {\n                                                        configDispatcher({\n                                                            action: 'accessControlAllowOrigins',\n                                                            event: {\n                                                                value: corsConfiguration.accessControlAllowOrigins\n                                                                    .filter(oldOrigin => oldOrigin\n                                                                        !== accessControlAllowOrigin),\n                                                            },\n                                                        });\n                                                    }}\n                                                />\n                                            </Grid>\n                                        )}\n                                    </Grid>\n                                </Grid>\n                                <Grid item md={12}>\n                                    <Typography variant='subtitle1'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.components.CORSConfiguration.allow.headers'\n                                            defaultMessage='Access Control Allow Headers'\n                                        />\n                                    </Typography>\n                                </Grid>\n                                <Grid item md={12}>\n                                    <ChipInput\n                                        style={{ marginBottom: 40 }}\n                                        value={corsConfiguration.accessControlAllowHeaders}\n                                        disabled={isRestricted(['apim:api_create'], api)}\n                                        helperText={\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.Configuration.components.' +\n                                                    'CORSConfigurations.header.helper'\n                                                }\n                                                defaultMessage={\n                                                    'Press `enter` after typing the header name, ' +\n                                                    'To add a new header'\n                                                }\n                                            />\n                                        }\n                                        onAdd={(accessControlAllowHeader) => {\n                                            configDispatcher({\n                                                action: 'accessControlAllowHeaders',\n                                                value: [\n                                                    ...corsConfiguration.accessControlAllowHeaders,\n                                                    accessControlAllowHeader,\n                                                ],\n                                            });\n                                        }}\n                                        onDelete={(accessControlAllowHeader) => {\n                                            configDispatcher({\n                                                action: 'accessControlAllowHeaders',\n                                                value: corsConfiguration.accessControlAllowHeaders\n                                                    .filter(oldHeader => oldHeader !== accessControlAllowHeader),\n                                            });\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item md={12}>\n                                    <Typography variant='subtitle1'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.components.CORSConfiguration.allow.methods'\n                                            defaultMessage='Access Control Allow Methods'\n                                        />\n                                    </Typography>\n                                </Grid>\n                                <Grid item md={12}>\n                                    <ChipInput\n                                        style={{ marginBottom: 40 }}\n                                        value={corsConfiguration.accessControlAllowMethods}\n                                        disabled={isRestricted(['apim:api_create'], api)}\n                                        helperText={\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.Configuration.components' +\n                                                    '.CORSConfigurations.method.helper'\n                                                }\n                                                defaultMessage={\n                                                    'Press `enter` after typing the method name,' +\n                                                    ' To add a new method'\n                                                }\n                                            />\n                                        }\n                                        onAdd={(accessControlAllowMethod) => {\n                                            configDispatcher({\n                                                action: 'accessControlAllowMethods',\n                                                value: [\n                                                    ...corsConfiguration.accessControlAllowMethods,\n                                                    accessControlAllowMethod,\n                                                ],\n                                            });\n                                        }}\n                                        onDelete={(accessControlAllowMethod) => {\n                                            configDispatcher({\n                                                action: 'accessControlAllowMethods',\n                                                value: corsConfiguration.accessControlAllowMethods\n                                                    .filter(oldMethod => oldMethod !== accessControlAllowMethod),\n                                            });\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item>\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox\n                                                disabled={isRestricted(['apim:api_create'], api)}\n                                                checked={corsConfiguration.accessControlAllowCredentials}\n                                                onChange={({ target: { checked } }) =>\n                                                    configDispatcher({\n                                                        action: 'accessControlAllowCredentials',\n                                                        value: checked,\n                                                    })\n                                                }\n                                            />\n                                        }\n                                        label={\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.Configuration.components' +\n                                                    '.CORSConfiguration.allow.credentials'\n                                                }\n                                                defaultMessage='Access Control Allow Credentials'\n                                            />\n                                        }\n                                    />\n                                </Grid>\n                            </Grid>\n                        )}\n                    </Grid>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n}\n\nCORSConfiguration.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport ChipInput from 'material-ui-chip-input';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function Tags(props) {\n    const { api, configDispatcher } = props;\n    return (\n        <React.Fragment>\n            <Grid container>\n                <Grid item xs={12}>\n                    <Typography variant='subtitle1'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.Tags.title'\n                            defaultMessage='Tags'\n                        />\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <ChipInput\n                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                        value={api.tags}\n                        helperText={(\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.Tags.helper'\n                                defaultMessage='Press `enter` after typing the tag name,To add a new tag'\n                            />\n                        )}\n                        onAdd={(tag) => {\n                            configDispatcher({ action: 'tags', value: [...api.tags, tag] });\n                        }}\n                        onDelete={(tag) => {\n                            configDispatcher({ action: 'tags', value: api.tags.filter(oldTag => oldTag !== tag) });\n                        }}\n                        style={{ display: 'flex' }}\n                    />\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n}\n\nTags.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { FormattedMessage } from 'react-intl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { isRestricted } from 'AppData/AuthManager';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default class SchemaValidation extends React.Component {\n    /**\n     *Creates an instance of SchemaValidation.\n     * @param {*} props\n     * @memberof SchemaValidation\n     */\n    constructor(props) {\n        super(props);\n        this.state = { isOpen: false };\n        this.setIsOpen = this.setIsOpen.bind(this);\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @param {Object} prevProps\n     * @param {Object} prevState\n     * @memberof SchemaValidation\n     */\n    componentDidUpdate(prevProps) {\n        const { api } = this.props;\n        /*\n        This could have been done using hooks too, But at the moment it requires `useRef` hook to get the previous props\n        Hence using class component and its `componentDidUpdate` life cycle method to open the caution dialog box\n        For more info: https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n         */\n        if (!prevProps.api.enableSchemaValidation && api.enableSchemaValidation) {\n            this.setIsOpen(true);\n        }\n    }\n    /**\n     *\n     * Set isOpen state of the dialog box which shows the caution message when enabling schema validation\n     * @param {Boolean} isOpen Should dialog box is open or not\n     * @memberof SchemaValidation\n     */\n    setIsOpen(isOpen) {\n        this.setState({ isOpen });\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @param {*} props\n     * @returns\n     * @memberof SchemaValidation\n     */\n    render() {\n        const { api, configDispatcher } = this.props;\n        const { isOpen } = this.state;\n\n        return (\n            <Grid container spacing={1} alignItems='flex-start'>\n                <Grid item>\n                    <FormControl component='fieldset' style={{ marginTop: 20 }}>\n                        <FormLabel component='legend'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.schema.validation'\n                                defaultMessage='Schema validation'\n                            />\n                        </FormLabel>\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    disabled={isRestricted(['apim:api_create'], api)}\n                                    checked={\n                                        api.enableSchemaValidation === undefined ? false : api.enableSchemaValidation\n                                    }\n                                    onChange={({ target: { checked } }) =>\n                                        configDispatcher({\n                                            action: 'enableSchemaValidation',\n                                            value: checked,\n                                        })\n                                    }\n                                    color='primary'\n                                />\n                            }\n                        />\n                    </FormControl>\n                </Grid>\n                <Grid item>\n                    <Tooltip\n                        title={\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.schema.validation.tooltip'\n                                defaultMessage={'Enable the request and response ' +\n                                'validation against the OpenAPI definition'}\n                            />\n                        }\n                        aria-label='Schema Validation'\n                        placement='right-end'\n                        interactive\n                        style={{ marginTop: 20 }}\n                    >\n                        <HelpOutline />\n                    </Tooltip>\n                </Grid>\n                <Grid item>\n                    <Dialog\n                        open={isOpen}\n                        onClose={() => this.setIsOpen(false)}\n                        aria-labelledby='alert-dialog-title'\n                        aria-describedby='alert-dialog-description'\n                    >\n                        <DialogTitle id='alert-dialog-title'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.SchemaValidation.title'\n                                defaultMessage='Caution!'\n                            />\n                        </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText id='alert-dialog-description'>\n                                <Typography variant='subtitle1' display='block' gutterBottom>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.SchemaValidation.description'\n                                        defaultMessage={\n                                            'Enabling JSON schema validation will cause to build the' +\n                                        ' payload in every requests and responses. This will have an impact ' +\n                                        'on the round trip time of an API request!'\n                                        }\n                                    />\n                                </Typography>\n                                <Typography variant='subtitle2' display='block' gutterBottom>\n                                    <b>\n                                        <FormattedMessage\n                                            id={'Apis.Details.Configuration.components.SchemaValidation' +\n                                            '.description.question'}\n                                            defaultMessage='Do you want  to enable schema validation?'\n                                        />\n                                    </b>\n                                </Typography>\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button color='primary' onClick={() => this.setIsOpen(false)}>\n                                Yes\n                            </Button>\n                            <Button\n                                onClick={() => {\n                                    this.setIsOpen(false);\n                                    configDispatcher({\n                                        action: 'enableSchemaValidation',\n                                        value: false,\n                                    });\n                                }}\n                            >\n                                No\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nSchemaValidation.propTypes = {\n    api: PropTypes.shape({ enableSchemaValidation: PropTypes.bool }).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nimport {\n    DEFAULT_API_SECURITY_OAUTH2,\n    API_SECURITY_BASIC_AUTH,\n    API_SECURITY_OAUTH_BASIC_AUTH_MANDATORY,\n    API_SECURITY_MUTUAL_SSL,\n} from '../APISecurity';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApplicationLevel(props) {\n    const { haveMultiLevelSecurity, securityScheme, configDispatcher } = props;\n    const { api } = useContext(APIContext);\n\n    let mandatoryValue = 'optional';\n    // If not Oauth2 or Basic auth security is selected, no mandatory values should be pre-selected\n    if (!(securityScheme.includes(DEFAULT_API_SECURITY_OAUTH2) || securityScheme.includes(API_SECURITY_BASIC_AUTH))) {\n        mandatoryValue = null;\n    } else if (!securityScheme.includes(API_SECURITY_MUTUAL_SSL)) {\n        mandatoryValue = API_SECURITY_OAUTH_BASIC_AUTH_MANDATORY;\n    } else if (securityScheme.includes(API_SECURITY_OAUTH_BASIC_AUTH_MANDATORY)) {\n        mandatoryValue = API_SECURITY_OAUTH_BASIC_AUTH_MANDATORY;\n    }\n\n    return (\n        <React.Fragment>\n            <Grid item>\n                <FormControl component='fieldset'>\n                    <FormLabel component='legend'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.Configuration.APISecurity.http'\n                            defaultMessage='Application Level (HTTP)'\n                        />\n                    </FormLabel>\n                    <FormGroup style={{ display: 'flow-root' }}>\n                        <FormControlLabel\n                            control={(\n                                <Checkbox\n                                    disabled={isRestricted(['apim:api_create'], api)}\n                                    checked={securityScheme.includes(DEFAULT_API_SECURITY_OAUTH2)}\n                                    onChange={({ target: { checked, value } }) => configDispatcher({\n                                        action: 'securityScheme',\n                                        event: { checked, value },\n                                    })\n                                    }\n                                    value={DEFAULT_API_SECURITY_OAUTH2}\n                                />\n                            )}\n                            label='OAuth2'\n                        />\n                        <FormControlLabel\n                            control={(\n                                <Checkbox\n                                    disabled={isRestricted(['apim:api_create'], api)}\n                                    checked={securityScheme.includes(API_SECURITY_BASIC_AUTH)}\n                                    onChange={({ target: { checked, value } }) => configDispatcher({\n                                        action: 'securityScheme',\n                                        event: { checked, value },\n                                    })\n                                    }\n                                    value={API_SECURITY_BASIC_AUTH}\n                                />\n                            )}\n                            label='Basic'\n                        />\n                    </FormGroup>\n                </FormControl>\n                <Grid item>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='HTTP security HTTP mandatory selection'\n                            name={API_SECURITY_OAUTH_BASIC_AUTH_MANDATORY}\n                            value={mandatoryValue}\n                            onChange={({ target: { name, value } }) => configDispatcher({\n                                action: 'securityScheme',\n                                event: { name, value },\n                            })\n                            }\n                            row\n                        >\n                            <FormControlLabel\n                                value={API_SECURITY_OAUTH_BASIC_AUTH_MANDATORY}\n                                control={<Radio disabled={!haveMultiLevelSecurity} color='default' />}\n                                label='Mandatory'\n                                labelPlacement='end'\n                            />\n                            <FormControlLabel\n                                value='optional'\n                                control={<Radio disabled={!haveMultiLevelSecurity} color='default' />}\n                                label='Optional'\n                                labelPlacement='end'\n                            />\n                        </RadioGroup>\n                        <FormHelperText>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.APISecurity.components.ApplicationLevel'\n                                defaultMessage='Choose whether Application level security is mandatory or optional'\n                            />\n                        </FormHelperText>\n                    </FormControl>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n}\n\nApplicationLevel.propTypes = {\n    configDispatcher: PropTypes.func.isRequired,\n    haveMultiLevelSecurity: PropTypes.bool.isRequired,\n    securityScheme: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    Icon,\n    IconButton,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    TextField,\n    Typography,\n    withStyles,\n} from '@material-ui/core';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Dropzone from 'react-dropzone';\nimport API from '../../../../../data/api';\nimport SelectPolicies from '../../../Create/Components/SelectPolicies';\n\nconst dropzoneStyles = {\n    border: '1px dashed ',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    height: 75,\n    padding: '8px 0px',\n    position: 'relative',\n    textAlign: 'center',\n    width: '100%',\n    margin: '10px 0',\n};\n\nconst styles = theme => ({\n    fileinput: {\n        display: 'none',\n    },\n    dropZoneWrapper: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& span.material-icons': {\n            color: theme.palette.primary.main,\n        },\n    },\n    uploadedFile: {\n        fontSize: 11,\n    },\n    certificatesHeader: {\n        fontWeight: 600,\n        marginTop: 20,\n    },\n    addCertificateBtn: {\n        borderColor: '#c4c4c4',\n        borderRadius: '8px',\n        borderStyle: 'dashed',\n        borderWidth: 'thin',\n    },\n    certificateList: {\n        maxHeight: '250px',\n        overflow: 'scroll',\n    },\n    certDetailsHeader: {\n        fontWeight: '600',\n    },\n    uploadCertDialogHeader: {\n        fontWeight: '600',\n    },\n});\n/**\n * TODO: Generalize this component to work in Configuration page , upload mutual SSL certificates action\n * in source/src/app/components/Apis/Details/Configuration/components/APISecurity/components/TransportLevel.jsx ~tmkb\n * The base component for advanced endpoint configurations.\n * @param {any} props The input props.\n * @returns {any} The HTML representation of the Certificates.\n */\nfunction Certificates(props) {\n    const {\n        classes, certificates, uploadCertificate, deleteCertificate, isMutualSSLEnabled, apiId,\n    } = props;\n    const [certificate, setCertificate] = useState({ name: '', content: {} });\n    const [certificateList, setCertificateList] = useState([]);\n    const [alias, setAlias] = useState('');\n    const [policy, setPolicy] = useState('');\n    const [endpoint, setEndpoint] = useState('');\n    const [uploadCertificateOpen, setUploadCertificateOpen] = useState(false);\n    const [openCertificateDetails, setOpenCertificateDetails] = useState({ open: false, anchor: null, details: {} });\n    const [certificateToDelete, setCertificateToDelete] = useState({ open: false, alias: '' });\n\n    const closeCertificateUpload = () => {\n        setUploadCertificateOpen(false);\n        setCertificate({ name: '', content: '' });\n        setAlias('');\n        setEndpoint('');\n        setPolicy('');\n    };\n\n    /**\n     * Method to upload the certificate content by calling the rest api.\n     * */\n    const saveCertificate = () => {\n        if (isMutualSSLEnabled) {\n            uploadCertificate(certificate.content, policy, alias);\n        } else {\n            uploadCertificate(certificate.content, endpoint, alias);\n        }\n        closeCertificateUpload();\n    };\n\n    /**\n     * Show the selected certificate details in a popover.\n     *\n     * @param {any} event The button click event.\n     * @param {string} certAlias  The alias of the certificate which information is required.\n     * */\n    const showCertificateDetails = (event, certAlias) => {\n        if (!isMutualSSLEnabled) {\n            API.getCertificateStatus(certAlias)\n                .then((response) => {\n                    setOpenCertificateDetails({\n                        details: response.body,\n                        open: true,\n                        alias: certAlias,\n                        anchor: event.currentTarget,\n                    });\n                })\n                .catch((err) => {\n                    console.error(err);\n                });\n        } else {\n            API.getClientCertificateStatus(certAlias, apiId)\n                .then((response) => {\n                    setOpenCertificateDetails({\n                        details: response.body,\n                        open: true,\n                        alias: certAlias,\n                        anchor: event.currentTarget,\n                    });\n                })\n                .catch((error) => {\n                    console.error(error);\n                });\n        }\n    };\n\n    /**\n     * Delete certificate represented by the alias.\n     *\n     * @param {string} certificateAlias The alias of the certificate that is needed to be deleted.\n     * */\n    const deleteCertificateByAlias = (certificateAlias) => {\n        deleteCertificate(certificateAlias);\n        setCertificateToDelete({ open: false, alias: '' });\n    };\n\n    /**\n     * Handled the file upload action of the dropzone.\n     *\n     * @param {array} file The accepted file list by the dropzone.\n     * */\n    const onDrop = (file) => {\n        const certificateFile = file[0];\n        if (certificateFile) {\n            setCertificate({ name: certificateFile.name, content: certificateFile });\n        }\n    };\n\n    /**\n     * On change functionality to handle the policy dropdown\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { value } = event.target;\n        setPolicy(value);\n    }\n\n    useEffect(() => {\n        setCertificateList(certificates);\n    }, [certificates]);\n\n    return (\n        <Grid container direction='column'>\n            {/* TODO: Add list of existing certificates */}\n            <Grid>\n                <Typography className={classes.certificatesHeader}>\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificates'\n                        defaultMessage='Certificates'\n                    />\n                </Typography>\n            </Grid>\n            <Grid item>\n                <List className={classes.certificateList}>\n                    {certificateList.length > 0 ? (\n                        certificateList.map((cert) => {\n                            return (\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Icon>lock</Icon>\n                                    </ListItemAvatar>\n                                    {isMutualSSLEnabled ?\n                                        (<ListItemText primary={cert.alias} secondary={cert.tier} />) :\n                                        <ListItemText primary={cert.alias} secondary={cert.endpoint} />\n                                    }\n\n                                    <ListItemSecondaryAction>\n                                        <IconButton\n                                            edge='end'\n                                            onClick={event => showCertificateDetails(event, cert.alias)}\n                                        >\n                                            <Icon>info</Icon>\n                                        </IconButton>\n                                        <IconButton\n                                            onClick={() => setCertificateToDelete({ open: true, alias: cert.alias })}\n                                            color='secondary'\n                                        >\n                                            <Icon>delete</Icon>\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            );\n                        })\n                    ) : (\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Icon color='primary'>info</Icon>\n                            </ListItemAvatar>\n                            <ListItemText>You do not have any certificates uploaded</ListItemText>\n                        </ListItem>\n                    )}\n                </List>\n                <List>\n                    <ListItem\n                        button\n                        className={classes.addCertificateBtn}\n                        onClick={() => setUploadCertificateOpen(true)}\n                    >\n                        <ListItemAvatar>\n                            <IconButton>\n                                <Icon>add</Icon>\n                            </IconButton>\n                        </ListItemAvatar>\n                        <ListItemText primary='Add Certificate' />\n                    </ListItem>\n                </List>\n            </Grid>\n            <Dialog open={certificateToDelete.open}>\n                <DialogTitle>\n                    <Icon style={{ color: '#dd1c30' }}>warning</Icon>\n                    {'Delete Certificate'}\n                </DialogTitle>\n                <DialogContent>\n                    <Typography>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.confirm.certificate.delete'\n                            defaultMessage='Do you want to delete the Certificate'\n                        />{' '}\n                        {' ' + certificateToDelete.alias + '?'}\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.delete.cannot.undone'\n                            defaultMessage=' This cannot be undone.'\n                        />\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => deleteCertificateByAlias(certificateToDelete.alias)}\n                        color='primary'\n                        autoFocus\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.delete.ok.button'\n                            defaultMessage='OK'\n                        />\n                    </Button>\n                    <Button onClick={() => setCertificateToDelete({ open: false, alias: '' })} color='secondary'>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.delete.cancel.button'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Dialog open={openCertificateDetails.open}>\n                <DialogTitle>\n                    <Typography className={classes.certDetailsHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.details.of'\n                            defaultMessage='Details of'\n                        />\n                        {' ' + openCertificateDetails.alias}\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <Typography>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.status'\n                            defaultMessage='Status'\n                        />\n                        {' : ' + openCertificateDetails.details.status}\n                    </Typography>\n                    <Typography>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.subject'\n                            defaultMessage='Subject'\n                        />\n                        {' : ' + openCertificateDetails.details.subject}\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => setOpenCertificateDetails({ open: false, anchor: null, details: {} })}\n                        color='primary'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.details.close.button'\n                            defaultMessage='Close'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Dialog open={uploadCertificateOpen}>\n                <DialogTitle>\n                    <Typography className={classes.uploadCertDialogHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.uploadCertificate'\n                            defaultMessage='Upload Certificate'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <Grid>\n                        <div>\n                            {isMutualSSLEnabled ? (\n                                <SelectPolicies\n                                    multiple={false}\n                                    policies={policy}\n                                    helperText='Select a throttling policy for the certificate'\n                                    onChange={handleOnChange}\n                                    required\n                                />\n                            ) :\n                                <TextField\n                                    required\n                                    id='certificateEndpoint'\n                                    label={\n                                        <FormattedMessage\n                                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.endpoint'\n                                            defaultMessage='Endpoint'\n                                        />\n                                    }\n                                    value={endpoint}\n                                    placeholder='Endpoint'\n                                    onChange={event => setEndpoint(event.target.value)}\n                                    margin='normal'\n                                    fullWidth\n                                />\n                            }\n\n                            <TextField\n                                required\n                                id='certificateAlias'\n                                label={\n                                    <FormattedMessage\n                                        id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.alias'\n                                        defaultMessage='Alias'\n                                    />\n                                }\n                                value={alias}\n                                placeholder='My Alias'\n                                onChange={event => setAlias(event.target.value)}\n                                margin='normal'\n                                fullWidth\n                            />\n                            <Dropzone\n                                multiple={false}\n                                accept={\n                                    'application/pkcs8,' +\n                                    'application/pkcs10, application/pkix-crl,' +\n                                    'application/pkcs7-mime,' +\n                                    'application/x-x509-ca-cert,' +\n                                    'application/x-x509-user-cert,' +\n                                    'application/x-pkcs7-crl,' +\n                                    'application/x-pkcs12,' +\n                                    'application/x-pkcs7-certificates,' +\n                                    'application/x-pkcs7-certreqresp,' +\n                                    '.p8, .p10, .csr, .cer, .crl, .p7c, .crt, .der, .p12, .pfx, .p7b, .spc, .p7r'\n                                }\n                                className={classes.dropzone}\n                                activeClassName={classes.acceptDrop}\n                                rejectClassName={classes.rejectDrop}\n                                onDrop={(dropFile) => {\n                                    onDrop(dropFile);\n                                }}\n                            >\n                                {({ getRootProps, getInputProps }) => (\n                                    <div {...getRootProps({ style: dropzoneStyles })}>\n                                        <input {...getInputProps()} />\n                                        <div className={classes.dropZoneWrapper}>\n                                            {certificate.name === '' ? (\n                                                <div>\n                                                    <Icon style={{ fontSize: 56 }}>cloud_upload</Icon>\n                                                    <Typography>\n                                                        <FormattedMessage\n                                                            id={\n                                                                'Apis.Details.Endpoints.GeneralConfiguration' +\n                                                                '.Certificates.click.or.drop.to.upload.file'\n                                                            }\n                                                            defaultMessage={\n                                                                'Click or drag the certificate ' +\n                                                                ' file to upload.'\n                                                            }\n                                                        />\n                                                    </Typography>\n                                                </div>\n                                            ) : (\n                                                <div className={classes.uploadedFile}>\n                                                    <Icon style={{ fontSize: 56 }}>insert_drive_file</Icon>\n                                                    {certificate.name}\n                                                </div>\n                                            )}\n                                        </div>\n                                    </div>\n                                )}\n                            </Dropzone>\n                        </div>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={saveCertificate}\n                        color='primary'\n                        autoFocus\n                        disabled={\n                            alias === '' ||\n                            (!isMutualSSLEnabled && endpoint === '') ||\n                            certificate.name === '' ||\n                            (isMutualSSLEnabled && policy === '')\n                        }\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.config.save.button'\n                            defaultMessage='Save'\n                        />\n                    </Button>\n                    <Button onClick={closeCertificateUpload} color='secondary'>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.cancel.button'\n                            defaultMessage='Close'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Grid>\n    );\n}\n\nCertificates.defaultProps = {\n    isMutualSSLEnabled: false,\n    apiId: '',\n};\n\nCertificates.propTypes = {\n    classes: PropTypes.shape({\n        fileinput: PropTypes.shape({}),\n        button: PropTypes.shape({}),\n    }).isRequired,\n    certificates: PropTypes.shape({}).isRequired,\n    uploadCertificate: PropTypes.func.isRequired,\n    deleteCertificate: PropTypes.func.isRequired,\n    apiId: PropTypes.string,\n    isMutualSSLEnabled: PropTypes.bool,\n};\nexport default injectIntl(withStyles(styles)(Certificates));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Certificates from 'AppComponents/Apis/Details/Endpoints/GeneralConfiguration/Certificates';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\n\nimport {\n    API_SECURITY_MUTUAL_SSL,\n    API_SECURITY_MUTUAL_SSL_MANDATORY,\n    DEFAULT_API_SECURITY_OAUTH2,\n    API_SECURITY_BASIC_AUTH,\n} from '../APISecurity';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nfunction TransportLevel(props) {\n    const {\n        haveMultiLevelSecurity, securityScheme, configDispatcher, intl, id,\n    } = props;\n    const isMutualSSLEnabled = securityScheme.includes(API_SECURITY_MUTUAL_SSL);\n    const { api } = useContext(APIContext);\n    const [clientCertificates, setClientCertificates] = useState([]);\n\n    /**\n     * Method to upload the certificate content by calling the rest api.\n     *\n     * @param {string} certificate The certificate needs to be associated with the API\n     * @param {string} policy The tier to be used for the certificate.\n     * @param {string} alias The alias of the certificate to be deleted.\n     * */\n    const saveClientCertificate = (certificate, policy, alias) => {\n        API.addClientCertificate(id, certificate, policy, alias).then((resp) => {\n            if (resp.status === 201) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Configuration.components.APISecurity.TranportLevel.certificate.add.success',\n                    defaultMessage: 'Certificate added successfully',\n                }));\n                const tmpCertificates = [...clientCertificates];\n                tmpCertificates.push({\n                    apiId: resp.obj.apiId,\n                    alias: resp.obj.alias,\n                    tier: resp.obj.tier,\n                });\n                setClientCertificates(tmpCertificates);\n            }\n        }).catch((error) => {\n            if (error.response) {\n                Alert.error(error.response.body.description);\n            } else {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Configuration.components.APISecurity.TranportLevel.certificate.alias.error',\n                    defaultMessage: 'Something went wrong while adding the API certificate',\n                }));\n            }\n        });\n    };\n\n    /**\n     * Method to delete the selected certificate.\n     *\n     * @param {string} alias The alias of the certificate to be deleted.\n     * */\n    const deleteClientCertificate = (alias) => {\n        API.deleteClientCertificate(alias, id).then((resp) => {\n            setClientCertificates(() => {\n                if (resp.status === 200) {\n                    return clientCertificates.filter((cert) => {\n                        return cert.alias !== alias;\n                    });\n                } else {\n                    return -1;\n                }\n            });\n            Alert.info(intl.formatMessage({\n                id: 'Apis.Details.Configuration.components.APISecurity.TranportLevel.certificate.delete.success',\n                defaultMessage: 'Certificate Deleted Successfully',\n            }));\n        }).catch((error) => {\n            if (error.response) {\n                Alert.error(error.response.body.description);\n            } else {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Configuration.components.APISecurity.TranportLevel.certificate.delete.error',\n                    defaultMessage: 'Error while deleting certificate',\n                }));\n            }\n        });\n    };\n\n    // Get the client certificates from backend.\n    useEffect(() => {\n        API.getAllClientCertificates(id).then((resp) => {\n            const { certificates } = resp.obj;\n            setClientCertificates(certificates);\n        }).catch((err) => {\n            console.error(err);\n            setClientCertificates([]);\n        });\n    }, []);\n\n    let mandatoryValue = 'optional';\n    // If not mutual ssl security is selected, no mandatory values should be pre-selected\n    if (!isMutualSSLEnabled) {\n        mandatoryValue = 'null';\n    } else if (\n        !(securityScheme.includes(DEFAULT_API_SECURITY_OAUTH2) || securityScheme.includes(API_SECURITY_BASIC_AUTH))\n    ) {\n        mandatoryValue = API_SECURITY_MUTUAL_SSL_MANDATORY;\n    } else if (securityScheme.includes(API_SECURITY_MUTUAL_SSL_MANDATORY)) {\n        mandatoryValue = API_SECURITY_MUTUAL_SSL_MANDATORY;\n    }\n    return (\n        <React.Fragment>\n            <Grid item>\n                <FormControl component='fieldset'>\n                    <FormLabel component='legend'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.Configuration.APISecurity.ssl'\n                            defaultMessage='Transport Level (TLS)'\n                        />\n                    </FormLabel>\n                    <FormGroup>\n                        <FormControlLabel\n                            control={(\n                                <Checkbox\n                                    disabled={isRestricted(['apim:api_create'], api)}\n                                    checked={isMutualSSLEnabled}\n                                    onChange={({ target: { checked, value } }) => configDispatcher({\n                                        action: 'securityScheme',\n                                        event: { checked, value },\n                                    })\n                                    }\n                                    value={API_SECURITY_MUTUAL_SSL}\n                                />\n                            )}\n                            label='Mutual SSL'\n                        />\n                    </FormGroup>\n                </FormControl>\n                <Grid item>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='HTTP security SSL mandatory selection'\n                            name={API_SECURITY_MUTUAL_SSL_MANDATORY}\n                            value={mandatoryValue}\n                            onChange={({ target: { name, value } }) => configDispatcher({\n                                action: 'securityScheme',\n                                event: { name, value },\n                            })\n                            }\n                            row\n                        >\n                            <FormControlLabel\n                                value={API_SECURITY_MUTUAL_SSL_MANDATORY}\n                                control={<Radio disabled={!haveMultiLevelSecurity} color='default' />}\n                                label='Mandatory'\n                                labelPlacement='end'\n                            />\n                            <FormControlLabel\n                                value='optional'\n                                control={<Radio disabled={!haveMultiLevelSecurity} color='default' />}\n                                label='Optional'\n                                labelPlacement='end'\n                            />\n                        </RadioGroup>\n                        <FormHelperText>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.APISecurity.components.TransportLevel'\n                                defaultMessage='Choose whether Transport level security is mandatory or optional'\n                            />\n                        </FormHelperText>\n                    </FormControl>\n                </Grid>\n                <Grid item>\n                    {isMutualSSLEnabled && (\n                        // TODO:\n                        // This is half baked!!!\n                        // Refactor the Certificate component to share its capabilities in here and endpoints page ~tmkb\n                        <Certificates\n                            isMutualSSLEnabled={isMutualSSLEnabled}\n                            certificates={clientCertificates}\n                            uploadCertificate={saveClientCertificate}\n                            deleteCertificate={deleteClientCertificate}\n                            apiId={id}\n                        />\n                    )}\n\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n}\n\nTransportLevel.propTypes = {\n    configDispatcher: PropTypes.func.isRequired,\n    haveMultiLevelSecurity: PropTypes.bool.isRequired,\n    securityScheme: PropTypes.arrayOf(PropTypes.string).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    id: PropTypes.string.isRequired,\n};\n\nexport default injectIntl((TransportLevel));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ApplicationLevel from './components/ApplicationLevel';\nimport TransportLevel from './components/TransportLevel';\n\n// Check this file for more info  <CARBON_APIMGT>/components/apimgt/org.wso2.carbon.apimgt.impl\n// /src/main/java/org/wso2/carbon/apimgt/impl/APIConstants.java\n\nconst DEFAULT_API_SECURITY_OAUTH2 = 'oauth2';\nconst API_SECURITY_BASIC_AUTH = 'basic_auth';\nconst API_SECURITY_MUTUAL_SSL = 'mutualssl';\nconst API_SECURITY_OAUTH_BASIC_AUTH_MANDATORY = 'oauth_basic_auth_mandatory';\nconst API_SECURITY_MUTUAL_SSL_MANDATORY = 'mutualssl_mandatory';\n\nconst useStyles = makeStyles(theme => ({\n    error: {\n        color: theme.palette.error.main,\n    },\n}));\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function APISecurity(props) {\n    const {\n        api: { securityScheme, id },\n        configDispatcher,\n    } = props;\n    const haveMultiLevelSecurity =\n        securityScheme.includes(API_SECURITY_MUTUAL_SSL) &&\n        (securityScheme.includes(API_SECURITY_BASIC_AUTH) || securityScheme.includes(DEFAULT_API_SECURITY_OAUTH2));\n    const classes = useStyles();\n\n    // Check the validation conditions and return an error message\n    const Validate = () => {\n        if (\n            !securityScheme.includes(API_SECURITY_MUTUAL_SSL) &&\n            !securityScheme.includes(API_SECURITY_BASIC_AUTH) &&\n            !securityScheme.includes(DEFAULT_API_SECURITY_OAUTH2)\n        ) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Configuration.components.APISecurity.emptySchemas'\n                    defaultMessage='Please select at least one API security method!'\n                />\n            );\n        } else if (\n            // User has enabled both security levels and set both levels as optional\n            haveMultiLevelSecurity &&\n            !(\n                securityScheme.includes(API_SECURITY_MUTUAL_SSL_MANDATORY) ||\n                securityScheme.includes(API_SECURITY_OAUTH_BASIC_AUTH_MANDATORY)\n            )\n        ) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Configuration.components.APISecurity.allOptional'\n                    defaultMessage='Please select at least one API security level mandatory!'\n                />\n            );\n        }\n        return null; // No errors :-)\n    };\n    return (\n        <React.Fragment>\n            <Grid container spacing={2} alignItems='flex-start'>\n                <Grid item>\n                    <Typography variant='subtitle1'>\n                        API Security\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <Tooltip\n                        title={\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.APISecurity.tooltip'\n                                defaultMessage={\n                                    'This option determines the type of security' +\n                                    ' that will be used to secure this API. An API can be secured ' +\n                                    'with either one of them or it can be secured by both of them. ' +\n                                    'If OAuth2 option is selected, relevant API will require a valid ' +\n                                    'OAuth2 token for successful invocation. If Mutual SSL option is selected,' +\n                                    ' a trusted client certificate should be presented to access the API'\n                                }\n                            />\n                        }\n                        aria-label='APISecurity'\n                        placement='right-end'\n                        interactive\n                    >\n                        <HelpOutline />\n                    </Tooltip>\n                </Grid>\n            </Grid>\n\n            <Grid container spacing={5} alignItems='flex-start'>\n                <ApplicationLevel\n                    haveMultiLevelSecurity={haveMultiLevelSecurity}\n                    securityScheme={securityScheme}\n                    configDispatcher={configDispatcher}\n                />\n                <TransportLevel\n                    haveMultiLevelSecurity={haveMultiLevelSecurity}\n                    securityScheme={securityScheme}\n                    configDispatcher={configDispatcher}\n                    id={id}\n                />\n                <Grid item>\n                    <span className={classes.error}>\n                        <Validate />\n                    </span>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n}\n\nAPISecurity.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n\nexport {\n    DEFAULT_API_SECURITY_OAUTH2,\n    API_SECURITY_BASIC_AUTH,\n    API_SECURITY_MUTUAL_SSL,\n    API_SECURITY_OAUTH_BASIC_AUTH_MANDATORY,\n    API_SECURITY_MUTUAL_SSL_MANDATORY,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useReducer, useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport ThumbnailView from 'AppComponents/Apis/Listing/components/ImageGenerator/ThumbnailView';\nimport { isRestricted } from 'AppData/AuthManager';\nimport AuthorizationHeader from './components/AuthorizationHeader';\nimport DefaultVersion from './components/DefaultVersion';\nimport ResponseCaching from './components/ResponseCaching';\nimport Transports from './components/Transports';\nimport Description from './components/Description';\nimport AccessControl from './components/AccessControl';\nimport StoreVisibility from './components/StoreVisibility';\nimport CORSConfiguration from './components/CORSConfiguration';\nimport Tags from './components/Tags';\nimport SchemaValidation from './components/SchemaValidation';\n\nimport APISecurity, {\n    DEFAULT_API_SECURITY_OAUTH2,\n    API_SECURITY_BASIC_AUTH,\n    API_SECURITY_OAUTH_BASIC_AUTH_MANDATORY,\n    API_SECURITY_MUTUAL_SSL_MANDATORY,\n    API_SECURITY_MUTUAL_SSL,\n} from './components/APISecurity/APISecurity';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: theme.spacing(3, 2),\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing.unit * 3,\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    paper: {\n        padding: theme.spacing.unit * 3,\n    },\n    heading: {\n        fontSize: '1.5rem',\n        fontWeight: 100,\n        marginBottom: theme.spacing.unit * 3,\n    },\n    itemPadding: {\n        marginBottom: theme.spacing.unit * 3,\n    },\n    arrowForwardIcon: {\n        fontSize: 50,\n        color: '#ccc',\n        position: 'absolute',\n        top: 90,\n        right: -43,\n    },\n    arrowBackIcon: {\n        fontSize: 50,\n        color: '#ccc',\n        position: 'absolute',\n        top: 50,\n        right: -71,\n    },\n}));\n\n/**\n *\n * Deep coping the properties in API object (what ever the object in the state),\n * making sure that no direct mutations happen when updating the state.\n * You should know the shape of the object that you are keeping in the state,\n * @param {Object} api\n * @returns {Object} Deep copy of an object\n */\nfunction copyAPIConfig(api) {\n    return {\n        id: api.id,\n        name: api.name,\n        description: api.description,\n        accessControl: api.accessControl,\n        authorizationHeader: api.authorizationHeader,\n        responseCachingEnabled: api.responseCachingEnabled,\n        cacheTimeout: api.cacheTimeout,\n        visibility: api.visibility,\n        isDefaultVersion: api.isDefaultVersion,\n        enableSchemaValidation: api.enableSchemaValidation,\n        accessControlRoles: [...api.accessControlRoles],\n        visibleRoles: [...api.visibleRoles],\n        tags: [...api.tags],\n        transport: [...api.transport],\n        securityScheme: [...api.securityScheme],\n        corsConfiguration: {\n            corsConfigurationEnabled: api.corsConfiguration.corsConfigurationEnabled,\n            accessControlAllowCredentials: api.corsConfiguration.accessControlAllowCredentials,\n            accessControlAllowOrigins: [...api.corsConfiguration.accessControlAllowOrigins],\n            accessControlAllowHeaders: [...api.corsConfiguration.accessControlAllowHeaders],\n            accessControlAllowMethods: [...api.corsConfiguration.accessControlAllowMethods],\n        },\n    };\n}\n/**\n * This component handles the basic configurations UI in the API details page\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function Configuration() {\n    /**\n     *\n     * Reduce the configuration UI related actions in to updated state\n     * @param {*} state current state\n     * @param {*} configAction dispatched configuration action\n     * @returns {Object} updated state\n     */\n    function configReducer(state, configAction) {\n        const { action, value, event } = configAction;\n        const nextState = { ...copyAPIConfig(state) };\n        switch (action) {\n            case 'description':\n            case 'isDefaultVersion':\n            case 'authorizationHeader':\n            case 'responseCachingEnabled':\n            case 'cacheTimeout':\n            case 'enableSchemaValidation':\n            case 'accessControl':\n            case 'visibility':\n            case 'tags':\n                nextState[action] = value;\n                return nextState;\n            case 'accessControlRoles':\n                return { ...copyAPIConfig(state), [action]: value };\n            case 'visibleRoles':\n                return { ...copyAPIConfig(state), [action]: value };\n            case 'securityScheme':\n                // If event came from mandatory selector of either Application level or Transport level\n                if ([API_SECURITY_MUTUAL_SSL_MANDATORY, API_SECURITY_OAUTH_BASIC_AUTH_MANDATORY].includes(event.name)) {\n                    // If user select not mandatory (optional) , Remove the respective schema, else add it\n                    if (event.value === 'optional') {\n                        return {\n                            ...copyAPIConfig(state),\n                            [action]: state[action].filter(schema => schema !== event.name),\n                        };\n                    } else if (state[action].includes(event.name)) {\n                        return state; // Add for completeness, Ideally there couldn't exist this state\n                    } else {\n                        return { ...copyAPIConfig(state), [action]: [...state[action], event.name] };\n                    }\n                }\n                // User checked on one of api security schemas (either OAuth, Basic or Mutual SSL)\n                if (event.checked) {\n                    if (state[action].includes(event.value)) {\n                        return state; // Add for completeness, Ideally there couldn't exist this state\n                    } else {\n                        return { ...copyAPIConfig(state), [action]: [...state[action], event.value] };\n                    }\n                } else if (state[action].includes(event.value)) {\n                    // User has unchecked a security schema type\n                    const newState = {\n                        ...copyAPIConfig(state),\n                        [action]: state[action].filter(schema => schema !== event.value),\n                    };\n                    if (\n                        !(\n                            newState[action].includes(DEFAULT_API_SECURITY_OAUTH2) ||\n                            newState[action].includes(API_SECURITY_BASIC_AUTH)\n                        )\n                    ) {\n                        const noMandatoryOAuthBasicAuth = newState[action]\n                            .filter(schema => schema !== API_SECURITY_OAUTH_BASIC_AUTH_MANDATORY);\n                        return {\n                            ...newState,\n                            [action]: noMandatoryOAuthBasicAuth,\n                        };\n                    } else if (!newState[action].includes(API_SECURITY_MUTUAL_SSL)) {\n                        const noMandatoryMutualSSL = newState[action]\n                            .filter(schema => schema !== API_SECURITY_MUTUAL_SSL_MANDATORY);\n                        return {\n                            ...newState,\n                            [action]: noMandatoryMutualSSL,\n                        };\n                    }\n\n                    return newState;\n                } else {\n                    return state; // Add for completeness, Ideally there couldn't exist this state\n                }\n            case 'transport':\n                if (event.checked) {\n                    return { ...copyAPIConfig(state), transport: [...state.transport, event.value] };\n                } else {\n                    return {\n                        ...copyAPIConfig(state),\n                        transport: state.transport.filter(transport => transport !== event.value),\n                    };\n                }\n            case 'accessControlAllowHeaders':\n            case 'accessControlAllowMethods':\n            case 'accessControlAllowCredentials':\n            case 'corsConfigurationEnabled':\n                nextState.corsConfiguration[action] = value;\n                return nextState;\n            case 'accessControlAllowOrigins':\n                if (event.checked) {\n                    nextState.corsConfiguration[action] = [event.value];\n                } else {\n                    nextState.corsConfiguration[action] = event.checked === false ? [] : event.value;\n                }\n                return nextState;\n            default:\n                return state;\n        }\n    }\n    const { api, updateAPI } = useContext(APIContext);\n    const [isUpdating, setIsUpdating] = useState(false);\n    const [apiConfig, configDispatcher] = useReducer(configReducer, copyAPIConfig(api));\n    const classes = useStyles();\n    const paperHeight = window.innerHeight - 200;\n    /**\n     *\n     * Handle the configuration view save button action\n     */\n    function handleSave() {\n        setIsUpdating(true);\n        updateAPI(apiConfig)\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                }\n            })\n            .finally(() => setIsUpdating(false));\n    }\n\n    return (\n        <React.Fragment>\n            <div className={classes.titleWrapper}>\n                <Typography variant='h4' align='left' className={classes.mainTitle}>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.Configuration.topic.header'\n                        defaultMessage='Configuration'\n                    />\n                </Typography>\n            </div>\n            {\n                // TODO:\n                // Move design configurations to a sub page\n            }\n            <div className={classes.contentWrapper}>\n                <Grid\n                    container\n                    direction='row'\n                    justify='space-around'\n                    alignItems='flex-start'\n                    spacing={8}\n                >\n                    <Grid item xs={4}>\n                        <Paper className={classes.paper} style={{ minHeight: paperHeight }}>\n                            <Typography className={classes.heading} variant='h6'>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.Configuration.section.design'\n                                    defaultMessage='Design'\n                                />\n                            </Typography>\n                            <Grid\n                                container\n                                direction='row'\n                                justify='space-around'\n                                alignItems='flex-start'\n                                spacing={1}\n                                style={{ marginBottom: 20 }}\n                            >\n                                <Grid item xs={12} md={4}>\n                                    <ThumbnailView api={api} width={100} height={100} isEditable />\n                                </Grid>\n                                <Grid item xs={12} md={8}>\n                                    <Description api={apiConfig} configDispatcher={configDispatcher} />\n                                </Grid>\n                            </Grid>\n                            <div className={classes.itemPadding}>\n                                <AccessControl\n                                    api={apiConfig}\n                                    configDispatcher={configDispatcher}\n                                />\n                            </div>\n                            <div className={classes.itemPadding}>\n                                <StoreVisibility\n                                    api={apiConfig}\n                                    configDispatcher={configDispatcher}\n                                />\n                            </div>\n                            <div className={classes.itemPadding}>\n                                <Tags api={apiConfig} configDispatcher={configDispatcher} />\n                            </div>\n                            <div className={classes.itemPadding}>\n                                <Grid\n                                    container\n                                    direction='row'\n                                >\n                                    <Grid item xs={12} md={6}>\n                                        <DefaultVersion api={apiConfig} configDispatcher={configDispatcher} />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <SchemaValidation api={apiConfig} configDispatcher={configDispatcher} />\n                                    </Grid>\n                                </Grid>\n                            </div>\n                            <div className={classes.itemPadding}>\n                                <Transports api={apiConfig} configDispatcher={configDispatcher} />\n                            </div>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <Grid\n                            direction=' column'\n                            justify='space-between'\n                            alignItems='flex-start'\n                            spacing={6}\n                            style={{ minHeight: paperHeight }}\n                        >\n                            <Grid item xs={12} style={{ marginBottom: 30, position: 'relative' }}>\n                                <Paper className={classes.paper}>\n                                    <Typography className={classes.heading} variant='h6'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.Configuration.section.mediate'\n                                            defaultMessage='Mediate'\n                                        />\n                                    </Typography>\n                                    <CORSConfiguration api={apiConfig} configDispatcher={configDispatcher} />\n                                    <AuthorizationHeader api={apiConfig} configDispatcher={configDispatcher} />\n                                </Paper>\n                                <ArrowForwardIcon className={classes.arrowForwardIcon} />\n                            </Grid>\n                            {\n                                // TODO:\n                                // Add Mediation Policies\n                            }\n                            <Grid item xs={12} style={{ position: 'relative' }}>\n                                <Paper className={classes.paper}>\n                                    <Typography className={classes.heading} variant='h6'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.Configuration.section.response'\n                                            defaultMessage='Response'\n                                        />\n                                    </Typography>\n                                    <ResponseCaching api={apiConfig} configDispatcher={configDispatcher} />\n                                </Paper>\n                                <ArrowBackIcon className={classes.arrowBackIcon} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <Paper className={classes.paper} style={{ minHeight: paperHeight }}>\n                            <Typography className={classes.heading} variant='h6'>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.Configuration.section.backend'\n                                    defaultMessage='Backend'\n                                />\n                            </Typography>\n                            {\n                                // TODO:\n                                // Add Subscription Tiers\n                            }\n                            <APISecurity api={apiConfig} configDispatcher={configDispatcher} />\n                        </Paper>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid container direction='row' alignItems='center' spacing={4} style={{ marginTop: 20 }}>\n                        <Grid item>\n                            <Button\n                                disabled={isUpdating}\n                                type='submit'\n                                variant='contained'\n                                color='primary'\n                                onClick={handleSave}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.Configuration.save'\n                                    defaultMessage='Save'\n                                />\n                                {isUpdating && <CircularProgress size={15} />}\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Link to={'/apis/' + api.id + '/overview'}>\n                                <Button>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                        {(isRestricted(['apim:api_create'], api))\n                            && (\n                                <Grid item>\n                                    <Typography variant='body2' color='primary'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.Configuration.update.not.allowed'\n                                            defaultMessage={'* You are not authorized to update particular fields of' +\n                                            ' the API due to insufficient permissions'}\n                                        />\n                                    </Typography>\n                                </Grid>\n                            )\n                        }\n                    </Grid>\n                </Grid>\n            </div>\n        </React.Fragment>\n    );\n}\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* TODO: Move this file to components/Shared/ location ~tmkb */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ApiPermissionValidation = (props) => {\n    const { checkingPermissionType, userPermissions } = props;\n    if (userPermissions && userPermissions.includes(checkingPermissionType)) {\n        return <React.Fragment>{props.children}</React.Fragment>;\n    }\n    return null;\n};\n\nApiPermissionValidation.propTypes = {\n    checkingPermissionType: PropTypes.string,\n    userPermissions: PropTypes.arrayOf(PropTypes.string).isRequired,\n    children: PropTypes.node.isRequired,\n};\n\nApiPermissionValidation.permissionType = {\n    READ: 'READ',\n    UPDATE: 'UPDATE',\n    DELETE: 'DELETE',\n    MANAGE_SUBSCRIPTION: 'MANAGE_SUBSCRIPTION',\n};\n\nApiPermissionValidation.defaultProps = {\n    checkingPermissionType: ApiPermissionValidation.permissionType.UPDATE,\n};\n\nexport default ApiPermissionValidation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    root: {\n        marginTop: 30,\n    },\n});\n\n\n/**\n *\n *\n * @class LifeCycleImage\n * @extends {React.Component}\n */\nclass LifeCycleImage extends React.Component {\n    highLightMe(element) {\n        if (!element.startsWith(this.props.lifeCycleStatus.toLowerCase())) return { opacity: 0.2 };\n    }\n\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof LifeCycleImage\n     */\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <svg\n                xmlns='http://www.w3.org/2000/svg'\n                width='633'\n                height='244'\n                viewBox='0 0 743.09858 287.34519'\n                id='svg5953'\n                className={classes.root}\n            >\n                <defs id='defs5955'>\n                    <path\n                        transform='scale(.26458)'\n                        id='path5588'\n                        d='m 1738.3694,290.45336 a 290.37688,290.37688 0 0 1 268.3994,-179.55952 290.37688,290.37688 0 0 1 5.8758,0.0595'\n                        style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                        color='#000'\n                        overflow='visible'\n                        fill='none'\n                        strokeWidth='6.633'\n                        strokeLinejoin='round'\n                    />\n                    <path\n                        transform='scale(.26458)'\n                        id='path5578'\n                        d='m 2103.6746,127.54094 a 290.37688,290.37688 0 0 1 193.3409,265.03704'\n                        style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                        color='#000'\n                        overflow='visible'\n                        fill='none'\n                        strokeWidth='6.633'\n                        strokeLinejoin='round'\n                    />\n                    <path\n                        transform='scale(.26458)'\n                        id='path5547'\n                        d='m 1748.9295,534.82816 a 290.37688,290.37688 0 0 0 257.8393,156.81941 290.37688,290.37688 0 0 0 5.8709,-0.0593'\n                        style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                        color='#000'\n                        overflow='visible'\n                        fill='none'\n                        strokeWidth='6.633'\n                        strokeLinejoin='round'\n                    />\n                    <path\n                        transform='scale(.26458)'\n                        id='path4189'\n                        d='m 1748.9295,534.82816 a 290.37688,290.37688 0 0 0 257.8393,156.81941 290.37688,290.37688 0 0 0 5.8709,-0.0593'\n                        style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                        color='#000'\n                        overflow='visible'\n                        fill='none'\n                        strokeWidth='6.633'\n                        strokeLinejoin='round'\n                    />\n                </defs>\n                <g id='layer1' transform='translate(51.512 4.77)'>\n                    <path d='m 99,13.3622 24,0 0,24 -24,0 z' id='path6746' fill='none' />\n                    <g id='prototyped' style={this.highLightMe('prototyped')}>\n                        <text\n                            id='text6729'\n                            y='6.362'\n                            x='61'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                            fill='#2b2b2b'\n                        >\n                            <tspan y='6.362' x='61' id='tspan6731'>\n                                PROTOTYPED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6748'\n                            d='m 118,16.3622 -4.18,0 c -0.42,-1.16 -1.52,-2 -2.82,-2 -1.3,0 -2.4,0.84 -2.82,2 l -4.18,0 c -1.1,0 -2,0.9 -2,2 l 0,14 c 0,1.1 0.9,2 2,2 l 14,0 c 1.1,0 2,-0.9 2,-2 l 0,-14 c 0,-1.1 -0.9,-2 -2,-2 z m -7,0 c 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 0,-0.55 0.45,-1 1,-1 z m -2,14 -4,-4 1.41,-1.41 2.59,2.58 6.59,-6.59 1.41,1.42 -8,8 z'\n                        />\n                    </g>\n                    <path d='m 224.5,133.8622 24,0 0,24 -24,0 z' id='path6762' fill='none' />\n                    <g id='published' style={this.highLightMe('published')}>\n                        <text\n                            id='text6524'\n                            y='125.476'\n                            x='207'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                        >\n                            <tspan y='125.476' x='207' id='tspan6526'>\n                                PUBLISHED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6764'\n                            d='m 240.5,144.8622 c 1.66,0 2.99,-1.34 2.99,-3 0,-1.66 -1.33,-3 -2.99,-3 -1.66,0 -3,1.34 -3,3 0,1.66 1.34,3 3,3 z m -8,0 c 1.66,0 2.99,-1.34 2.99,-3 0,-1.66 -1.33,-3 -2.99,-3 -1.66,0 -3,1.34 -3,3 0,1.66 1.34,3 3,3 z m 0,2 c -2.33,0 -7,1.17 -7,3.5 l 0,2.5 14,0 0,-2.5 c 0,-2.33 -4.67,-3.5 -7,-3.5 z m 8,0 c -0.29,0 -0.62,0.02 -0.97,0.05 1.16,0.84 1.97,1.97 1.97,3.45 l 0,2.5 6,0 0,-2.5 c 0,-2.33 -4.67,-3.5 -7,-3.5 z'\n                        />\n                    </g>\n                    <g id='created' style={this.highLightMe('created')}>\n                        <text\n                            id='text6520'\n                            y='282.362'\n                            x='68'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                        >\n                            <tspan y='282.362' x='68' id='tspan6522'>\n                                CREATED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6778'\n                            d='m 97,238.8622 c -1.1,0 -1.99,0.9 -1.99,2 l -0.01,16 c 0,1.1 0.89,2 1.99,2 l 12.01,0 c 1.1,0 2,-0.9 2,-2 l 0,-12 -6,-6 -8,0 z m 7,7 0,-5.5 5.5,5.5 -5.5,0 z'\n                        />\n                    </g>\n                    <path d='m 91,236.8622 24,0 0,24 -24,0 z' id='path6780' fill='none' />\n                    <g id='deprecated' style={this.highLightMe('deprecated')}>\n                        <text\n                            id='text6536'\n                            y='125.476'\n                            x='397.858'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                        >\n                            <tspan y='125.476' x='397.858' id='tspan6538'>\n                                DEPRECATED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6794'\n                            d='m 433.52944,97.811947 c 0,1.1 0.9,2 2,2 l 8,0 c 1.1,0 2,-0.9 2,-2 l 0,-12 -12,0 0,12 z m 13,-15 -3.5,0 -1,-1 -5,0 -1,1 -3.5,0 0,2 14,0 0,-2 z'\n                        />\n                        <path id='path6796' d='m 427.52944,78.811947 24,0 0,24.000003 -24,0 z' fill='none' />\n                    </g>\n                    <path d='m 427.52944,236.8622 24,0 0,24 -24,0 z' id='path6810' clipRule='evenodd' fill='none' />\n                    <g id='maintenance' style={this.highLightMe('maintenance')}>\n                        <text\n                            id='text6532'\n                            y='282.362'\n                            x='386.858'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                        >\n                            <tspan y='282.362' x='386.858' id='tspan6534'>\n                                MAINTENANCE\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6812'\n                            d='m 450.22944,255.8622 -9.1,-9.1 c 0.9,-2.3 0.4,-5 -1.5,-6.9 -2,-2 -5,-2.4 -7.4,-1.3 l 4.3,4.3 -3,3 -4.4,-4.3 c -1.2,2.4 -0.7,5.4 1.3,7.4 1.9,1.9 4.6,2.4 6.9,1.5 l 9.1,9.1 c 0.4,0.4 1,0.4 1.4,0 l 2.3,-2.3 c 0.5,-0.4 0.5,-1.1 0.1,-1.4 z'\n                        />\n                    </g>\n                    <g id='retired' style={this.highLightMe('retired')}>\n                        <text\n                            id='text6540'\n                            y='125.483'\n                            x='627.485'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                        >\n                            <tspan y='125.483' x='627.485' id='tspan6542'>\n                                RETIRED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6826'\n                            d='m 663.36667,89.811947 0,2 -13,0 0,-6 9,0 c 2.21,0 4,1.79 4,4 z m -20,3 0,2 6,0 0,2 8,0 0,-2 6,0 0,-2 -20,0 z m 5.14,-1.9 c 1.16,-1.19 1.14,-3.08 -0.04,-4.24 -1.19,-1.16 -3.08,-1.14 -4.24,0.04 -1.16,1.19 -1.14,3.08 0.04,4.24 1.19,1.16 3.08,1.14 4.24,-0.04 z'\n                        />\n                        <path id='path6828' d='m 641.36667,78.811947 24,0 0,24.000003 -24,0 z' fill='none' />\n                    </g>\n                    <g id='published_to_created' style={this.highLightMe('published_to_created')}>\n                        <path\n                            id='path6872'\n                            d='m 235.84375,184.86133 c -11.86654,31.99459 -35.12697,58.48216 -65.32031,74.38281 l -5.4624,15.71344 14.85695,3.63617 c 35.16928,-17.95415 62.42125,-48.3249 76.47461,-85.22656 l -15.28708,7.18109 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#065381'\n                        />\n                        <path\n                            id='path6985'\n                            d='m 178.61585,255.22337 -4.875,15.375 14.5,3.625'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            d='m 187.11585,249.22337 -4.875,15.375 14.5,3.625'\n                            id='path6987'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='created_to_published' style={this.highLightMe('created_to_published')}>\n                        <path\n                            id='path6850'\n                            d='m 202.80469,171.18359 c -8.60566,23.79669 -25.78994,43.52064 -48.1836,55.30469 l 15.33148,4.4495 -5.74163,15.30245 c 27.19915,-14.16065 48.15744,-37.93366 58.79687,-66.69335 l -4.08764,-14.98782 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#34b2e4'\n                        />\n                        <path\n                            d='m 200.07828,178.47337 15.66836,-6.25318 3.78013,13.89858'\n                            id='path6979'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            id='path6991'\n                            d='m 195.3937,187.48898 15.66836,-6.25318 3.78013,13.89858'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='prototyped_to_published' style={this.highLightMe('prototyped_to_published')}>\n                        <path\n                            id='path6874'\n                            d='m 181.42383,-4.0683594 5.18392,15.3553234 -15.14681,3.480614 c 26.97521,14.497097 48.38501,37.525806 60.88086,65.484375 l 16.41911,5.795641 4.09261,-14.231188 C 238.22018,39.231643 213.06477,12.507292 181.42383,-4.0683594 Z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#fe912a'\n                        />\n                        <path\n                            id='path6993'\n                            d='m 228.26421,71.982698 16.39604,5.833631 3.93328,-14.097941'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            d='m 224.76421,65.357698 16.39604,5.833631 3.93328,-14.097941'\n                            id='path6995'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='published_to_prototyped' style={this.highLightMe('published_to_prototyped')}>\n                        <path\n                            id='path6855'\n                            d='m 164.61328,27.712891 -16.76273,3.798407 6.57718,15.455499 c 19.64736,10.327117 35.3679,26.809879 44.75391,46.923828 l 6.94786,-12.105746 13.33339,3.763949 C 208.07457,60.73778 188.78631,40.399355 164.61328,27.712891 Z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#ffc95c'\n                        />\n                        <path\n                            id='path6997'\n                            d='m 163.43006,52.336437 -6.45235,-15.202795 16.61701,-3.535534'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            d='M 171.82695,57.993291 165.3746,42.790496 181.99161,39.254962'\n                            id='path6999'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='created_to_prototyped' style={this.highLightMe('created_to_prototyped')}>\n                        <path\n                            id='path6870'\n                            d='M 35.433594,-4.7226562 C -17.800688,22.43674 -51.366944,77.095386 -51.511719,136.85742 c 0.08726,60.42038 34.333636,115.59607 88.439453,142.48828 l -5.963174,-14.43529 14.818643,-3.6858 C -1.8626488,238.10436 -32.152993,189.83798 -32.251953,136.87891 -32.191581,84.271252 -2.3316563,36.239603 44.818359,12.90625 l 7.576833,-14.3582512 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#8b103e'\n                        />\n                        <path\n                            id='path7001'\n                            d='m 25.625,1.1122031 16.25,3 -7.125,13.7499999'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            d='m 16.375,7.1122031 16.25,2.9999999 -7.125,13.75'\n                            id='path7003'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='prototyped_to_created' style={this.highLightMe('prototyped_to_created')}>\n                        <path\n                            id='path6840'\n                            d='M 52.171875,26.720703 C 10.473112,47.61586 -15.897048,90.22032 -16,136.86133 c 0.06835,46.84095 26.630186,89.61173 68.585938,110.43945 l 18.169686,-5.17409 -8.489999,-14.63841 C 27.868397,210.36444 6.0894455,175.28511 6,136.86133 6.0597413,98.328986 27.932967,63.153267 62.464844,46.056641 l -14.466177,-4.2932 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#e34856'\n                        />\n                        <path\n                            id='path7005'\n                            d='m 39.421204,240.07329 17.677669,-4.94975 -7.778174,-14.49569'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            d='m 27.930719,230.8809 17.677669,-4.94975 -7.778174,-14.49569'\n                            id='path7007'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='deprecated_to_retired' style={this.highLightMe('deprecated_to_retired')}>\n                        <path\n                            id='rect7009'\n                            d='m 530.25049,110.51652 68.24164,0 9.89949,9.52539 -9.89949,9.40863 -68.24164,0 9.54594,-9.76218 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#5c5c5c'\n                            strokeWidth='6.016'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                        />\n                        <path\n                            id='path7016'\n                            d='m 589.97554,111.03345 9.31051,8.95242 -9.42988,8.89273'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                        <path\n                            d='m 581.28804,111.03345 9.31051,8.95242 -9.42988,8.89273'\n                            id='path7018'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                    </g>\n                    <g id='published_to_deprecated' style={this.highLightMe('published_to_deprecated')}>\n                        <path\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            d='m 306.25049,110.51652 68.24164,0 9.89949,9.52539 -9.89949,9.40863 -68.24164,0 9.54594,-9.76218 z'\n                            id='path7020'\n                            color='#000'\n                            overflow='visible'\n                            fill='#5c5c5c'\n                            strokeWidth='6.016'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                        />\n                        <path\n                            d='m 365.97554,111.03345 9.31051,8.95242 -9.42988,8.89273'\n                            id='path7022'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                        <path\n                            id='path7024'\n                            d='m 357.28804,111.03345 9.31051,8.95242 -9.42988,8.89273'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                    </g>\n                    <g id='published_to_maintenance' style={this.highLightMe('published_to_maintenance')}>\n                        <path\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            d='m 306.92162,149.0749 92.7941,75.49823 1.41692,13.66474 -13.63383,0.80053 -92.79411,-75.49822 13.59185,-1.29876 z'\n                            id='path7026'\n                            color='#000'\n                            overflow='visible'\n                            fill='#65daad'\n                            strokeWidth='6.016'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                        />\n                        <path\n                            d='m 392.87565,219.47284 1.33665,12.84698 -12.94218,0.70939'\n                            id='path7028'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                        <path\n                            id='path7030'\n                            d='m 386.23855,213.86735 1.33664,12.84698 -12.94218,0.70939'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                    </g>\n                    <g\n                        id='maintenance_to_published'\n                        transform='rotate(180 338.919 207.057)'\n                        style={this.highLightMe('maintenance_to_published')}\n                    >\n                        <path\n                            id='path7039'\n                            d='m 306.92162,149.0749 92.7941,75.49823 1.41692,13.66474 -13.63383,0.80053 -92.79411,-75.49822 13.59185,-1.29876 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#64d0da'\n                            strokeWidth='6.016'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                        />\n                        <path\n                            id='path7041'\n                            d='m 392.87565,219.47284 1.33665,12.84698 -12.94218,0.70939'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                        <path\n                            d='m 386.23855,213.86735 1.33664,12.84698 -12.94218,0.70939'\n                            id='path7043'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                    </g>\n                    <g id='maintenance_to_deprecated' style={this.highLightMe('maintenance_to_deprecated')}>\n                        <path\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            d='m 427.85405,225.05409 0,-68.24164 9.52539,-9.89949 9.40863,9.89949 0,68.24164 -9.76218,-9.54594 z'\n                            id='path7045'\n                            color='#000'\n                            overflow='visible'\n                            fill='#5c5c5c'\n                            strokeWidth='6.016'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                        />\n                        <path\n                            d='m 428.37098,165.32904 8.95242,-9.31051 8.89273,9.42988'\n                            id='path7047'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                        <path\n                            id='path7049'\n                            d='m 428.37098,174.01654 8.95242,-9.31051 8.89273,9.42988'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                    </g>\n                </g>\n            </svg>\n        );\n    }\n}\nLifeCycleImage.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(LifeCycleImage);\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nimport API from 'AppData/api';\nimport { ScopeValidation, resourceMethod, resourcePath } from 'AppData/ScopeValidation';\nimport ApiPermissionValidation from 'AppData/ApiPermissionValidation';\nimport Alert from 'AppComponents/Shared/Alert';\nimport LifeCycleImage from './LifeCycleImage';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nconst styles = theme => ({\n    buttonsWrapper: {\n        marginTop: 40,\n    },\n    stateButton: {\n        marginRight: theme.spacing.unit,\n    },\n});\n\n/**\n *\n *\n * @class LifeCycleUpdate\n * @extends {Component}\n */\nclass LifeCycleUpdate extends Component {\n    constructor(props) {\n        super(props);\n        this.updateLifeCycleState = this.updateLifeCycleState.bind(this);\n        this.api = new API();\n        this.state = {\n            newState: null,\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} apiUUID\n     * @param {*} action\n     * @memberof LifeCycleUpdate\n     */\n    updateLCStateOfAPI(apiUUID, action) {\n        let promisedUpdate;\n        const lifecycleChecklist = this.props.checkList.map(item => item.value + ':' + item.checked);\n        if (lifecycleChecklist.length > 0) {\n            promisedUpdate = this.api.updateLcState(apiUUID, action, lifecycleChecklist);\n        } else {\n            promisedUpdate = this.api.updateLcState(apiUUID, action);\n        }\n        promisedUpdate\n            .then(response => {\n                /* TODO: Handle IO erros ~tmkb */\n                this.props.handleUpdate(true);\n                let newState = response.body.lifecycleState.state;\n                this.context.updateAPI();\n                this.setState({ newState });\n                const { intl } = this.props;\n\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.LifeCycle.LifeCycleUpdate.success',\n                    defaultMessage: 'Lifecycle state updated successfully',\n                }));\n                /* TODO: add i18n ~tmkb */\n            })\n            .catch(error_response => {\n                console.log(error_response);\n                Alert.error(JSON.stringify(error_response.message));\n            });\n    }\n\n    /**\n     *\n     *\n     * @param {*} event\n     * @memberof LifeCycleUpdate\n     */\n    updateLifeCycleState(event) {\n        event.preventDefault();\n        let action = event.currentTarget.getAttribute('data-value');\n        const apiUUID = this.props.api.id;\n        const { privateJetModeEnabled } = this.props;\n        this.updateLCStateOfAPI(apiUUID, action);\n    }\n\n    render() {\n        const { api, lcState, classes, theme, handleChangeCheckList, checkList } = this.props;\n        const { newState } = this.state;\n        const is_workflow_pending = api.workflowStatus && api.workflowStatus.toLowerCase() === 'pending';\n        const lcMap = new Map();\n        lcMap.set(\"Published\", \"Publish\");\n        lcMap.set(\"Prototyped\", \"Deploy as a prototype\");\n        lcMap.set(\"Deprecated\", \"Deprecate\");\n        lcMap.set(\"Blocked\", \"Block\");\n        lcMap.set(\"Created\", \"Create\");\n        lcMap.set(\"Retired\", \"Retire\");\n        return (\n            <Grid container>\n                {is_workflow_pending ? (\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\">\n                            <FormattedMessage id='Apis.Details.LifeCycle.LifeCycleUpdate.pending' defaultMessage='Pending lifecycle state change.' />\n                        </Typography>\n                        <Typography>\n                            <FormattedMessage id='Apis.Details.LifeCycle.LifeCycleUpdate.adjective' defaultMessage='adjective' />\n                        </Typography>\n                    </Grid>\n                ) : (\n                        <Grid item xs={12}>\n                            {theme.custom.lifeCycleImage ? (\n                                <img src={theme.custom.lifeCycleImage} alt=\"Lifecycle image\" />\n                            ) : (\n                                    <LifeCycleImage lifeCycleStatus={newState || api.lifeCycleStatus} />\n                                )}\n                        </Grid>\n                    )}\n                <Grid item xs={12}>\n                    {!is_workflow_pending && (\n                        <FormGroup row>\n                            {checkList.map((checkItem, index) => (\n                                <FormControlLabel\n                                    key={index}\n                                    control={\n                                        <Checkbox\n                                            checked={checkList[index].checked}\n                                            onChange={handleChangeCheckList(index)}\n                                            value={checkList[index].value}\n                                        />\n                                    }\n                                    label={checkList[index].label}\n                                />\n                            ))}\n                        </FormGroup>\n                    )}\n                    <ScopeValidation resourcePath={resourcePath.API_CHANGE_LC} resourceMethod={resourceMethod.POST}>\n                        <div className={classes.buttonsWrapper}>\n                            {is_workflow_pending ? (\n                                <div className=\"btn-group\" role=\"group\">\n                                    <input\n                                        type=\"button\"\n                                        className=\"btn btn-primary wf-cleanup-btn\"\n                                        defaultValue=\"Delete pending lifecycle state change request\"\n                                    />\n                                </div>\n                            ) : (\n                                    lcState.availableTransitions.map(\n                                        transition_state =>\n                                            transition_state.event !== lcMap.get(lcState.state) && (\n                                                <Button\n                                                    variant=\"outlined\"\n                                                    className={classes.stateButton}\n                                                    key={transition_state.event}\n                                                    data-value={transition_state.event}\n                                                    onClick={this.updateLifeCycleState}\n                                                >\n                                                    {transition_state.event}\n                                                </Button>\n                                            ),\n                                    ) /* Skip when transitions available for current state , this occurs in states where have allowed re-publishing in prototype and published sates */\n                                )}\n                        </div>\n                    </ScopeValidation>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nLifeCycleUpdate.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nLifeCycleUpdate.contextType = ApiContext;\n\nexport default withStyles(styles, { withTheme: true })(injectIntl(LifeCycleUpdate));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport List from '@material-ui/core/List';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Person from '@material-ui/icons/Person';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { FormattedMessage } from 'react-intl';\n\nconst styles = theme => ({\n    firstCol: {\n        width: 100,\n    },\n    personIcon: {\n        fontSize: theme.typography.fontSize,\n    },\n    avatar: {\n        width: 25,\n        height: 25,\n    },\n});\nconst LifeCycleHistory = props => {\n    const { classes } = props;\n    return (\n        <Paper>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell className={classes.firstCol}>\n                            <FormattedMessage id='Apis.Details.LifeCycle.LifeCycleHistory.user' defaultMessage='User' />\n                        </TableCell>\n                        <TableCell>\n                            <FormattedMessage id='Apis.Details.LifeCycle.LifeCycleHistory.action' defaultMessage='Action' />\n                        </TableCell>\n                        <TableCell>\n                            <FormattedMessage id='Apis.Details.LifeCycle.LifeCycleHistory.time' defaultMessage='Time' />\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {props.lcHistory.map(\n                        entry =>\n                            entry.previousState && (\n                                <TableRow key={entry.postState}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        <Avatar className={classes.avatar}>\n                                            <Person className={classes.personIcon} />\n                                        </Avatar>\n                                        <div>{entry.user}</div>\n                                    </TableCell>\n                                    <TableCell>\n                                        {<FormattedMessage\n                                            id='Apis.Details.LifeCycle.LifeCycleHistory.lifecycle.state.history'\n                                            defaultMessage='LC has changed from {previous} to {post}'\n                                            values={{ previous: entry.previousState, post: entry.postState }}\n                                        />}\n                                    </TableCell>\n                                    <TableCell>{moment(entry.updatedTime).fromNow()}</TableCell>\n                                </TableRow>\n                            ),\n                    )}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n};\nLifeCycleHistory.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\nexport default withStyles(styles)(LifeCycleHistory);\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport Api from 'AppData/api';\nimport { Progress } from 'AppComponents/Shared';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\n\nimport LifeCycleUpdate from './LifeCycleUpdate';\nimport LifeCycleHistory from './LifeCycleHistory';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n        width: theme.custom.contentAreaWidth,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    historyHead: {\n        marginTop: theme.spacing.unit * 2,\n        marginBottom: theme.spacing.unit * 2,\n    },\n});\n/**\n *\n *\n * @class LifeCycle\n * @extends {Component}\n */\nclass LifeCycle extends Component {\n    /**\n     * Creates an instance of LifeCycle.\n     * @param {Object} props\n     * @memberof LifeCycle\n     */\n    constructor(props) {\n        super(props);\n        this.api = new Api();\n        this.state = {\n            lcHistory: null,\n            checkList: [],\n        };\n        this.updateData = this.updateData.bind(this);\n        this.handleChangeCheckList = this.handleChangeCheckList.bind(this);\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @memberof LifeCycle\n     */\n    componentDidMount() {\n        this.updateData();\n    }\n\n    handleChangeCheckList = index => (event, checked) => {\n        const checkList = this.state.checkList;\n        checkList[index].checked = checked;\n        this.setState({ checkList });\n    };\n\n    /**\n     *\n     *\n     * @memberof LifeCycle\n     */\n    updateData() {\n        const { api } = this.props;\n        const promised_api = Api.get(api.id);\n        // const promised_tiers = Api.policies('api');\n        const promised_lcState = this.api.getLcState(api.id);\n        let privateJetModeEnabled = false;\n\n        const promised_lcHistory = this.api.getLcHistory(api.id);\n        // const promised_labels = this.api.labels();\n        Promise.all([promised_api, promised_lcState, promised_lcHistory])\n            .then(response => {\n                const api = response[0];\n                const lcState = response[1].body;\n                const lcHistory = response[2].body.list;\n\n                if (privateJetModeEnabled) {\n                    if (!api.hasOwnGateway) {\n                        const transitions = lcState.availableTransitionBeanList;\n                        const PUBLISHED = 'Published';\n\n                        for (const transition of transitions) {\n                            if (transition.targetState === PUBLISHED && lcState.state !== PUBLISHED) {\n                                const publish_in_private_jet_mode = {\n                                    event: 'Publish In Private Jet Mode',\n                                    targetState: 'Published In Private Jet Mode',\n                                };\n                                lcState.availableTransitionBeanList.push(publish_in_private_jet_mode);\n                            }\n                        }\n                    }\n                }\n                // Creating checklist\n                const checkList = [];\n                let index = 0;\n                for (const item of lcState.checkItems) {\n                    checkList.push({\n                        index,\n                        label: item.name,\n                        value: item.name,\n                        checked: false,\n                    });\n                    index++;\n                }\n                this.setState({\n                    api,\n                    lcState,\n                    lcHistory,\n                    privateJetModeEnabled,\n                    checkList,\n                });\n            })\n            .catch(error => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const status = error.status;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                }\n            });\n    }\n    /**\n     *\n     *\n     * @returns\n     * @memberof LifeCycle\n     */\n    render() {\n        const { classes } = this.props;\n        const { api, lcState, privateJetModeEnabled, checkList, lcHistory } = this.state;\n\n        if (!lcState) {\n            return <Progress />;\n        }\n        return (\n            <div className={classes.root}>\n                <div className={classes.titleWrapper}>\n                    <Typography variant=\"h4\" align=\"left\" className={classes.mainTitle}>\n                        <FormattedMessage id='Apis.Details.LifeCycle.LifeCycle.lifecycle' defaultMessage='Lifecycle' />\n                    </Typography>\n                </div>\n                <div className={classes.contentWrapper}>\n                    <Grid container>\n                        <Grid item xs={12}>\n                            <LifeCycleUpdate\n                                handleUpdate={this.updateData}\n                                lcState={lcState}\n                                checkList={checkList}\n                                handleChangeCheckList={this.handleChangeCheckList}\n                                api={api}\n                                privateJetModeEnabled={privateJetModeEnabled}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            {lcHistory.length > 1 && (\n                                <div>\n                                    <Typography variant=\"h6\" gutterBottom className={classes.historyHead}>\n                                        <FormattedMessage id='Apis.Details.LifeCycle.LifeCycle.history' defaultMessage='History' />\n                                    </Typography>\n                                    <LifeCycleHistory lcHistory={lcHistory} />\n                                </div>\n                            )}\n                        </Grid>\n                    </Grid>\n                </div>\n            </div>\n        );\n    }\n}\n\nLifeCycle.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(LifeCycle);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport intl, { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport green from '@material-ui/core/colors/green';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Icon from '@material-ui/core/Icon';\nimport TextField from '@material-ui/core/TextField';\nimport Dropzone from 'react-dropzone';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport Api from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport APIValidation from 'AppData/APIValidation';\nimport Alert from 'AppComponents/Shared/Alert';\n\nconst styles = theme => ({\n    button: {\n        marginLeft: theme.spacing.unit * 2,\n        textTransform: theme.custom.leftMenuTextStyle,\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addNewOther: {\n        padding: theme.spacing.unit * 2,\n    },\n    radioGroup: {\n        display: 'flex',\n        flexDirection: 'row',\n        width: 300,\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing.unit,\n    },\n    group: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    formControlFirst: {\n        display: 'block',\n    },\n    formControl: {\n        display: 'block',\n        marginTop: 20,\n    },\n    formControlLabel: {\n        background: '#efefef',\n        borderRadius: 5,\n        paddingRight: 10,\n        marginLeft: 0,\n        marginTop: 10,\n    },\n    typeTextWrapper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    FormControlOdd: {\n        padding: 0,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    acceptDrop: {\n        backgroundColor: green[50],\n    },\n    dropzone: {\n        border: '1px dashed ' + theme.palette.primary.main,\n        borderRadius: '5px',\n        cursor: 'pointer',\n        height: 75,\n        padding: `${theme.spacing.unit * 2}px 0px`,\n        position: 'relative',\n        textAlign: 'center',\n        width: '100%',\n        margin: '10px 0',\n    },\n    dropZoneWrapper: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& span.material-icons': {\n            color: theme.palette.primary.main,\n        },\n    },\n    uploadedFile: {\n        fontSize: 11,\n    },\n});\n\nclass CreateEditForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: 'HOWTO',\n            sourceType: 'INLINE',\n            name: '',\n            summary: '',\n            sourceUrl: '',\n            file: null,\n            disableName: false,\n            otherTypeName: null,\n            nameValidity: true,\n            urlValidity: null,\n        };\n    }\n\n    changeType = (e) => {\n        const { value } = e.target;\n        if (value === 'PUBLIC_FORUM' || value === 'SUPPORT_FORUM') {\n            this.setState({ type: 'URL' });\n        }\n        this.setState({ type: value });\n    };\n    changeSource = (e) => {\n        const { value } = e.target;\n        this.setState({ sourceType: value });\n    };\n    setDisable = (item) => {\n        const { type } = this.state;\n        if (item === 'INLINE' || item === 'MARKDOWN' || item === 'FILE') {\n            if (type === 'PUBLIC_FORUM' || type === 'SUPPORT_FORUM') {\n                return true;\n            }\n        }\n    };\n    handleChange = name => (e) => {\n        const { value } = e.target;\n        if (name === 'name') {\n            this.setState({ name: value });\n        } else if (name === 'summary') {\n            this.setState({ summary: value });\n        } else if (name === 'sourceUrl') {\n            this.setState({ sourceUrl: value });\n        } else if (name === 'otherTypeName') {\n            this.setState({ otherTypeName: value });\n        }\n    };\n\n    onDrop = (acceptedFile) => {\n        this.setState({ file: acceptedFile });\n    };\n\n    addDocument = (apiId) => {\n        const { apiType } = this.props;\n        const restAPI = apiType === Api.CONSTS.APIProduct ? new APIProduct() : new Api();\n        const {\n            name, type, summary, sourceType, sourceUrl, file, otherTypeName,\n        } = this.state;\n        const docPromise = restAPI.addDocument(apiId, {\n            name,\n            type,\n            summary,\n            sourceType,\n            visibility: 'API_LEVEL',\n            sourceUrl,\n            otherTypeName,\n            inlineContent: '',\n        });\n        return { docPromise, file };\n    };\n    updateDocument = (apiId) => {\n        const restAPI = new Api();\n        const {\n            name, type, summary, sourceType, sourceUrl, file, otherTypeName,\n        } = this.state;\n        const { docId } = this.props;\n        const docPromise = restAPI.updateDocument(apiId, docId, {\n            name,\n            type,\n            summary,\n            sourceType,\n            visibility: 'API_LEVEL',\n            sourceUrl,\n            otherTypeName,\n            inlineContent: '',\n        });\n        return { docPromise, file };\n    };\n    getDocument() {\n        const { apiId, docId, apiType } = this.props;\n        const restAPI = apiType === Api.CONSTS.APIProduct ? new APIProduct() : new Api();\n        if (docId && apiId) {\n            const docPromise = restAPI.getDocument(apiId, docId);\n            docPromise\n                .then((doc) => {\n                    const {\n                        name, type, summary, sourceType, sourceUrl, otherTypeName,\n                    } = doc.body;\n                    this.setState({\n                        name,\n                        type,\n                        summary,\n                        sourceType,\n                        sourceUrl,\n                        otherTypeName,\n                    });\n                })\n                .catch((error) => {\n                    if (process.env.NODE_ENV !== 'production') {\n                        console.log(error);\n                    }\n                    const { status } = error;\n                    if (status === 404) {\n                        this.setState({ apiNotFound: true });\n                    }\n                });\n        }\n    }\n    validate(field, value) {\n        if (field === 'url') {\n            const urlValidity = value ? APIValidation.url.validate(value).error : null;\n            this.setState({ urlValidity : urlValidity });\n        } else if (field === 'name') {\n            if (value) {\n                const promise = APIValidation.apiDocument.validate({id: this.props.apiId, name: value});\n                promise.then(() => {\n                    this.setState({ nameValidity: false })\n                }).catch(error => {\n                    if (error.status === 404) {\n                        this.setState({ nameValidity: true });\n                    } else {\n                        Alert.error('Error when validating document name');\n                    }\n                })\n            } else {\n                this.setState({ nameValidity: true })\n            }\n        }\n    }\n    componentDidMount() {\n        this.getDocument();\n        const { apiId, docId } = this.props;\n        if (apiId && docId) {\n            this.setState({ disableName: true });\n        }\n    }\n    render() {\n        const {\n            name, type, summary, sourceType, sourceUrl, file, disableName, otherTypeName, urlValidity, nameValidity\n        } = this.state;\n        const { classes } = this.props;\n        return (\n            <div className={classes.addNewOther}>\n                <FormControl margin='normal' className={classes.FormControlOdd}>\n                    <TextField\n                        fullWidth\n                        InputProps={{\n                            onBlur: ({ target: { value } }) => {\n                                this.validate(\"name\", value);\n                            },\n                        }}\n                        label={\n                            <FormattedMessage\n                                id='Apis.Details.Documents.CreateEditForm.document.name'\n                                defaultMessage='Name *'\n                            />\n                        }\n                        helperText={ nameValidity ?\n                            <FormattedMessage\n                                id='Apis.Details.Documents.CreateEditForm.document.name.helper.text'\n                                defaultMessage='Provide the name for the document'\n                            />\n                            :\n                            <FormattedMessage\n                                id='Apis.Details.Documents.CreateEditForm.duplicate.document.name.helper.text'\n                                defaultMessage='Duplicate document name'\n                            />\n                        }\n                        type='text'\n                        variant='outlined'\n                        name='name'\n                        margin='normal'\n                        value={name}\n                        onChange={this.handleChange('name')}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        autoFocus\n                        disabled={disableName}\n                        error={!nameValidity}\n                    />\n                </FormControl>\n                <FormControl margin='normal' className={classes.FormControlOdd}>\n                    <TextField\n                        fullWidth\n                        multiline\n                        margin='normal'\n                        variant='outlined'\n                        label={\n                            <FormattedMessage\n                                id='Apis.Details.Documents.CreateEditForm.document.summary'\n                                defaultMessage='Summary *'\n                            />\n                        }\n                        helperText={\n                            <FormattedMessage\n                                id='Apis.Details.Documents.CreateEditForm.document.summary.helper.text'\n                                defaultMessage='Provide a brief description for the document'\n                            />\n                        }\n                        type='text'\n                        name='summary'\n                        margin='normal'\n                        value={summary}\n                        onChange={this.handleChange('summary')}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                </FormControl>\n                <FormControl component='fieldset' className={classes.formControlFirst}>\n                    <FormLabel component='legend'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.CreateEditForm.document.create.type'\n                            defaultMessage='Type'\n                        />\n                    </FormLabel>\n                    <RadioGroup\n                        aria-label='Type'\n                        name='type'\n                        className={classes.group}\n                        value={type}\n                        onChange={this.changeType}\n                    >\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            value='HOWTO'\n                            control={<Radio />}\n                            label={\n                                <div className={classes.typeTextWrapper}>\n                                    <Icon>help_outline</Icon>\n                                    <div>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.CreateEditForm.document.create.type.how.to'\n                                            defaultMessage='How To'\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        />\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            value='SAMPLES'\n                            control={<Radio />}\n                            label={\n                                <div className={classes.typeTextWrapper}>\n                                    <Icon>code</Icon>\n                                    <div>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.CreateEditForm.document.create.type.sample'\n                                            defaultMessage='Sample &amp; SDK'\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        />\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            value='PUBLIC_FORUM'\n                            control={<Radio />}\n                            label={\n                                <div className={classes.typeTextWrapper}>\n                                    <Icon>forum</Icon>\n                                    <div>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.CreateEditForm.document.create.type.public.forum'\n                                            defaultMessage='Public Forum'\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        />\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            value='SUPPORT_FORUM'\n                            control={<Radio />}\n                            label={\n                                <div className={classes.typeTextWrapper}>\n                                    <Icon>forum</Icon>\n                                    <div>\n                                        <FormattedMessage\n                                            id={\n                                                'Apis.Details.Documents.CreateEditForm.document.create.type.support.' +\n                                                'forum'\n                                            }\n                                            defaultMessage='Support Forum'\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        />\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            value='OTHER'\n                            control={<Radio />}\n                            label={\n                                <div className={classes.typeTextWrapper}>\n                                    <Icon>video_label</Icon>\n                                    <div>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.CreateEditForm.document.create.type.other'\n                                            defaultMessage='Other'\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        />\n                    </RadioGroup>\n                </FormControl>\n                {type === 'OTHER' && (\n                    <FormControl margin='normal' className={classes.FormControlOdd}>\n                        <TextField\n                            fullWidth\n                            label={\n                                <FormattedMessage\n                                    id={\n                                        'Apis.Details.Documents.CreateEditForm.document.create.type.other.document.' +\n                                        'category'\n                                    }\n                                    defaultMessage='Other Document Category *'\n                                />\n                            }\n                            helperText={\n                                <FormattedMessage\n                                    id={\n                                        'Apis.Details.Documents.CreateEditForm.document.create.type.other.document.' +\n                                        'category.helper.text'\n                                    }\n                                    defaultMessage='Provide the document category'\n                                />\n                            }\n                            type='text'\n                            name='otherTypeName'\n                            margin='normal'\n                            value={otherTypeName}\n                            variant='outlined'\n                            onChange={this.handleChange('otherTypeName')}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                    </FormControl>\n                )}\n                <FormControl component='fieldset' className={classes.formControl}>\n                    <FormLabel component='legend'>\n                        <FormattedMessage id='Apis.Details.Documents.CreateEditForm.source' defaultMessage='Source' />\n                    </FormLabel>\n                    <RadioGroup\n                        aria-label='Source'\n                        name='sourceType'\n                        className={classes.group}\n                        value={sourceType}\n                        onChange={this.changeSource}\n                    >\n                        <FormControlLabel\n                            disabled={this.setDisable('INLINE')}\n                            value='INLINE'\n                            control={<Radio />}\n                            label={\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.inline'\n                                    defaultMessage='Inline'\n                                />\n                            }\n                        />\n                        <FormControlLabel\n                            disabled={this.setDisable('MARKDOWN')}\n                            value='MARKDOWN'\n                            control={<Radio />}\n                            label={\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.markdown'\n                                    defaultMessage='Markdown'\n                                />\n                            }\n                        />\n                        <FormControlLabel\n                            disabled={this.setDisable('URL')}\n                            value='URL'\n                            control={<Radio />}\n                            label={\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.url'\n                                    defaultMessage='URL'\n                                />\n                            }\n                        />\n                        <FormControlLabel\n                            disabled={this.setDisable('FILE')}\n                            value='FILE'\n                            control={<Radio />}\n                            label={\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.file'\n                                    defaultMessage='File'\n                                />\n                            }\n                        />\n                    </RadioGroup>\n                </FormControl>\n                {sourceType === 'URL' && (\n                    <FormControl margin='normal' className={classes.FormControlOdd}>\n                        <TextField\n                            fullWidth\n                            InputProps={{\n                                onBlur: ({ target: { value } }) => {\n                                    this.validate('url', value);\n                                },\n                            }}\n                            margin='normal'\n                            label={\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.url.url'\n                                    defaultMessage='URL'\n                                />\n                            }\n                            helperText={ urlValidity ?\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.url.helper.text.error'\n                                    defaultMessage='Enter a valid URL to the source'\n                                />\n                                :\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.url.helper.text'\n                                    defaultMessage='Provide the URL to the source'\n                                />\n                            }\n                            type='text'\n                            name='sourceUrl'\n                            margin='normal'\n                            value={sourceUrl}\n                            onChange={this.handleChange('sourceUrl')}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            error={urlValidity}\n                        />\n                    </FormControl>\n                )}\n                {sourceType === 'FILE' && (\n                    <Dropzone\n                        multiple={false}\n                        accept='application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/pdf'\n                        className={classes.dropzone}\n                        activeClassName={classes.acceptDrop}\n                        rejectClassName={classes.rejectDrop}\n                        onDrop={(dropFile) => {\n                            this.onDrop(dropFile);\n                        }}\n                    >\n                        {({ getRootProps, getInputProps }) => (\n                            <div {...getRootProps()}>\n                                <input {...getInputProps()} />\n                                <div className={classes.dropZoneWrapper}>\n                                    <Icon className={classes.dropIcon} style={{ fontSize: 56 }}>\n                                        cloud_upload\n                                    </Icon>\n                                    {file && file.length > 0 && (\n                                        <div className={classes.uploadedFile}>\n                                            <Icon>file</Icon> {file[0].name}\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                        )}\n                    </Dropzone>\n                )}\n                {(sourceType === 'INLINE' || sourceType === 'MARKDOWN') && (\n                    <InlineMessage type='info' height={60}>\n                        <div className={classes.contentWrapper}>\n                            <Typography component='p' className={classes.content}>\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.document.content.info'\n                                    defaultMessage={\n                                        'Please save the document. The content can be edited in the next ' + 'step.'\n                                    }\n                                />\n                            </Typography>\n                        </div>\n                    </InlineMessage>\n                )}\n            </div>\n        );\n    }\n}\nCreateEditForm.defaultProps = {\n    apiId: null,\n    docId: null,\n};\nCreateEditForm.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    docId: PropTypes.shape({}),\n    apiId: PropTypes.shape({}),\n    apiType: PropTypes.oneOf([Api.CONSTS.API, Api.CONSTS.APIProduct]).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(CreateEditForm));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FormattedMessage } from 'react-intl';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nfunction GoToEdit(props) {\n    const { doc } = props;\n    const [open, setOpen] = React.useState(true);\n    const { api, isAPIProduct } = useContext(APIContext);\n    const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n    const listingPath = `/${urlPrefix}/${api.id}/documents`;\n    let docContentEditPath = null;\n    if (doc && doc.body && doc.body.documentId) {\n        docContentEditPath = `/${urlPrefix}/${api.id}/documents/${doc.body.documentId}/edit-content`;\n    }\n\n    console.info('printing doc', doc);\n    function handleClose() {\n        setOpen(false);\n    }\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n        >\n            <DialogTitle id='alert-dialog-title'>\n                {' '}\n                <FormattedMessage\n                    id='Apis.Details.Documents.GoToEdit.title'\n                    defaultMessage='Document Created Successfully'\n                />\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id='alert-dialog-description'>\n                    <FormattedMessage\n                        id='Apis.Details.Documents.GoToEdit.description'\n                        defaultMessage='You can add content to the document or go back to the document listing page.'\n                    />\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Link\n                    to={{\n                        pathname: docContentEditPath,\n                        state: { doc: doc.body },\n                    }}\n                >\n                    <Button color='primary'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.GoToEdit.add.content'\n                            defaultMessage='Add Content'\n                        />\n                    </Button>\n                </Link>\n                <Link to={listingPath}>\n                    <Button color='primary' autoFocus>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.GoToEdit.back.to.listing'\n                            defaultMessage='Back to Listing'\n                        />\n                    </Button>\n                </Link>\n            </DialogActions>\n        </Dialog>\n    );\n}\nGoToEdit.propTypes = {\n    doc: PropTypes.shape({}).isRequired,\n};\nexport default GoToEdit;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useRef, useContext, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Api from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport CreateEditForm from './CreateEditForm';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport GoToEdit from './GoToEdit';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    titleLink: {\n        color: theme.palette.primary.main,\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing.unit * 2,\n        marginBottom: theme.spacing.unit * 3,\n    },\n    addNewHeader: {\n        padding: theme.spacing.unit * 2,\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing.unit * 2,\n    },\n    button: {\n        marginLeft: theme.spacing.unit * 2,\n        textTransform: theme.custom.leftMenuTextStyle,\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n});\n\nfunction Create(props) {\n    const { api, isAPIProduct } = useContext(APIContext);\n    const [newDoc, setNewDoc] = useState(null);\n    const {\n        classes, intl, apiType, history,\n    } = props;\n    const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n    const listingPath = `/${urlPrefix}/${api.id}/documents`;\n    const restAPI = apiType === Api.CONSTS.APIProduct ? new APIProduct() : new Api();\n    let createEditForm = useRef(null);\n\n    const addDocument = (apiId) => {\n        const promiseWrapper = createEditForm.addDocument(apiId);\n        promiseWrapper.docPromise\n            .then((doc) => {\n                const { documentId, name } = doc.body;\n                if (promiseWrapper.file && documentId) {\n                    const filePromise = restAPI.addFileToDocument(apiId, documentId, promiseWrapper.file[0]);\n                    filePromise\n                        .then((doc) => {\n                            Alert.info(`${name} ${intl.formatMessage({\n                                id: 'Apis.Details.Documents.Create.successful.file.upload.message',\n                                defaultMessage: 'File uploaded successfully.',\n                            })}`);\n                            props.getDocumentsList();\n                            history.push(listingPath);\n                        })\n                        .catch((error) => {\n                            if (process.env.NODE_ENV !== 'production') {\n                                console.log(error);\n                                Alert.error(intl.formatMessage({\n                                    id: 'Apis.Details.Documents.Create.markdown.editor.upload.error',\n                                    defaultMessage: 'Error uploading the file',\n                                }));\n                            }\n                        });\n                } else {\n                    Alert.info(`${doc.body.name} ${intl.formatMessage({\n                        id: 'Apis.Details.Documents.Create.markdown.editor.success',\n                        defaultMessage: ' added successfully.',\n                    })}`);\n                    setNewDoc(doc);\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Documents.Create.markdown.editor.add.error',\n                        defaultMessage: 'Error adding the document',\n                    }));\n                }\n            });\n    };\n    return (\n        <React.Fragment>\n            <Grid container spacing={3}>\n                <Grid item sm={12} md={12} />\n                {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n                <Grid item sm={0} md={0} lg={2} />\n                <Grid item sm={12} md={12} lg={8}>\n                    <Grid container spacing={5}>\n                        <Grid item md={12}>\n                            <div className={classes.titleWrapper}>\n                                <Link to={listingPath} className={classes.titleLink}>\n                                    <Typography variant='h5' align='left' className={classes.mainTitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.Create.heading'\n                                            defaultMessage='Documents'\n                                        />\n                                    </Typography>\n                                </Link>\n                                <Icon>keyboard_arrow_right</Icon>\n                                <Typography variant='h5'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Documents.Create.title'\n                                        defaultMessage='Add New Document'\n                                    />\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item md={12}>\n                            <Paper elevation={0}>\n                                <CreateEditForm\n                                    innerRef={(node) => {\n                                        createEditForm = node;\n                                    }}\n                                    apiType={apiType}\n                                    apiId={api.id}\n                                />\n                                <Divider />\n\n                                <div className={classes.addNewOther}>\n                                    <Button variant='contained' color='primary' onClick={() => addDocument(api.id)}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.Create.markdown.editor.add.document.button'\n                                            defaultMessage='Add Document'\n                                        />\n                                    </Button>\n                                    <Button className={classes.button} onClick={() => history.push(listingPath)}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.Create.markdown.editor.add.document.cancel.button'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </div>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            {newDoc && <GoToEdit doc={newDoc} />}\n        </React.Fragment>\n    );\n}\n\nCreate.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.func.isRequired,\n    apiType: PropTypes.oneOf([Api.CONSTS.API, Api.CONSTS.APIProduct]).isRequired,\n};\n\nexport default injectIntl(withRouter(withStyles(styles)(Create)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useContext } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport ReactMarkdown from 'react-markdown';\nimport MonacoEditor from 'react-monaco-editor';\nimport Api from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst styles = {\n    appBar: {\n        position: 'relative',\n    },\n    flex: {\n        flex: 1,\n    },\n    popupHeader: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    splitWrapper: {\n        padding: 0,\n    },\n    docName: {\n        alignItems: 'center',\n        display: 'flex',\n    },\n    markdownViewWrapper: {\n        height: '100vh',\n        overflowY: 'auto',\n    },\n    button: {\n        height: 30,\n        marginLeft: 30,\n    },\n};\n\nfunction Transition(props) {\n    return <Slide direction='up' {...props} />;\n}\n\nfunction MarkdownEditor(props) {\n    const { intl, showAtOnce, history } = props;\n    const { api, isAPIProduct } = useContext(APIContext);\n\n    const [open, setOpen] = useState(showAtOnce);\n    const [code, setCode] = useState(intl.formatMessage({\n        id: 'documents.markdown.editor.default',\n        defaultMessage: '#Enter your markdown content',\n    }));\n    const toggleOpen = () => {\n        if (!open) updateDoc();\n        if (open && showAtOnce) {\n            const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n            const listingPath = `/${urlPrefix}/${api.id}/documents`;\n            history.push(listingPath);\n        }\n        setOpen(!open);\n    };\n    const updateCode = (newCode) => {\n        setCode(newCode);\n    };\n    const editorDidMount = (editor, monaco) => {\n        editor.focus();\n    };\n    const addContentToDoc = () => {\n        const restAPI = new Api();\n        const docPromise = restAPI.addInlineContentToDocument(api.id, props.docId, 'MARKDOWN', code);\n        docPromise\n            .then((doc) => {\n                Alert.info(`${doc.name} ${intl.formatMessage({\n                    id: 'Apis.Details.Documents.MarkdownEditor.update.success.message',\n                    defaultMessage: 'updated successfully.',\n                })}`);\n                toggleOpen();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ apiNotFound: true });\n                }\n            });\n    };\n    const updateDoc = () => {\n        const restAPI = new Api();\n\n        const docPromise = restAPI.getInlineContentOfDocument(api.id, props.docId);\n        docPromise\n            .then((doc) => {\n                setCode(doc.text);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ apiNotFound: true });\n                }\n            });\n    };\n\n    const { classes } = props;\n    return (\n        <div>\n            <Button onClick={toggleOpen}>\n                <Icon>code</Icon>\n                <FormattedMessage\n                    id='Apis.Details.Documents.MarkdownEditor.edit.content'\n                    defaultMessage='Edit Content'\n                />\n            </Button>\n            <Dialog fullScreen open={open} onClose={toggleOpen} TransitionComponent={Transition}>\n                <Paper square className={classes.popupHeader}>\n                    <IconButton color='inherit' onClick={toggleOpen} aria-label='Close'>\n                        <Icon>close</Icon>\n                    </IconButton>\n                    <Typography variant='h4' className={classes.docName}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.MarkdownEditor.edit.content.of'\n                            defaultMessage='Edit Content of'\n                        />{' '}\n                        \"{props.docName}\"\n                    </Typography>\n                    <Button className={classes.button} variant='contained' color='primary' onClick={addContentToDoc}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.MarkdownEditor.update.content.button'\n                            defaultMessage='Update Content'\n                        />\n                    </Button>\n                    <Button className={classes.button} onClick={toggleOpen}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.MarkdownEditor.cancel.button'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                </Paper>\n                <div className={classes.splitWrapper}>\n                    <Grid container spacing={7}>\n                        <Grid item xs={6}>\n                            <MonacoEditor\n                                width='100%'\n                                height='100vh'\n                                language='markdown'\n                                theme='vs-dark'\n                                value={code}\n                                options={{ selectOnLineNumbers: true }}\n                                onChange={updateCode}\n                                editorDidMount={editorDidMount}\n                            />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <div className={classes.markdownViewWrapper}>\n                                <ReactMarkdown source={code} />\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Dialog>\n        </div>\n    );\n}\n\nMarkdownEditor.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withRouter(withStyles(styles)(MarkdownEditor)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useContext } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport { EditorState, convertToRaw, ContentState, convertFromHTML } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport Api from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport Alert from 'AppComponents/Shared/Alert';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst styles = {\n    appBar: {\n        position: 'relative',\n    },\n    flex: {\n        flex: 1,\n    },\n    popupHeader: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    splitWrapper: {\n        padding: 0,\n    },\n    docName: {\n        alignItems: 'center',\n        display: 'flex',\n    },\n    button: {\n        height: 30,\n        marginLeft: 30,\n    },\n};\n\nfunction Transition(props) {\n    return <Slide direction='up' {...props} />;\n}\n\nfunction TextEditor(props) {\n    const {\n        intl, apiType, showAtOnce, history, docId,\n    } = props;\n    const { api, isAPIProduct } = useContext(APIContext);\n\n    const [open, setOpen] = useState(showAtOnce);\n\n    const [editorState, setEditorState] = useState(EditorState.createEmpty());\n\n    const onEditorStateChange = (newEditorState) => {\n        setEditorState(newEditorState);\n    };\n    const toggleOpen = () => {\n        if (!open) updateDoc();\n\n        if (open && showAtOnce) {\n            const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n            const listingPath = `/${urlPrefix}/${api.id}/documents`;\n            history.push(listingPath);\n        }\n        setOpen(!open);\n    };\n    const addContentToDoc = () => {\n        const restAPI = isAPIProduct ? new APIProduct() : new Api();\n        const contentToSave = draftToHtml(convertToRaw(editorState.getCurrentContent()));\n        const docPromise = restAPI.addInlineContentToDocument(api.id, docId, 'INLINE', contentToSave);\n        docPromise\n            .then((response) => {\n                Alert.info(`${response.obj.name} ${intl.formatMessage({\n                    id: 'Apis.Details.Documents.TextEditor.update.success.message',\n                    defaultMessage: 'updated successfully.',\n                })}`);\n                toggleOpen();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                Alert.error(`${error} ${intl.formatMessage({\n                    id: 'Apis.Details.Documents.TextEditor.update.error.message',\n                    defaultMessage: 'update failed.',\n                })}`);\n            });\n    };\n    const updateDoc = () => {\n        const restAPI = isAPIProduct ? new APIProduct() : new Api();\n\n        const docPromise = restAPI.getInlineContentOfDocument(api.id, docId);\n        docPromise\n            .then((doc) => {\n                const blocksFromHTML = convertFromHTML(doc.text);\n                const state = ContentState.createFromBlockArray(blocksFromHTML.contentBlocks, blocksFromHTML.entityMap);\n\n                setEditorState(EditorState.createWithContent(state));\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ apiNotFound: true });\n                }\n            });\n    };\n\n    const { classes } = props;\n    return (\n        <div>\n            <Button onClick={toggleOpen}>\n                <Icon>description</Icon>\n                <FormattedMessage id='Apis.Details.Documents.TextEditor.edit.content' defaultMessage='Edit Content' />\n            </Button>\n            <Dialog fullScreen open={open} onClose={toggleOpen} TransitionComponent={Transition}>\n                <Paper square className={classes.popupHeader}>\n                    <IconButton color='inherit' onClick={toggleOpen} aria-label='Close'>\n                        <Icon>close</Icon>\n                    </IconButton>\n                    <Typography variant='h4' className={classes.docName}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.TextEditor.edit.content.of'\n                            defaultMessage='Edit Content of'\n                        />{' '}\n                        \"{props.docName}\"\n                    </Typography>\n                    <Button className={classes.button} variant='contained' color='primary' onClick={addContentToDoc}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.TextEditor.update.content.button'\n                            defaultMessage='Update Content'\n                        />\n                    </Button>\n                    <Button className={classes.button} onClick={toggleOpen}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.TextEditor.cancel.button'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                </Paper>\n                <div className={classes.splitWrapper}>\n                    <Editor\n                        editorState={editorState}\n                        wrapperClassName='draftjs-wrapper'\n                        editorClassName='draftjs-editor'\n                        onEditorStateChange={onEditorStateChange}\n                    />\n                </div>\n            </Dialog>\n        </div>\n    );\n}\n\nTextEditor.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    docId: PropTypes.string.isRequired,\n    apiType: PropTypes.oneOf([Api.CONSTS.API, Api.CONSTS.APIProduct]).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    showAtOnce: PropTypes.bool.isRequired,\n};\n\nexport default injectIntl(withRouter(withStyles(styles)(TextEditor)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useRef } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CreateEditForm from './CreateEditForm';\nimport Api from 'AppData/api';\n\nconst styles = {\n    appBar: {\n        position: 'relative',\n    },\n    flex: {\n        flex: 1,\n    },\n    popupHeader: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    splitWrapper: {\n        padding: 0,\n    },\n    docName: {\n        alignItems: 'center',\n        display: 'flex',\n    },\n    button: {\n        height: 30,\n        marginLeft: 30,\n    },\n};\n\nfunction Transition(props) {\n    return <Slide direction='up' {...props} />;\n}\n\nfunction Edit(props) {\n    const restAPI = new Api();\n\n    const { intl } = props;\n    const [open, setOpen] = useState(false);\n    let createEditForm = useRef(null);\n\n    const toggleOpen = () => {\n        setOpen(!open);\n    };\n\n    const updateDoc = () => {\n        const { apiId } = props;\n        const promiseWrapper = createEditForm.updateDocument(apiId);\n        promiseWrapper.docPromise\n            .then((doc) => {\n                const { documentId, name } = doc.body;\n                if (promiseWrapper.file && documentId) {\n                    const filePromise = restAPI.addFileToDocument(apiId, documentId, promiseWrapper.file[0]);\n                    filePromise\n                        .then((doc) => {\n                            Alert.info(`${name} ${intl.formatMessage({\n                                id: 'Apis.Details.Documents.Edit.markdown.editor.upload.success.message',\n                                defaultMessage: 'File uploaded successfully.',\n                            })}`);\n                            props.getDocumentsList();\n                            toggleOpen();\n                        })\n                        .catch((error) => {\n                            if (process.env.NODE_ENV !== 'production') {\n                                console.log(error);\n                                Alert.error(intl.formatMessage({\n                                    id: 'Apis.Details.Documents.Edit.markdown.editor.upload.error.message',\n                                    defaultMessage: 'Error uploading the file.',\n                                }));\n                            }\n                        });\n                } else {\n                    Alert.info(`${doc.name} ${intl.formatMessage({\n                        id: 'Apis.Details.Documents.Edit.markdown.editor.update.success.message',\n                        defaultMessage: 'Updated successfully.',\n                    })}`);\n                    props.getDocumentsList();\n                    toggleOpen();\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Documents.Edit.markdown.editor.update.error.message',\n                        defaultMessage: 'Error adding the document',\n                    }));\n                }\n            });\n    };\n\n    const { classes, docId, apiId } = props;\n    return (\n        <div>\n            <Button onClick={toggleOpen}>\n                <Icon>edit</Icon>\n                <FormattedMessage\n                    id='Apis.Details.Documents.Edit.documents.text.editor.edit'\n                    defaultMessage='Edit Meta Data'\n                />\n            </Button>\n            <Dialog open={open} onClose={toggleOpen} TransitionComponent={Transition} fullScreen>\n                <Paper square className={classes.popupHeader}>\n                    <IconButton color='inherit' onClick={toggleOpen} aria-label='Close'>\n                        <Icon>close</Icon>\n                    </IconButton>\n                    <Typography variant='h4' className={classes.docName}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Edit.documents.text.editor.edit.content'\n                            defaultMessage='Edit '\n                        />\n                        \"{props.docName}\"\n                    </Typography>\n                    <Button className={classes.button} variant='contained' color='primary' onClick={updateDoc}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Edit.documents.text.editor.update.content'\n                            defaultMessage='Save'\n                        />\n                    </Button>\n                    <Button className={classes.button} onClick={toggleOpen}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Edit.documents.text.editor.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                </Paper>\n                <div className={classes.splitWrapper}>\n                    <CreateEditForm\n                        innerRef={(node) => {\n                            createEditForm = node;\n                        }}\n                        docId={docId}\n                        apiId={apiId}\n                    />\n                </div>\n            </Dialog>\n        </div>\n    );\n}\nEdit.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.shape({}).isRequired,\n    docId: PropTypes.shape({}).isRequired,\n    getDocumentsList: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Edit));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useRef } from 'react';\nimport intl, { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport API from 'AppData/api.js';\nimport APIProduct from 'AppData/APIProduct';\nimport Icon from '@material-ui/core/Icon';\nimport Alert from 'AppComponents/Shared/Alert';\n\nconst styles = {\n    appBar: {\n        position: 'relative',\n    },\n    flex: {\n        flex: 1,\n    },\n    popupHeader: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    splitWrapper: {\n        padding: 0,\n    },\n    docName: {\n        alignItems: 'center',\n        display: 'flex',\n    },\n    button: {\n        height: 30,\n        marginLeft: 30,\n    },\n};\n\nfunction Delete(props) {\n    const { intl } = props;\n    const [open, setOpen] = useState(false);\n    const createEditForm = useRef(null);\n\n    const runAction = (action) => {\n        if (action === 'yes') {\n            deleteDoc();\n        } else {\n            setOpen(!open);\n        }\n    };\n    const toggleOpen = () => {\n        setOpen(!open);\n    };\n    const deleteDoc = () => {\n        const {\n            apiId, docId, getDocumentsList, apiType,\n        } = props;\n        const restApi = apiType === API.CONSTS.APIProduct ? new APIProduct() : new API();\n        const docPromise = restApi.deleteDocument(apiId, docId);\n        docPromise\n            .then(() => {\n                Alert.info(`${intl.formatMessage({\n                    id: 'Apis.Details.Documents.Delete.document.delete.successfully',\n                    defaultMessage: 'deleted successfully.',\n                })}`);\n                setOpen(!open);\n                getDocumentsList();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ apiNotFound: true });\n                }\n            });\n    };\n\n    const {\n        classes, docId, apiId, apiName,\n    } = props;\n    return (\n        <div>\n            <Button onClick={toggleOpen}>\n                <Icon>delete_forever</Icon>\n                <FormattedMessage\n                    id='Apis.Details.Documents.Delete.document.delete'\n                    defaultMessage='Delete'\n                />\n            </Button>\n            <Dialog\n                open={open}\n                onClose={toggleOpen}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'\n            >\n                <DialogTitle id='alert-dialog-title'>\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.delete.confirm.title'\n                        defaultMessage='Are you sure to delete?'\n                    />\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id='alert-dialog-description'>\n                        <strong>{apiName}</strong>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Delete.document.listing.delete.confirm.body'\n                            defaultMessage=' will be permernently deleted. Are you sure?'\n                        />\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => runAction('no')} color='primary'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Delete.document.listing.delete.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                    <Button onClick={() => runAction('yes')} color='primary' autoFocus>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Delete.document.listing.delete.yes'\n                            defaultMessage='Yes. Delete'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\nDelete.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.shape({}).isRequired,\n    apiType: PropTypes.string.isRequired,\n    docId: PropTypes.shape({}).isRequired,\n    getDocumentsList: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Delete));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Api from 'AppData/api';\n\nfunction Download(props) {\n    const { intl } = props;\n\n    const { docId, apiId } = props;\n    /**\n     * Download the document related file\n     * @param {any} response Response of download file\n     */\n    const downloadFile = (response, doc) => {\n        let fileName = '';\n        const contentDisposition = response.headers['content-disposition'];\n\n        if (contentDisposition && contentDisposition.indexOf('attachment') !== -1) {\n            const fileNameReg = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n            const matches = fileNameReg.exec(contentDisposition);\n            if (matches != null && matches[1]) fileName = matches[1].replace(/['\"]/g, '');\n        }\n        const contentType = response.headers['content-type'];\n        const blob = new Blob([response.data], {\n            type: contentType,\n        });\n        if (typeof window.navigator.msSaveBlob !== 'undefined') {\n            window.navigator.msSaveBlob(blob, fileName);\n        } else {\n            const URL = window.URL || window.webkitURL;\n            const downloadUrl = URL.createObjectURL(blob);\n\n            if (fileName) {\n                const aTag = document.createElement('a');\n                if (typeof aTag.download === 'undefined') {\n                    window.location = downloadUrl;\n                } else {\n                    aTag.href = downloadUrl;\n                    aTag.download = fileName;\n                    document.body.appendChild(aTag);\n                    aTag.click();\n                }\n            } else {\n                window.location = downloadUrl;\n            }\n\n            setTimeout(() => {\n                URL.revokeObjectURL(downloadUrl);\n            }, 100);\n        }\n    };\n    const handleDownload = () => {\n        const api = new Api();\n        const promised_get_content = api.getFileForDocument(apiId, docId);\n        promised_get_content\n            .then((done) => {\n                downloadFile(done, document);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id:'Apis.Details.Documents.Download.documents.markdown.editor.download.error',\n                        defaultMessage: 'Error downloading the file',\n                    }));\n                }\n            });\n    };\n\n    return (\n        <Button onClick={handleDownload}>\n            <Icon>arrow_downward</Icon>\n            <FormattedMessage\n                id='Apis.Details.Documents.Download.documents.listing.download'\n                defaultMessage='Download'\n            />\n        </Button>\n    );\n}\nDownload.propTypes = {\n    apiId: PropTypes.shape({}).isRequired,\n    docId: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(Download);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport API from 'AppData/api.js';\nimport APIProduct from 'AppData/APIProduct';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport Icon from '@material-ui/core/Icon';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport Create from './Create';\nimport MarkdownEditor from './MarkdownEditor';\nimport TextEditor from './TextEditor';\nimport Edit from './Edit';\nimport Delete from './Delete';\nimport Download from './Download';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing.unit * 2,\n        marginBottom: theme.spacing.unit * 2,\n    },\n    addNewHeader: {\n        padding: theme.spacing.unit * 2,\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing.unit * 2,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing.unit,\n    },\n    mainTitle: {\n        paddingRight: 10,\n    },\n    actionTable: {\n        '& td': {\n            width: 50,\n        },\n        '& td:first-child': {\n            width: 130,\n        },\n    },\n    messageBox: {\n        marginTop: 20,\n    },\n    actions: {\n        padding: '20px 0',\n        '& button': {\n            marginLeft: 0,\n        },\n    },\n    head: {\n        fontWeight: 200,\n        marginBottom: 20,\n    },\n});\nfunction LinkGenerator(props) {\n    return props.apiType === API.CONSTS.APIProduct ? (\n        <Link to={'/api-products/' + props.apiId + '/documents/' + props.docId + '/view'}>{props.docName}</Link>\n    ) : (\n        <Link to={'/apis/' + props.apiId + '/documents/' + props.docId + '/view'}>{props.docName}</Link>\n    );\n}\nclass Listing extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            docs: null,\n            showAddDocs: false,\n        };\n        this.apiId = props.api.id;\n        this.toggleAddDocs = this.toggleAddDocs.bind(this);\n        this.getDocumentsList = this.getDocumentsList.bind(this);\n    }\n    /**\n     * @inheritDoc\n     * @memberof Listing\n     */\n    componentDidMount() {\n        this.getDocumentsList();\n    }\n\n    /*\n     Get the document list attached to current API and set it to the state\n     */\n    getDocumentsList() {\n        const { api, intl } = this.props;\n\n        if (api.apiType === API.CONSTS.APIProduct) {\n            const apiProduct = new APIProduct();\n            const docs = apiProduct.getDocuments(api.id);\n            docs.then((response) => {\n                this.setState({ docs: response.obj.list });\n            }).catch((errorResponse) => {\n                const errorData = JSON.parse(errorResponse.message);\n                const messageTxt =\n                    'Error[' + errorData.code + ']: ' + errorData.description + ' | ' + errorData.message + '.';\n                console.error(messageTxt);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Documents.Listing.documents.listing.fetching.error.message.api.product',\n                    defaultMessage: 'Error in fetching documents list of the API Product',\n                }));\n            });\n        } else {\n            const newApi = new API();\n            const docs = newApi.getDocuments(this.props.api.id);\n            docs.then((response) => {\n                this.setState({ docs: response.obj.list });\n            }).catch((errorResponse) => {\n                const errorData = JSON.parse(errorResponse.message);\n                const messageTxt =\n                    'Error[' + errorData.code + ']: ' + errorData.description + ' | ' + errorData.message + '.';\n                console.error(messageTxt);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Documents.Listing.documents.listing.fetching.error.message',\n                    defaultMessage: 'Error in fetching documents list of the API',\n                }));\n            });\n        }\n    }\n    toggleAddDocs() {\n        this.setState((oldState) => {\n            return { showAddDocs: !oldState.showAddDocs };\n        });\n    }\n    render() {\n        const { classes, api, isAPIProduct } = this.props;\n        const { docs, showAddDocs } = this.state;\n        const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n        const url = `/${urlPrefix}/${api.id}/documents/create`;\n        const options = {\n            selectableRows: false,\n            title: false,\n            filter: false,\n            print: false,\n            download: false,\n            viewColumns: false,\n            customToolbar: false,\n            search: false,\n        };\n        const columns = [\n            {\n                name: 'documentId',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const docName = tableMeta.rowData[1];\n                            const docId = tableMeta.rowData[0];\n                            return (\n                                <LinkGenerator\n                                    docName={docName}\n                                    docId={docId}\n                                    apiId={this.apiId}\n                                    apiType={api.apiType}\n                                />\n                            );\n                        }\n                        return null;\n                    },\n                    filter: false,\n                    label: (\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Listing.column.header.name'\n                            defaultMessage='name'\n                        />\n                    ),\n                },\n            },\n            {\n                name: 'sourceType',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Listing.column.header.source.type'\n                        defaultMessage='sourceType'\n                    />\n                ),\n            },\n            {\n                name: 'type',\n                label: (\n                    <FormattedMessage id='Apis.Details.Documents.Listing.column.header.type' defaultMessage='type' />\n                ),\n            },\n            {\n                name: 'action',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Listing.column.header.action'\n                        defaultMessage='action'\n                    />\n                ),\n                options: {\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const docName = tableMeta.rowData[1];\n                            const docId = tableMeta.rowData[0];\n                            const sourceType = tableMeta.rowData[2];\n                            if (sourceType === 'MARKDOWN') {\n                                return (\n                                    <table className={classes.actionTable}>\n                                        <tr>\n                                            <td>\n                                                <MarkdownEditor docName={docName} docId={docId} apiId={this.apiId} />\n                                            </td>\n                                            <td>\n                                                <Edit\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                />\n                                            </td>\n                                            <td>\n                                                <Delete\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    apiType={api.apiType}\n                                                />\n                                            </td>\n                                        </tr>\n                                    </table>\n                                );\n                            } else if (sourceType === 'INLINE') {\n                                return (\n                                    <table className={classes.actionTable}>\n                                        <tr>\n                                            <td>\n                                                <TextEditor\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    apiType={api.apiType}\n                                                />\n                                            </td>\n                                            <td>\n                                                <Edit\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                />\n                                            </td>\n                                            <td>\n                                                <Delete\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    apiType={api.apiType}\n                                                />\n                                            </td>\n                                        </tr>\n                                    </table>\n                                );\n                            } else if (sourceType === 'URL') {\n                                return (\n                                    <table className={classes.actionTable}>\n                                        <tr>\n                                            <td>\n                                                <Button>\n                                                    <Icon>open_in_new</Icon>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.Documents.Listing.documents.open'\n                                                        defaultMessage='Open'\n                                                    />\n                                                </Button>\n                                            </td>\n                                            <td>\n                                                <Edit\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                />\n                                            </td>\n                                            <td>\n                                                <Delete\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    apiType={api.apiType}\n                                                />\n                                            </td>\n                                        </tr>\n                                    </table>\n                                );\n                            } else if (sourceType === 'FILE') {\n                                return (\n                                    <table className={classes.actionTable}>\n                                        <tr>\n                                            <td>\n                                                <Download docId={docId} apiId={this.apiId} />\n                                            </td>\n                                            <td>\n                                                <Edit\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                />\n                                            </td>\n                                            <td>\n                                                <Delete\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    apiType={api.apiType}\n                                                />\n                                            </td>\n                                        </tr>\n                                    </table>\n                                );\n                            } else {\n                                return <span />;\n                            }\n                        }\n                        return null;\n                    },\n                    filter: false,\n                },\n            },\n        ];\n        return (\n            <div className={classes.root}>\n                <div className={classes.titleWrapper}>\n                    <Typography variant='h4' align='left' className={classes.mainTitle}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Listing.documents.listing.title'\n                            defaultMessage='Documents'\n                        />\n                    </Typography>\n                    <Link to={url}>\n                        <Button size='small' className={classes.button}>\n                            <AddCircle className={classes.buttonIcon} />\n                            <FormattedMessage\n                                id='Apis.Details.Documents.Listing.add.new.document.button'\n                                defaultMessage='Add New Document'\n                            />\n                        </Button>\n                    </Link>\n                </div>\n                <div className={classes.contentWrapper}>\n                    {showAddDocs && (\n                        <Create\n                            toggleAddDocs={this.toggleAddDocs}\n                            getDocumentsList={this.getDocumentsList}\n                            apiType={api.apiType}\n                        />\n                    )}\n\n                    {docs && docs.length > 0 ? (\n                        <MUIDataTable title='' data={docs} columns={columns} options={options} />\n                    ) : (\n                        <InlineMessage type='info' height={140}>\n                            <div className={classes.contentWrapper}>\n                                <Typography variant='h5' component='h3' className={classes.head}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Documents.Listing.add.new.msg.title'\n                                        defaultMessage='Create Documents'\n                                    />\n                                </Typography>\n                                <Typography component='p' className={classes.content}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Documents.Listing.add.new.msg.content'\n                                        defaultMessage={\n                                            'You can add different types of documents to an API.' +\n                                            ' Proper documentation helps API publishers to market their ' +\n                                            ' APIs better and sustain competition. '\n                                        }\n                                    />\n                                </Typography>\n                                <div className={classes.actions}>\n                                    <Link to={url}>\n                                        <Button variant='contained' color='primary' className={classes.button}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Documents.Listing.add.new.msg.button'\n                                                defaultMessage='Add New Document'\n                                            />\n                                        </Button>\n                                    </Link>\n                                </div>\n                            </div>\n                        </InlineMessage>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nListing.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        apiType: PropTypes.oneOf([API.CONSTS.API, API.CONSTS.APIProduct]),\n    }).isRequired,\n};\n\nexport default injectIntl(withAPI(withStyles(styles)(Listing)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Icon from '@material-ui/core/Icon';\nimport Button from '@material-ui/core/Button';\nimport ReactMarkdown from 'react-markdown';\nimport ReactSafeHtml from 'react-safe-html';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    titleLink: {\n        color: theme.palette.primary.main,\n    },\n    docTitle: {\n        fontWeight: 100,\n        fontSize: 50,\n        color: theme.palette.grey[500],\n    },\n    docBadge: {\n        padding: theme.spacing.unit,\n        background: theme.palette.primary.main,\n        position: 'absolute',\n        top: 0,\n        marginTop: -22,\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    button: {\n        padding: theme.spacing.unit * 2,\n        marginTop: theme.spacing.unit * 2,\n    },\n    displayURL: {\n        padding: theme.spacing.unit * 2,\n        marginTop: theme.spacing.unit * 2,\n        background: theme.palette.grey[200],\n        color: theme.palette.getContrastText(theme.palette.grey[200]),\n        display: 'flex',\n    },\n    displayURLLink: {\n        paddingLeft: theme.spacing.unit * 2,\n    },\n    paper: {\n        marginTop: 20,\n        padding: theme.spacing.unit * 2,\n        height: '100%',\n    },\n    leftCell: {\n        width: 150,\n    },\n});\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction View(props) {\n    const {\n        classes,\n        fullScreen,\n        intl,\n        match: {\n            params: { documentId },\n        },\n    } = props;\n    const { api, isAPIProduct } = useContext(APIContext);\n\n    const [code, setCode] = useState('');\n    const [doc, setDoc] = useState(null);\n    const restAPI = isAPIProduct ? new APIProduct() : new API();\n\n    useEffect(() => {\n        const docPromise = restAPI.getDocument(api.id, documentId);\n        docPromise\n            .then((doc) => {\n                const { body } = doc;\n                setDoc(body);\n                if (body.sourceType === 'MARKDOWN' || body.sourceType === 'INLINE') loadContentForDoc();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }, [documentId]);\n\n    const loadContentForDoc = () => {\n        const docPromise = restAPI.getInlineContentOfDocument(api.id, documentId);\n        docPromise\n            .then((doc) => {\n                setCode(doc.text);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    };\n    /**\n     * Download the document related file\n     * @param {any} response Response of download file\n     */\n    const downloadFile = (response, doc) => {\n        let fileName = '';\n        const contentDisposition = response.headers['content-disposition'];\n\n        if (contentDisposition && contentDisposition.indexOf('attachment') !== -1) {\n            const fileNameReg = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n            const matches = fileNameReg.exec(contentDisposition);\n            if (matches != null && matches[1]) fileName = matches[1].replace(/['\"]/g, '');\n        }\n        const contentType = response.headers['content-type'];\n        const blob = new Blob([response.data], {\n            type: contentType,\n        });\n        if (typeof window.navigator.msSaveBlob !== 'undefined') {\n            window.navigator.msSaveBlob(blob, fileName);\n        } else {\n            const URL = window.URL || window.webkitURL;\n            const downloadUrl = URL.createObjectURL(blob);\n\n            if (fileName) {\n                const aTag = document.createElement('a');\n                if (typeof aTag.download === 'undefined') {\n                    window.location = downloadUrl;\n                } else {\n                    aTag.href = downloadUrl;\n                    aTag.download = fileName;\n                    document.body.appendChild(aTag);\n                    aTag.click();\n                }\n            } else {\n                window.location = downloadUrl;\n            }\n\n            setTimeout(() => {\n                URL.revokeObjectURL(downloadUrl);\n            }, 100);\n        }\n    };\n    const handleDownload = () => {\n        const promised_get_content = restAPI.getFileForDocument(api.id, documentId);\n        promised_get_content\n            .then((done) => {\n                downloadFile(done, document);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Documents.View.error.downloading',\n                        defaultMessage: 'Error downloading the file',\n                    }));\n                }\n            });\n    };\n    const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n    const listingPath = `/${urlPrefix}/${api.id}/documents`;\n    return (\n        doc && (\n            <React.Fragment>\n                <div className={classes.root}>\n                    <div className={classes.titleWrapper}>\n                        <Link to={listingPath} className={classes.titleLink}>\n                            <Typography variant='h5' align='left' className={classes.mainTitle}>\n                                <FormattedMessage id='Apis.Details.Documents.View.heading' defaultMessage='Documents' />\n                            </Typography>\n                        </Link>\n                        <Icon>keyboard_arrow_right</Icon>\n                        <Typography variant='h5'>{doc.name}</Typography>\n                    </div>\n                    <Paper className={classes.paper}>\n                        <Table className={classes.table}>\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell className={classes.leftCell}>\n                                        <Typography variant='body1'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Documents.View.meta.summary'\n                                                defaultMessage='Name'\n                                            />\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant='body1'>{doc.name}</Typography>\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell>\n                                        <Typography variant='body1'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Documents.View.meta.summary'\n                                                defaultMessage='Summary'\n                                            />\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant='body1'>{doc.summary}</Typography>\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell>\n                                        <Typography variant='body1'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Documents.View.meta.catogery'\n                                                defaultMessage='Catogoriezed as'\n                                            />\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant='body1'>\n                                            {doc.type === 'OTHER' ? doc.otherTypeName : doc.type}\n                                        </Typography>{' '}\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell>\n                                        <Typography variant='body1'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Documents.View.meta.source'\n                                                defaultMessage='Source Type'\n                                            />\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant='body1'>{doc.sourceType}</Typography>{' '}\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </Paper>\n\n                    <Paper className={classes.paper}>\n                        {doc.sourceType === 'MARKDOWN' && <ReactMarkdown source={code} />}\n                        {doc.sourceType === 'INLINE' && <ReactSafeHtml html={code} />}\n                        {doc.sourceType === 'URL' && (\n                            <a className={classes.displayURL} href={doc.sourceUrl} target='_blank'>\n                                {doc.sourceUrl}\n                                <Icon className={classes.displayURLLink}>open_in_new</Icon>\n                            </a>\n                        )}\n                        {doc.sourceType === 'FILE' && (\n                            <Button\n                                variant='contained'\n                                color='default'\n                                className={classes.button}\n                                onClick={handleDownload}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.View.btn.download'\n                                    defaultMessage='Download'\n                                />\n\n                                <Icon>arrow_downward</Icon>\n                            </Button>\n                        )}\n                    </Paper>\n                </div>\n            </React.Fragment>\n        )\n    );\n}\n\nView.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    doc: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n    fullScreen: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(View));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport isEmpty from 'lodash.isempty';\nimport MarkdownEditor from './MarkdownEditor';\nimport TextEditor from './TextEditor';\n\nfunction EditContent(props) {\n    const [doc, setDoc] = useState(null);\n    const {\n        history: {\n            location: { state, pathname },\n            replace,\n        },\n    } = props;\n    useEffect(() => {\n        // Check if we want to show the add content screen in the case of coming from GoToEdit.jsx with history -> state props\n\n        if (!isEmpty(state)) {\n            const { doc } = state;\n            if (doc) {\n                setDoc(doc);\n            }\n        }\n    }, []);\n    return (\n        <React.Fragment>\n            {doc && doc.sourceType === 'MARKDOWN' && (\n                <MarkdownEditor docName={doc.name} docId={doc.documentId} showAtOnce />\n            )}\n            {doc && doc.sourceType === 'INLINE' && <TextEditor docName={doc.name} docId={doc.documentId} showAtOnce />}\n        </React.Fragment>\n    );\n}\nexport default withRouter(EditContent);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch } from 'react-router-dom';\nimport { PageNotFound } from 'AppComponents/Base/Errors';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport Listing from './Listing';\nimport View from './View';\nimport Edit from './Edit';\nimport EditContent from './EditContent';\nimport DocCreate from './Create';\n\nconst Documents = (props) => {\n    const { isAPIProduct } = useContext(APIContext);\n    const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n    return (\n        <div>\n            <Switch>\n                <Route exact path={'/' + urlPrefix + '/:apiUUID/documents'} component={Listing} />} />\n                <Route exact path={'/' + urlPrefix + '/:apiUUID/documents/:documentId/view'} component={View} />} />\n                <Route exact path={'/' + urlPrefix + '/:apiUUID/documents/:documentId/edit'} component={Edit} />} />\n                <Route\n                    exact\n                    path={'/' + urlPrefix + '/:apiUUID/documents/:documentId/edit-content'}\n                    component={EditContent}\n                />\n                } />\n                <Route exact path={'/' + urlPrefix + '/:apiUUID/documents/create'} component={DocCreate} />\n                <Route component={PageNotFound} />\n            </Switch>\n        </div>\n    );\n};\n\nDocuments.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default Documents;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { injectIntl } from 'react-intl';\nimport { Typography } from '@material-ui/core';\nimport Switch from '@material-ui/core/Switch';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 400,\n    },\n    mainTitle: {\n        paddingLeft: 20,\n    },\n    scopes: {\n        width: 400,\n    },\n    dropDown: {\n        width: theme.spacing.unit * 11.25,\n    },\n    divider: {\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    chip: {\n        margin: theme.spacing.unit,\n        color: theme.palette.text.secondary,\n        minWidth: 100,\n    },\n    chipActive: {\n        margin: theme.spacing.unit,\n        color: theme.palette.text.secondary,\n        background: theme.palette.background.active,\n        minWidth: 100,\n        borderRadius: theme.shape.borderRadius,\n        cursor: 'pointer',\n    },\n    paper: {\n        padding: 20,\n    },\n    link: {\n        cursor: 'pointer',\n    },\n    listItem: {\n        paddingLeft: 0,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    formControl: {\n        paddingRight: 0,\n        marginRight: 0,\n    },\n    resourceRoot: {\n        background: theme.palette.grey['100'],\n        paddingLeft: theme.spacing.unit,\n        paddingRight: theme.spacing.unit,\n        borderRadius: theme.shape.borderRadius,\n        marginBottom: theme.spacing.unit,\n    },\n    deleteButton: {\n        marginLeft: 'auto',\n    },\n    pathDisplay: {\n        marginRight: theme.spacing.unit * 2,\n        marginLeft: theme.spacing.unit * 2,\n    },\n    descriptionWrapper: {\n        paddingTop: theme.spacing.unit,\n        paddingBottom: theme.spacing.unit,\n    },\n    scopeSelect: {\n        width: '100%',\n    },\n    descriptionWrapperUp: {\n        paddingBottom: '0 !important',\n    },\n    addParamRow: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    propsForm: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    deleteLink: {\n        cursor: 'pointer',\n    },\n    row: {\n        '& td': {\n            borderBottom: 'none',\n            verticalAlign: 'bottom',\n            width: '33%',\n            paddingLeft: 0,\n        },\n    },\n});\n\n/**\n *\n */\nclass Operation extends React.Component {\n    /**\n     *\n     * @param {any} props @inheritdoc\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSecurity: false,\n        };\n        this.handleScopeChange = this.handleScopeChange.bind(this);\n        this.handlePolicyChange = this.handlePolicyChange.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    /**\n     *\n     * @param {*} e event triggered for handle  Scope Change\n     */\n    handleScopeChange(e) {\n        const { operation } = this.props;\n        const newoperation = {\n            ...operation,\n            scopes: [...operation.scopes],\n        };\n        newoperation.scopes = [e.target.value];\n        this.props.handleUpdateList(newoperation);\n    }\n    /**\n     *\n     * @param {*} e event triggered for handle  policy Change\n     */\n    handlePolicyChange(e) {\n        const { operation } = this.props;\n        const newoperation = { ...operation };\n        newoperation.throttlingPolicy = e.target.value;\n        this.props.handleUpdateList(newoperation);\n    }\n\n    /**\n     * @param {*} event event triggered for handle  policy Change\n     */\n    handleChange(event) {\n        const { operation } = this.props;\n        const newoperation = { ...operation };\n        const { checked } = event.target;\n        if (checked) {\n            newoperation.authType = 'Any';\n        } else {\n            newoperation.authType = 'None';\n        }\n        this.setState({\n            isSecurity: checked,\n        });\n        this.props.handleUpdateList(newoperation);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const {\n            operation, theme, classes, apiPolicies, scopes,\n        } = this.props;\n        const { isSecurity } = this.state;\n        let chipColor = theme.custom.operationChipColor ?\n            theme.custom.operationChipColor[operation.verb.toLowerCase()]\n            : null;\n        let chipTextColor = '#000000';\n        if (!chipColor) {\n            console.log('Check the theme settings. The resourceChipColors is not populated properlly');\n            chipColor = '#cccccc';\n        } else {\n            chipTextColor =\n            theme.palette.getContrastText(theme.custom.operationChipColor[operation.verb.toLowerCase()]);\n        }\n        return (\n            <TableRow style={{ borderStyle: 'hidden' }}>\n                <TableCell>\n                    <Typography variant='body1'>\n                        {operation.target}\n                    </Typography>\n                </TableCell>\n                <TableCell>\n                    <Chip\n                        label={operation.verb.toLowerCase()}\n                        style={{\n                            backgroundColor: chipColor, color: chipTextColor, height: 20, width: 40,\n                        }}\n                        className={classes.chipActive}\n                    />\n                </TableCell>\n                <TableCell>\n                    <Select\n                        className={classes.dropDown}\n                        value={operation.throttlingPolicy}\n                        onChange={this.handlePolicyChange}\n                        fieldName='Throttling Policy'\n                    >\n                        {apiPolicies.map(policy => (\n                            <MenuItem\n                                key={policy.name}\n                                value={policy.name}\n                            >\n                                {policy.displayName}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </TableCell>\n                <TableCell>\n                    <Select\n                        className={classes.dropDown}\n                        value={operation.scopes}\n                        onChange={this.handleScopeChange}\n                        inputProps={{\n                            name: 'scopes',\n                            id: 'age-simple',\n                        }}\n                    >\n                        {scopes.map(tempScope => (\n                            <MenuItem\n                                key={tempScope.name}\n                                value={tempScope.name}\n                            >\n                                {tempScope.name}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </TableCell>\n                <TableCell>\n                    <Switch\n                        checked={(() => {\n                            if (operation.authType === 'None') {\n                                return false;\n                            }\n                            return true;\n                        })()}\n                        onChange={this.handleChange}\n                        value={isSecurity}\n                        color='primary'\n                    />\n                </TableCell>\n            </TableRow>\n        );\n    }\n}\n\nOperation.propTypes = {\n    classes: PropTypes.shape({\n    }).isRequired,\n    operation: PropTypes.shape({\n        target: PropTypes.string,\n        verb: PropTypes.string,\n        throttlingPolicy: PropTypes.string,\n        auth: PropTypes.string,\n    }).isRequired,\n    apiPolicies: PropTypes.shape({\n    }).isRequired,\n    scopes: PropTypes.shape({\n    }).isRequired,\n    handleUpdateList: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(Operation));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport Api from 'AppData/api';\nimport { Progress } from 'AppComponents/Shared';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport ResourceNotFound from '../../../Base/Errors/ResourceNotFound';\nimport Operation from './Operation';\n\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 400,\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    scopes: {\n        width: 400,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    button: {\n        marginLeft: theme.spacing.unit * 2,\n        textTransform: theme.custom.leftMenuTextStyle,\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    buttonMain: {\n        textTransform: theme.custom.leftMenuTextStyle,\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing.unit * 2,\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addNewHeader: {\n        padding: theme.spacing.unit * 2,\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing.unit * 2,\n    },\n    radioGroup: {\n        display: 'flex',\n        flexDirection: 'row',\n        width: 300,\n    },\n    addResource: {\n        width: 600,\n        marginTop: 0,\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing.unit,\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n});\n\n/**\n * This class defined for operation List\n */\nclass Operations extends React.Component {\n    /**\n     *\n     * @param {*} props the props parameters\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            notFound: false,\n            apiPolicies: [],\n            operationList: null,\n        };\n\n        this.newApi = new Api();\n        this.handleUpdateList = this.handleUpdateList.bind(this);\n        this.updateOperations = this.updateOperations.bind(this);\n    }\n\n    /**\n     *\n     */\n    componentDidMount() {\n        this.setState({\n            operationList: this.props.api.operations,\n        });\n        const promisedResPolicies = Api.policies('api');\n        promisedResPolicies\n            .then((policies) => {\n                this.setState({ apiPolicies: policies.obj.list });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error.status;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    }\n\n    /**\n     *\n     * @param {*} newOperation\n     */\n    handleUpdateList(newOperation) {\n        const { operationList } = this.state;\n        const updatedList = operationList.map(operation => (operation.target === newOperation.target\n            ? newOperation : operation));\n        this.setState({ operationList: updatedList });\n    }\n\n    /**\n     *\n     */\n    updateOperations() {\n        const { api, intl } = this.props;\n        const { operationList } = this.state;\n        api.operations = operationList;\n        const promisedApi = this.newApi.update(JSON.parse(JSON.stringify(api)));\n        promisedApi\n            .then(() => {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Operations.Operations.api.updated.successfully',\n                    defaultMessage: 'API updated successfully!',\n                }));\n            })\n            .catch(() => {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Operations.Operations.something.went.wrong.while.updating.the.api',\n                    defaultMessage: 'Error occurred while updating API',\n                }));\n            });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const {\n            operationList, apiPolicies,\n        } = this.state;\n        if (this.state.notFound) {\n            return <ResourceNotFound message={this.props.resourceNotFoundMessage} />;\n        }\n        if (!operationList) {\n            return <Progress />;\n        }\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <div className={classes.titleWrapper}>\n                    <Typography variant='h4' align='left' className={classes.mainTitle}>\n                        <FormattedMessage\n                            id='Apis.Details.Operations.Operations.operation'\n                            defaultMessage='Operations'\n                        />\n                    </Typography>\n                </div>\n                <div className={classes.contentWrapper}>\n                    <List>\n                        <Grid>\n                            <Table>\n                                <TableRow>\n                                    <TableCell>\n                                        <Typography variant='subtitle2'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Resources.Resource.Operation'\n                                                defaultMessage='Operation'\n                                            />\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant='subtitle2'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Resources.Resource.OperationType'\n                                                defaultMessage='Operation Type'\n                                            />\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant='subtitle2'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Resources.Resource.throttling.policy'\n                                                defaultMessage='Throttling Policy'\n                                            />\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant='subtitle2'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Resources.Resource.scopes'\n                                                defaultMessage='Scopes'\n                                            />\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant='subtitle2'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Resources.Resource.authType'\n                                                defaultMessage='Security Enabled'\n                                            />\n                                        </Typography>\n                                    </TableCell>\n                                </TableRow>\n                                {operationList.map((item) => {\n                                    return (\n                                        <Operation\n                                            operation={item}\n                                            handleUpdateList={this.handleUpdateList}\n                                            scopes={this.props.api.scopes}\n                                            apiPolicies={apiPolicies}\n                                        />\n                                    );\n                                })}\n                            </Table>\n                        </Grid>\n                    </List>\n                    <div>\n                        <Button\n                            variant='contained'\n                            color='primary'\n                            className={classes.buttonMain}\n                            onClick={this.updateOperations}\n                        >\n                            <FormattedMessage id='Apis.Details.Resources.Resources.save' defaultMessage='Save' />\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nOperations.propTypes = {\n    classes: PropTypes.shape({\n    }).isRequired,\n    api: PropTypes.shape({\n        operations: PropTypes.array,\n        scopes: PropTypes.array,\n        updateOperations: PropTypes.func,\n        policies: PropTypes.func,\n        id: PropTypes.string,\n    }).isRequired,\n    resourceNotFoundMessage: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Operations));\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nvar lsz = 691;\n\nvar mimetypes = Array([lsz]);\n\nmimetypes[0] = { label: \"application/vnd.hzn-3d-crossword\"};\n\nmimetypes[1] = { label: \"video/3gpp\"};\n\nmimetypes[2] = { label: \"video/3gpp2\"};\n\nmimetypes[3] = { label: \"application/vnd.mseq\"};\n\nmimetypes[4] = { label: \"application/vnd.3m.post-it-notes\"};\n\nmimetypes[5] = { label: \"application/vnd.3gpp.pic-bw-large\"};\n\nmimetypes[6] = { label: \"application/vnd.3gpp.pic-bw-small\"};\n\nmimetypes[7] = { label: \"application/vnd.3gpp.pic-bw-var\"};\n\nmimetypes[8] = { label: \"application/vnd.3gpp2.tcap\"};\n\nmimetypes[9] = { label: \"application/x-7z-compressed\"};\n\nmimetypes[10] = { label: \"application/x-abiword\"};\n\nmimetypes[11] = { label: \"application/x-ace-compressed\"};\n\nmimetypes[12] = { label: \"application/vnd.americandynamics.acc\"};\n\nmimetypes[13] = { label: \"application/vnd.acucobol\"};\n\nmimetypes[14] = { label: \"application/vnd.acucorp\"};\n\nmimetypes[15] = { label: \"audio/adpcm\"};\n\nmimetypes[16] = { label: \"application/x-authorware-bin\"};\n\nmimetypes[17] = { label: \"application/x-authorware-map\"};\n\nmimetypes[18] = { label: \"application/x-authorware-seg\"};\n\nmimetypes[19] = { label: \"application/vnd.adobe.air-application-installer-package+zip\"};\n\nmimetypes[20] = { label: \"application/x-shockwave-flash\"};\n\nmimetypes[21] = { label: \"application/vnd.adobe.fxp\"};\n\nmimetypes[22] = { label: \"application/pdf\"};\n\nmimetypes[23] = { label: \"application/vnd.cups-ppd\"};\n\nmimetypes[24] = { label: \"application/x-director\"};\n\nmimetypes[25] = { label: \"application/vnd.adobe.xdp+xml\"};\n\nmimetypes[26] = { label: \"application/vnd.adobe.xfdf\"};\n\nmimetypes[27] = { label: \"audio/x-aac\"};\n\nmimetypes[28] = { label: \"application/vnd.ahead.space\"};\n\nmimetypes[29] = { label: \"application/vnd.airzip.filesecure.azf\"};\n\nmimetypes[30] = { label: \"application/vnd.airzip.filesecure.azs\"};\n\nmimetypes[31] = { label: \"application/vnd.amazon.ebook\"};\n\nmimetypes[32] = { label: \"application/vnd.amiga.ami\"};\n\nmimetypes[33] = { label: \"application/andrew-inset\"};\n\nmimetypes[34] = { label: \"application/vnd.android.package-archive\"};\n\nmimetypes[35] = { label: \"application/vnd.anser-web-certificate-issue-initiation\"};\n\nmimetypes[36] = { label: \"application/vnd.anser-web-funds-transfer-initiation\"};\n\nmimetypes[37] = { label: \"application/vnd.antix.game-component\"};\n\nmimetypes[38] = { label: \"application/x-apple-diskimage\"};\n\nmimetypes[39] = { label: \"application/vnd.apple.installer+xml\"};\n\nmimetypes[40] = { label: \"application/applixware\"};\n\nmimetypes[41] = { label: \"application/vnd.hhe.lesson-player\"};\n\nmimetypes[42] = { label: \"application/vnd.aristanetworks.swi\"};\n\nmimetypes[43] = { label: \"text/x-asm\"};\n\nmimetypes[44] = { label: \"application/atomcat+xml\"};\n\nmimetypes[45] = { label: \"application/atomsvc+xml\"};\n\nmimetypes[46] = { label: \"application/atom+xml\"};\n\nmimetypes[47] = { label: \"application/pkix-attr-cert\"};\n\nmimetypes[48] = { label: \"audio/x-aiff\"};\n\nmimetypes[49] = { label: \"video/x-msvideo\"};\n\nmimetypes[50] = { label: \"application/vnd.audiograph\"};\n\nmimetypes[51] = { label: \"image/vnd.dxf\"};\n\nmimetypes[52] = { label: \"model/vnd.dwf\"};\n\nmimetypes[53] = { label: \"text/plain-bas\"};\n\nmimetypes[54] = { label: \"application/x-bcpio\"};\n\nmimetypes[55] = { label: \"application/octet-stream\"};\n\nmimetypes[56] = { label: \"image/bmp\"};\n\nmimetypes[57] = { label: \"application/x-bittorrent\"};\n\nmimetypes[58] = { label: \"application/vnd.rim.cod\"};\n\nmimetypes[59] = { label: \"application/vnd.blueice.multipass\"};\n\nmimetypes[60] = { label: \"application/vnd.bmi\"};\n\nmimetypes[61] = { label: \"application/x-sh\"};\n\nmimetypes[62] = { label: \"image/prs.btif\"};\n\nmimetypes[63] = { label: \"application/vnd.businessobjects\"};\n\nmimetypes[64] = { label: \"application/x-bzip\"};\n\nmimetypes[65] = { label: \"application/x-bzip2\"};\n\nmimetypes[66] = { label: \"application/x-csh\"};\n\nmimetypes[67] = { label: \"text/x-c\"};\n\nmimetypes[68] = { label: \"application/vnd.chemdraw+xml\"};\n\nmimetypes[69] = { label: \"text/css\"};\n\nmimetypes[70] = { label: \"chemical/x-cdx\"};\n\nmimetypes[71] = { label: \"chemical/x-cml\"};\n\nmimetypes[72] = { label: \"chemical/x-csml\"};\n\nmimetypes[73] = { label: \"application/vnd.contact.cmsg\"};\n\nmimetypes[74] = { label: \"application/vnd.claymore\"};\n\nmimetypes[75] = { label: \"application/vnd.clonk.c4group\"};\n\nmimetypes[76] = { label: \"image/vnd.dvb.subtitle\"};\n\nmimetypes[77] = { label: \"application/cdmi-capability\"};\n\nmimetypes[78] = { label: \"application/cdmi-container\"};\n\nmimetypes[79] = { label: \"application/cdmi-domain\"};\n\nmimetypes[80] = { label: \"application/cdmi-object\"};\n\nmimetypes[81] = { label: \"application/cdmi-queue\"};\n\nmimetypes[82] = { label: \"application/vnd.cluetrust.cartomobile-config\"};\n\nmimetypes[83] = { label: \"application/vnd.cluetrust.cartomobile-config-pkg\"};\n\nmimetypes[84] = { label: \"image/x-cmu-raster\"};\n\nmimetypes[85] = { label: \"model/vnd.collada+xml\"};\n\nmimetypes[86] = { label: \"text/csv\"};\n\nmimetypes[87] = { label: \"application/mac-compactpro\"};\n\nmimetypes[88] = { label: \"application/vnd.wap.wmlc\"};\n\nmimetypes[89] = { label: \"image/cgm\"};\n\nmimetypes[90] = { label: \"x-conference/x-cooltalk\"};\n\nmimetypes[91] = { label: \"image/x-cmx\"};\n\nmimetypes[92] = { label: \"application/vnd.xara\"};\n\nmimetypes[93] = { label: \"application/vnd.cosmocaller\"};\n\nmimetypes[94] = { label: \"application/x-cpio\"};\n\nmimetypes[95] = { label: \"application/vnd.crick.clicker\"};\n\nmimetypes[96] = { label: \"application/vnd.crick.clicker.keyboard\"};\n\nmimetypes[97] = { label: \"application/vnd.crick.clicker.palette\"};\n\nmimetypes[98] = { label: \"application/vnd.crick.clicker.template\"};\n\nmimetypes[99] = { label: \"application/vnd.crick.clicker.wordbank\"};\n\nmimetypes[100] = { label: \"application/vnd.criticaltools.wbs+xml\"};\n\nmimetypes[101] = { label: \"application/vnd.rig.cryptonote\"};\n\nmimetypes[102] = { label: \"chemical/x-cif\"};\n\nmimetypes[103] = { label: \"chemical/x-cmdf\"};\n\nmimetypes[104] = { label: \"application/cu-seeme\"};\n\nmimetypes[105] = { label: \"application/prs.cww\"};\n\nmimetypes[106] = { label: \"text/vnd.curl\"};\n\nmimetypes[107] = { label: \"text/vnd.curl.dcurl\"};\n\nmimetypes[108] = { label: \"text/vnd.curl.mcurl\"};\n\nmimetypes[109] = { label: \"text/vnd.curl.scurl\"};\n\nmimetypes[110] = { label: \"application/vnd.curl.car\"};\n\nmimetypes[111] = { label: \"application/vnd.curl.pcurl\"};\n\nmimetypes[112] = { label: \"application/vnd.yellowriver-custom-menu\"};\n\nmimetypes[113] = { label: \"application/dssc+der\"};\n\nmimetypes[114] = { label: \"application/dssc+xml\"};\n\nmimetypes[115] = { label: \"application/x-debian-package\"};\n\nmimetypes[116] = { label: \"audio/vnd.dece.audio\"};\n\nmimetypes[117] = { label: \"image/vnd.dece.graphic\"};\n\nmimetypes[118] = { label: \"video/vnd.dece.hd\"};\n\nmimetypes[119] = { label: \"video/vnd.dece.mobile\"};\n\nmimetypes[120] = { label: \"video/vnd.uvvu.mp4\"};\n\nmimetypes[121] = { label: \"video/vnd.dece.pd\"};\n\nmimetypes[122] = { label: \"video/vnd.dece.sd\"};\n\nmimetypes[123] = { label: \"video/vnd.dece.video\"};\n\nmimetypes[124] = { label: \"application/x-dvi\"};\n\nmimetypes[125] = { label: \"application/vnd.fdsn.seed\"};\n\nmimetypes[126] = { label: \"application/x-dtbook+xml\"};\n\nmimetypes[127] = { label: \"application/x-dtbresource+xml\"};\n\nmimetypes[128] = { label: \"application/vnd.dvb.ait\"};\n\nmimetypes[129] = { label: \"application/vnd.dvb.service\"};\n\nmimetypes[130] = { label: \"audio/vnd.digital-winds\"};\n\nmimetypes[131] = { label: \"image/vnd.djvu\"};\n\nmimetypes[132] = { label: \"application/xml-dtd\"};\n\nmimetypes[133] = { label: \"application/vnd.dolby.mlp\"};\n\nmimetypes[134] = { label: \"application/x-doom\"};\n\nmimetypes[135] = { label: \"application/vnd.dpgraph\"};\n\nmimetypes[136] = { label: \"audio/vnd.dra\"};\n\nmimetypes[137] = { label: \"application/vnd.dreamfactory\"};\n\nmimetypes[138] = { label: \"audio/vnd.dts\"};\n\nmimetypes[139] = { label: \"audio/vnd.dts.hd\"};\n\nmimetypes[140] = { label: \"image/vnd.dwg\"};\n\nmimetypes[141] = { label: \"application/vnd.dynageo\"};\n\nmimetypes[142] = { label: \"application/ecmascript\"};\n\nmimetypes[143] = { label: \"application/vnd.ecowin.chart\"};\n\nmimetypes[144] = { label: \"image/vnd.fujixerox.edmics-mmr\"};\n\nmimetypes[145] = { label: \"image/vnd.fujixerox.edmics-rlc\"};\n\nmimetypes[146] = { label: \"application/exi\"};\n\nmimetypes[147] = { label: \"application/vnd.proteus.magazine\"};\n\nmimetypes[148] = { label: \"application/epub+zip\"};\n\nmimetypes[149] = { label: \"message/rfc822\"};\n\nmimetypes[150] = { label: \"application/vnd.enliven\"};\n\nmimetypes[151] = { label: \"application/vnd.is-xpr\"};\n\nmimetypes[152] = { label: \"image/vnd.xiff\"};\n\nmimetypes[153] = { label: \"application/vnd.xfdl\"};\n\nmimetypes[154] = { label: \"application/emma+xml\"};\n\nmimetypes[155] = { label: \"application/vnd.ezpix-album\"};\n\nmimetypes[156] = { label: \"application/vnd.ezpix-package\"};\n\nmimetypes[157] = { label: \"image/vnd.fst\"};\n\nmimetypes[158] = { label: \"video/vnd.fvt\"};\n\nmimetypes[159] = { label: \"image/vnd.fastbidsheet\"};\n\nmimetypes[160] = { label: \"application/vnd.denovo.fcselayout-link\"};\n\nmimetypes[161] = { label: \"video/x-f4v\"};\n\nmimetypes[162] = { label: \"video/x-flv\"};\n\nmimetypes[163] = { label: \"image/vnd.fpx\"};\n\nmimetypes[164] = { label: \"image/vnd.net-fpx\"};\n\nmimetypes[165] = { label: \"text/vnd.fmi.flexstor\"};\n\nmimetypes[166] = { label: \"video/x-fli\"};\n\nmimetypes[167] = { label: \"application/vnd.fluxtime.clip\"};\n\nmimetypes[168] = { label: \"application/vnd.fdf\"};\n\nmimetypes[169] = { label: \"text/x-fortran\"};\n\nmimetypes[170] = { label: \"application/vnd.mif\"};\n\nmimetypes[171] = { label: \"application/vnd.framemaker\"};\n\nmimetypes[172] = { label: \"image/x-freehand\"};\n\nmimetypes[173] = { label: \"application/vnd.fsc.weblaunch\"};\n\nmimetypes[174] = { label: \"application/vnd.frogans.fnc\"};\n\nmimetypes[175] = { label: \"application/vnd.frogans.ltf\"};\n\nmimetypes[176] = { label: \"application/vnd.fujixerox.ddd\"};\n\nmimetypes[177] = { label: \"application/vnd.fujixerox.docuworks\"};\n\nmimetypes[178] = { label: \"application/vnd.fujixerox.docuworks.binder\"};\n\nmimetypes[179] = { label: \"application/vnd.fujitsu.oasys\"};\n\nmimetypes[180] = { label: \"application/vnd.fujitsu.oasys2\"};\n\nmimetypes[181] = { label: \"application/vnd.fujitsu.oasys3\"};\n\nmimetypes[182] = { label: \"application/vnd.fujitsu.oasysgp\"};\n\nmimetypes[183] = { label: \"application/vnd.fujitsu.oasysprs\"};\n\nmimetypes[184] = { label: \"application/x-futuresplash\"};\n\nmimetypes[185] = { label: \"application/vnd.fuzzysheet\"};\n\nmimetypes[186] = { label: \"image/g3fax\"};\n\nmimetypes[187] = { label: \"application/vnd.gmx\"};\n\nmimetypes[188] = { label: \"model/vnd.gtw\"};\n\nmimetypes[189] = { label: \"application/vnd.genomatix.tuxedo\"};\n\nmimetypes[190] = { label: \"application/vnd.geogebra.file\"};\n\nmimetypes[191] = { label: \"application/vnd.geogebra.tool\"};\n\nmimetypes[192] = { label: \"model/vnd.gdl\"};\n\nmimetypes[193] = { label: \"application/vnd.geometry-explorer\"};\n\nmimetypes[194] = { label: \"application/vnd.geonext\"};\n\nmimetypes[195] = { label: \"application/vnd.geoplan\"};\n\nmimetypes[196] = { label: \"application/vnd.geospace\"};\n\nmimetypes[197] = { label: \"application/x-font-ghostscript\"};\n\nmimetypes[198] = { label: \"application/x-font-bdf\"};\n\nmimetypes[199] = { label: \"application/x-gtar\"};\n\nmimetypes[200] = { label: \"application/x-texinfo\"};\n\nmimetypes[201] = { label: \"application/x-gnumeric\"};\n\nmimetypes[202] = { label: \"application/vnd.google-earth.kml+xml\"};\n\nmimetypes[203] = { label: \"application/vnd.google-earth.kmz\"};\n\nmimetypes[204] = { label: \"application/vnd.grafeq\"};\n\nmimetypes[205] = { label: \"image/gif\"};\n\nmimetypes[206] = { label: \"text/vnd.graphviz\"};\n\nmimetypes[207] = { label: \"application/vnd.groove-account\"};\n\nmimetypes[208] = { label: \"application/vnd.groove-help\"};\n\nmimetypes[209] = { label: \"application/vnd.groove-identity-message\"};\n\nmimetypes[210] = { label: \"application/vnd.groove-injector\"};\n\nmimetypes[211] = { label: \"application/vnd.groove-tool-message\"};\n\nmimetypes[212] = { label: \"application/vnd.groove-tool-template\"};\n\nmimetypes[213] = { label: \"application/vnd.groove-vcard\"};\n\nmimetypes[214] = { label: \"video/h261\"};\n\nmimetypes[215] = { label: \"video/h263\"};\n\nmimetypes[216] = { label: \"video/h264\"};\n\nmimetypes[217] = { label: \"application/vnd.hp-hpid\"};\n\nmimetypes[218] = { label: \"application/vnd.hp-hps\"};\n\nmimetypes[219] = { label: \"application/x-hdf\"};\n\nmimetypes[220] = { label: \"audio/vnd.rip\"};\n\nmimetypes[221] = { label: \"application/vnd.hbci\"};\n\nmimetypes[222] = { label: \"application/vnd.hp-jlyt\"};\n\nmimetypes[223] = { label: \"application/vnd.hp-pcl\"};\n\nmimetypes[224] = { label: \"application/vnd.hp-hpgl\"};\n\nmimetypes[225] = { label: \"application/vnd.yamaha.hv-script\"};\n\nmimetypes[226] = { label: \"application/vnd.yamaha.hv-dic\"};\n\nmimetypes[227] = { label: \"application/vnd.yamaha.hv-voice\"};\n\nmimetypes[228] = { label: \"application/vnd.hydrostatix.sof-data\"};\n\nmimetypes[229] = { label: \"application/hyperstudio\"};\n\nmimetypes[230] = { label: \"application/vnd.hal+xml\"};\n\nmimetypes[231] = { label: \"text/html\"};\n\nmimetypes[232] = { label: \"application/vnd.ibm.rights-management\"};\n\nmimetypes[233] = { label: \"application/vnd.ibm.secure-container\"};\n\nmimetypes[234] = { label: \"text/calendar\"};\n\nmimetypes[235] = { label: \"application/vnd.iccprofile\"};\n\nmimetypes[236] = { label: \"image/x-icon\"};\n\nmimetypes[237] = { label: \"application/vnd.igloader\"};\n\nmimetypes[238] = { label: \"image/ief\"};\n\nmimetypes[239] = { label: \"application/vnd.immervision-ivp\"};\n\nmimetypes[240] = { label: \"application/vnd.immervision-ivu\"};\n\nmimetypes[241] = { label: \"application/reginfo+xml\"};\n\nmimetypes[242] = { label: \"text/vnd.in3d.3dml\"};\n\nmimetypes[243] = { label: \"text/vnd.in3d.spot\"};\n\nmimetypes[244] = { label: \"model/iges\"};\n\nmimetypes[245] = { label: \"application/vnd.intergeo\"};\n\nmimetypes[246] = { label: \"application/vnd.cinderella\"};\n\nmimetypes[247] = { label: \"application/vnd.intercon.formnet\"};\n\nmimetypes[248] = { label: \"application/vnd.isac.fcs\"};\n\nmimetypes[249] = { label: \"application/ipfix\"};\n\nmimetypes[250] = { label: \"application/pkix-cert\"};\n\nmimetypes[251] = { label: \"application/pkixcmp\"};\n\nmimetypes[252] = { label: \"application/pkix-crl\"};\n\nmimetypes[253] = { label: \"application/pkix-pkipath\"};\n\nmimetypes[254] = { label: \"application/vnd.insors.igm\"};\n\nmimetypes[255] = { label: \"application/vnd.ipunplugged.rcprofile\"};\n\nmimetypes[256] = { label: \"application/vnd.irepository.package+xml\"};\n\nmimetypes[257] = { label: \"text/vnd.sun.j2me.app-descriptor\"};\n\nmimetypes[258] = { label: \"application/java-archive\"};\n\nmimetypes[259] = { label: \"application/java-vm\"};\n\nmimetypes[260] = { label: \"application/x-java-jnlp-file\"};\n\nmimetypes[261] = { label: \"application/java-serialized-object\"};\n\nmimetypes[262] = { label: \"text/x-java-source,java\"};\n\nmimetypes[263] = { label: \"application/javascript\"};\n\nmimetypes[264] = { label: \"application/json\"};\n\nmimetypes[265] = { label: \"application/vnd.joost.joda-archive\"};\n\nmimetypes[266] = { label: \"video/jpm\"};\n\nmimetypes[267] = { label: \"image/jpeg\"};\n\nmimetypes[268] = { label: \"image/x-citrix-jpeg\"};\n\nmimetypes[269] = { label: \"image/pjpeg\"};\n\nmimetypes[270] = { label: \"video/jpeg\"};\n\nmimetypes[271] = { label: \"application/vnd.kahootz\"};\n\nmimetypes[272] = { label: \"application/vnd.chipnuts.karaoke-mmd\"};\n\nmimetypes[273] = { label: \"application/vnd.kde.karbon\"};\n\nmimetypes[274] = { label: \"application/vnd.kde.kchart\"};\n\nmimetypes[275] = { label: \"application/vnd.kde.kformula\"};\n\nmimetypes[276] = { label: \"application/vnd.kde.kivio\"};\n\nmimetypes[277] = { label: \"application/vnd.kde.kontour\"};\n\nmimetypes[278] = { label: \"application/vnd.kde.kpresenter\"};\n\nmimetypes[279] = { label: \"application/vnd.kde.kspread\"};\n\nmimetypes[280] = { label: \"application/vnd.kde.kword\"};\n\nmimetypes[281] = { label: \"application/vnd.kenameaapp\"};\n\nmimetypes[282] = { label: \"application/vnd.kidspiration\"};\n\nmimetypes[283] = { label: \"application/vnd.kinar\"};\n\nmimetypes[284] = { label: \"application/vnd.kodak-descriptor\"};\n\nmimetypes[285] = { label: \"application/vnd.las.las+xml\"};\n\nmimetypes[286] = { label: \"application/x-latex\"};\n\nmimetypes[287] = { label: \"application/vnd.llamagraphics.life-balance.desktop\"};\n\nmimetypes[288] = { label: \"application/vnd.llamagraphics.life-balance.exchange+xml\"};\n\nmimetypes[289] = { label: \"application/vnd.jam\"};\n\nmimetypes[290] = { label: \"application/vnd.lotus-1-2-3\"};\n\nmimetypes[291] = { label: \"application/vnd.lotus-approach\"};\n\nmimetypes[292] = { label: \"application/vnd.lotus-freelance\"};\n\nmimetypes[293] = { label: \"application/vnd.lotus-notes\"};\n\nmimetypes[294] = { label: \"application/vnd.lotus-organizer\"};\n\nmimetypes[295] = { label: \"application/vnd.lotus-screencam\"};\n\nmimetypes[296] = { label: \"application/vnd.lotus-wordpro\"};\n\nmimetypes[297] = { label: \"audio/vnd.lucent.voice\"};\n\nmimetypes[298] = { label: \"audio/x-mpegurl\"};\n\nmimetypes[299] = { label: \"video/x-m4v\"};\n\nmimetypes[300] = { label: \"application/mac-binhex40\"};\n\nmimetypes[301] = { label: \"application/vnd.macports.portpkg\"};\n\nmimetypes[302] = { label: \"application/vnd.osgeo.mapguide.package\"};\n\nmimetypes[303] = { label: \"application/marc\"};\n\nmimetypes[304] = { label: \"application/marcxml+xml\"};\n\nmimetypes[305] = { label: \"application/mxf\"};\n\nmimetypes[306] = { label: \"application/vnd.wolfram.player\"};\n\nmimetypes[307] = { label: \"application/mathematica\"};\n\nmimetypes[308] = { label: \"application/mathml+xml\"};\n\nmimetypes[309] = { label: \"application/mbox\"};\n\nmimetypes[310] = { label: \"application/vnd.medcalcdata\"};\n\nmimetypes[311] = { label: \"application/mediaservercontrol+xml\"};\n\nmimetypes[312] = { label: \"application/vnd.mediastation.cdkey\"};\n\nmimetypes[313] = { label: \"application/vnd.mfer\"};\n\nmimetypes[314] = { label: \"application/vnd.mfmp\"};\n\nmimetypes[315] = { label: \"model/mesh\"};\n\nmimetypes[316] = { label: \"application/mads+xml\"};\n\nmimetypes[317] = { label: \"application/mets+xml\"};\n\nmimetypes[318] = { label: \"application/mods+xml\"};\n\nmimetypes[319] = { label: \"application/metalink4+xml\"};\n\nmimetypes[320] = { label: \"application/vnd.mcd\"};\n\nmimetypes[321] = { label: \"application/vnd.micrografx.flo\"};\n\nmimetypes[322] = { label: \"application/vnd.micrografx.igx\"};\n\nmimetypes[323] = { label: \"application/vnd.eszigno3+xml\"};\n\nmimetypes[324] = { label: \"application/x-msaccess\"};\n\nmimetypes[325] = { label: \"video/x-ms-asf\"};\n\nmimetypes[326] = { label: \"application/x-msdownload\"};\n\nmimetypes[327] = { label: \"application/vnd.ms-artgalry\"};\n\nmimetypes[328] = { label: \"application/vnd.ms-cab-compressed\"};\n\nmimetypes[329] = { label: \"application/vnd.ms-ims\"};\n\nmimetypes[330] = { label: \"application/x-ms-application\"};\n\nmimetypes[331] = { label: \"application/x-msclip\"};\n\nmimetypes[332] = { label: \"image/vnd.ms-modi\"};\n\nmimetypes[333] = { label: \"application/vnd.ms-fontobject\"};\n\nmimetypes[334] = { label: \"application/vnd.ms-excel\"};\n\nmimetypes[335] = { label: \"application/vnd.ms-excel.addin.macroenabled.12\"};\n\nmimetypes[336] = { label: \"application/vnd.ms-excel.sheet.binary.macroenabled.12\"};\n\nmimetypes[337] = { label: \"application/vnd.ms-excel.template.macroenabled.12\"};\n\nmimetypes[338] = { label: \"application/vnd.ms-excel.sheet.macroenabled.12\"};\n\nmimetypes[339] = { label: \"application/vnd.ms-htmlhelp\"};\n\nmimetypes[340] = { label: \"application/x-mscardfile\"};\n\nmimetypes[341] = { label: \"application/vnd.ms-lrm\"};\n\nmimetypes[342] = { label: \"application/x-msmediaview\"};\n\nmimetypes[343] = { label: \"application/x-msmoney\"};\n\nmimetypes[344] = { label: \"application/vnd.openxmlformats-officedocument.presentationml.presentation\"};\n\nmimetypes[345] = { label: \"application/vnd.openxmlformats-officedocument.presentationml.slide\"};\n\nmimetypes[346] = { label: \"application/vnd.openxmlformats-officedocument.presentationml.slideshow\"};\n\nmimetypes[347] = { label: \"application/vnd.openxmlformats-officedocument.presentationml.template\"};\n\nmimetypes[348] = { label: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"};\n\nmimetypes[349] = { label: \"application/vnd.openxmlformats-officedocument.spreadsheetml.template\"};\n\nmimetypes[350] = { label: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"};\n\nmimetypes[351] = { label: \"application/vnd.openxmlformats-officedocument.wordprocessingml.template\"};\n\nmimetypes[352] = { label: \"application/x-msbinder\"};\n\nmimetypes[353] = { label: \"application/vnd.ms-officetheme\"};\n\nmimetypes[354] = { label: \"application/onenote\"};\n\nmimetypes[355] = { label: \"audio/vnd.ms-playready.media.pya\"};\n\nmimetypes[356] = { label: \"video/vnd.ms-playready.media.pyv\"};\n\nmimetypes[357] = { label: \"application/vnd.ms-powerpoint\"};\n\nmimetypes[358] = { label: \"application/vnd.ms-powerpoint.addin.macroenabled.12\"};\n\nmimetypes[359] = { label: \"application/vnd.ms-powerpoint.slide.macroenabled.12\"};\n\nmimetypes[360] = { label: \"application/vnd.ms-powerpoint.presentation.macroenabled.12\"};\n\nmimetypes[361] = { label: \"application/vnd.ms-powerpoint.slideshow.macroenabled.12\"};\n\nmimetypes[362] = { label: \"application/vnd.ms-powerpoint.template.macroenabled.12\"};\n\nmimetypes[363] = { label: \"application/vnd.ms-project\"};\n\nmimetypes[364] = { label: \"application/x-mspublisher\"};\n\nmimetypes[365] = { label: \"application/x-msschedule\"};\n\nmimetypes[366] = { label: \"application/x-silverlight-app\"};\n\nmimetypes[367] = { label: \"application/vnd.ms-pki.stl\"};\n\nmimetypes[368] = { label: \"application/vnd.ms-pki.seccat\"};\n\nmimetypes[369] = { label: \"application/vnd.visio\"};\n\nmimetypes[370] = { label: \"application/vnd.visio2013\"};\n\nmimetypes[371] = { label: \"video/x-ms-wm\"};\n\nmimetypes[372] = { label: \"audio/x-ms-wma\"};\n\nmimetypes[373] = { label: \"audio/x-ms-wax\"};\n\nmimetypes[374] = { label: \"video/x-ms-wmx\"};\n\nmimetypes[375] = { label: \"application/x-ms-wmd\"};\n\nmimetypes[376] = { label: \"application/vnd.ms-wpl\"};\n\nmimetypes[377] = { label: \"application/x-ms-wmz\"};\n\nmimetypes[378] = { label: \"video/x-ms-wmv\"};\n\nmimetypes[379] = { label: \"video/x-ms-wvx\"};\n\nmimetypes[380] = { label: \"application/x-msmetafile\"};\n\nmimetypes[381] = { label: \"application/x-msterminal\"};\n\nmimetypes[382] = { label: \"application/msword\"};\n\nmimetypes[383] = { label: \"application/vnd.ms-word.document.macroenabled.12\"};\n\nmimetypes[384] = { label: \"application/vnd.ms-word.template.macroenabled.12\"};\n\nmimetypes[385] = { label: \"application/x-mswrite\"};\n\nmimetypes[386] = { label: \"application/vnd.ms-works\"};\n\nmimetypes[387] = { label: \"application/x-ms-xbap\"};\n\nmimetypes[388] = { label: \"application/vnd.ms-xpsdocument\"};\n\nmimetypes[389] = { label: \"audio/midi\"};\n\nmimetypes[390] = { label: \"application/vnd.ibm.minipay\"};\n\nmimetypes[391] = { label: \"application/vnd.ibm.modcap\"};\n\nmimetypes[392] = { label: \"application/vnd.jcp.javame.midlet-rms\"};\n\nmimetypes[393] = { label: \"application/vnd.tmobile-livetv\"};\n\nmimetypes[394] = { label: \"application/x-mobipocket-ebook\"};\n\nmimetypes[395] = { label: \"application/vnd.mobius.mbk\"};\n\nmimetypes[396] = { label: \"application/vnd.mobius.dis\"};\n\nmimetypes[397] = { label: \"application/vnd.mobius.plc\"};\n\nmimetypes[398] = { label: \"application/vnd.mobius.mqy\"};\n\nmimetypes[399] = { label: \"application/vnd.mobius.msl\"};\n\nmimetypes[400] = { label: \"application/vnd.mobius.txf\"};\n\nmimetypes[401] = { label: \"application/vnd.mobius.daf\"};\n\nmimetypes[402] = { label: \"text/vnd.fly\"};\n\nmimetypes[403] = { label: \"application/vnd.mophun.certificate\"};\n\nmimetypes[404] = { label: \"application/vnd.mophun.application\"};\n\nmimetypes[405] = { label: \"video/mj2\"};\n\nmimetypes[406] = { label: \"audio/mpeg\"};\n\nmimetypes[407] = { label: \"video/vnd.mpegurl\"};\n\nmimetypes[408] = { label: \"video/mpeg\"};\n\nmimetypes[409] = { label: \"application/mp21\"};\n\nmimetypes[410] = { label: \"audio/mp4\"};\n\nmimetypes[411] = { label: \"video/mp4\"};\n\nmimetypes[412] = { label: \"application/mp4\"};\n\nmimetypes[413] = { label: \"application/vnd.apple.mpegurl\"};\n\nmimetypes[414] = { label: \"application/vnd.musician\"};\n\nmimetypes[415] = { label: \"application/vnd.muvee.style\"};\n\nmimetypes[416] = { label: \"application/xv+xml\"};\n\nmimetypes[417] = { label: \"application/vnd.nokia.n-gage.data\"};\n\nmimetypes[418] = { label: \"application/vnd.nokia.n-gage.symbian.install\"};\n\nmimetypes[419] = { label: \"application/x-dtbncx+xml\"};\n\nmimetypes[420] = { label: \"application/x-netcdf\"};\n\nmimetypes[421] = { label: \"application/vnd.neurolanguage.nlu\"};\n\nmimetypes[422] = { label: \"application/vnd.dna\"};\n\nmimetypes[423] = { label: \"application/vnd.noblenet-directory\"};\n\nmimetypes[424] = { label: \"application/vnd.noblenet-sealer\"};\n\nmimetypes[425] = { label: \"application/vnd.noblenet-web\"};\n\nmimetypes[426] = { label: \"application/vnd.nokia.radio-preset\"};\n\nmimetypes[427] = { label: \"application/vnd.nokia.radio-presets\"};\n\nmimetypes[428] = { label: \"text/n3\"};\n\nmimetypes[429] = { label: \"application/vnd.novadigm.edm\"};\n\nmimetypes[430] = { label: \"application/vnd.novadigm.edx\"};\n\nmimetypes[431] = { label: \"application/vnd.novadigm.ext\"};\n\nmimetypes[432] = { label: \"application/vnd.flographit\"};\n\nmimetypes[433] = { label: \"audio/vnd.nuera.ecelp4800\"};\n\nmimetypes[434] = { label: \"audio/vnd.nuera.ecelp7470\"};\n\nmimetypes[435] = { label: \"audio/vnd.nuera.ecelp9600\"};\n\nmimetypes[436] = { label: \"application/oda\"};\n\nmimetypes[437] = { label: \"application/ogg\"};\n\nmimetypes[438] = { label: \"audio/ogg\"};\n\nmimetypes[439] = { label: \"video/ogg\"};\n\nmimetypes[440] = { label: \"application/vnd.oma.dd2+xml\"};\n\nmimetypes[441] = { label: \"application/vnd.oasis.opendocument.text-web\"};\n\nmimetypes[442] = { label: \"application/oebps-package+xml\"};\n\nmimetypes[443] = { label: \"application/vnd.intu.qbo\"};\n\nmimetypes[444] = { label: \"application/vnd.openofficeorg.extension\"};\n\nmimetypes[445] = { label: \"application/vnd.yamaha.openscoreformat\"};\n\nmimetypes[446] = { label: \"audio/webm\"};\n\nmimetypes[447] = { label: \"video/webm\"};\n\nmimetypes[448] = { label: \"application/vnd.oasis.opendocument.chart\"};\n\nmimetypes[449] = { label: \"application/vnd.oasis.opendocument.chart-template\"};\n\nmimetypes[450] = { label: \"application/vnd.oasis.opendocument.database\"};\n\nmimetypes[451] = { label: \"application/vnd.oasis.opendocument.formula\"};\n\nmimetypes[452] = { label: \"application/vnd.oasis.opendocument.formula-template\"};\n\nmimetypes[453] = { label: \"application/vnd.oasis.opendocument.graphics\"};\n\nmimetypes[454] = { label: \"application/vnd.oasis.opendocument.graphics-template\"};\n\nmimetypes[455] = { label: \"application/vnd.oasis.opendocument.image\"};\n\nmimetypes[456] = { label: \"application/vnd.oasis.opendocument.image-template\"};\n\nmimetypes[457] = { label: \"application/vnd.oasis.opendocument.presentation\"};\n\nmimetypes[458] = { label: \"application/vnd.oasis.opendocument.presentation-template\"};\n\nmimetypes[459] = { label: \"application/vnd.oasis.opendocument.spreadsheet\"};\n\nmimetypes[460] = { label: \"application/vnd.oasis.opendocument.spreadsheet-template\"};\n\nmimetypes[461] = { label: \"application/vnd.oasis.opendocument.text\"};\n\nmimetypes[462] = { label: \"application/vnd.oasis.opendocument.text-master\"};\n\nmimetypes[463] = { label: \"application/vnd.oasis.opendocument.text-template\"};\n\nmimetypes[464] = { label: \"image/ktx\"};\n\nmimetypes[465] = { label: \"application/vnd.sun.xml.calc\"};\n\nmimetypes[466] = { label: \"application/vnd.sun.xml.calc.template\"};\n\nmimetypes[467] = { label: \"application/vnd.sun.xml.draw\"};\n\nmimetypes[468] = { label: \"application/vnd.sun.xml.draw.template\"};\n\nmimetypes[469] = { label: \"application/vnd.sun.xml.impress\"};\n\nmimetypes[470] = { label: \"application/vnd.sun.xml.impress.template\"};\n\nmimetypes[471] = { label: \"application/vnd.sun.xml.math\"};\n\nmimetypes[472] = { label: \"application/vnd.sun.xml.writer\"};\n\nmimetypes[473] = { label: \"application/vnd.sun.xml.writer.global\"};\n\nmimetypes[474] = { label: \"application/vnd.sun.xml.writer.template\"};\n\nmimetypes[475] = { label: \"application/x-font-otf\"};\n\nmimetypes[476] = { label: \"application/vnd.yamaha.openscoreformat.osfpvg+xml\"};\n\nmimetypes[477] = { label: \"application/vnd.osgi.dp\"};\n\nmimetypes[478] = { label: \"application/vnd.palm\"};\n\nmimetypes[479] = { label: \"text/x-pascal\"};\n\nmimetypes[480] = { label: \"application/vnd.pawaafile\"};\n\nmimetypes[481] = { label: \"application/vnd.hp-pclxl\"};\n\nmimetypes[482] = { label: \"application/vnd.picsel\"};\n\nmimetypes[483] = { label: \"image/x-pcx\"};\n\nmimetypes[484] = { label: \"image/vnd.adobe.photoshop\"};\n\nmimetypes[485] = { label: \"application/pics-rules\"};\n\nmimetypes[486] = { label: \"image/x-pict\"};\n\nmimetypes[487] = { label: \"application/x-chat\"};\n\nmimetypes[488] = { label: \"application/pkcs10\"};\n\nmimetypes[489] = { label: \"application/x-pkcs12\"};\n\nmimetypes[490] = { label: \"application/pkcs7-mime\"};\n\nmimetypes[491] = { label: \"application/pkcs7-signature\"};\n\nmimetypes[492] = { label: \"application/x-pkcs7-certreqresp\"};\n\nmimetypes[493] = { label: \"application/x-pkcs7-certificates\"};\n\nmimetypes[494] = { label: \"application/pkcs8\"};\n\nmimetypes[495] = { label: \"application/vnd.pocketlearn\"};\n\nmimetypes[496] = { label: \"image/x-portable-anymap\"};\n\nmimetypes[497] = { label: \"image/x-portable-bitmap\"};\n\nmimetypes[498] = { label: \"application/x-font-pcf\"};\n\nmimetypes[499] = { label: \"application/font-tdpfr\"};\n\nmimetypes[500] = { label: \"application/x-chess-pgn\"};\n\nmimetypes[501] = { label: \"image/x-portable-graymap\"};\n\nmimetypes[502] = { label: \"image/png\"};\n\nmimetypes[503] = { label: \"image/x-citrix-png\"};\n\nmimetypes[504] = { label: \"image/x-png\"};\n\nmimetypes[505] = { label: \"image/x-portable-pixmap\"};\n\nmimetypes[506] = { label: \"application/pskc+xml\"};\n\nmimetypes[507] = { label: \"application/vnd.ctc-posml\"};\n\nmimetypes[508] = { label: \"application/postscript\"};\n\nmimetypes[509] = { label: \"application/x-font-type1\"};\n\nmimetypes[510] = { label: \"application/vnd.powerbuilder6\"};\n\nmimetypes[511] = { label: \"application/pgp-encrypted\"};\n\nmimetypes[512] = { label: \"application/pgp-signature\"};\n\nmimetypes[513] = { label: \"application/vnd.previewsystems.box\"};\n\nmimetypes[514] = { label: \"application/vnd.pvi.ptid1\"};\n\nmimetypes[515] = { label: \"application/pls+xml\"};\n\nmimetypes[516] = { label: \"application/vnd.pg.format\"};\n\nmimetypes[517] = { label: \"application/vnd.pg.osasli\"};\n\nmimetypes[518] = { label: \"text/prs.lines.tag\"};\n\nmimetypes[519] = { label: \"application/x-font-linux-psf\"};\n\nmimetypes[520] = { label: \"application/vnd.publishare-delta-tree\"};\n\nmimetypes[521] = { label: \"application/vnd.pmi.widget\"};\n\nmimetypes[522] = { label: \"application/vnd.quark.quarkxpress\"};\n\nmimetypes[523] = { label: \"application/vnd.epson.esf\"};\n\nmimetypes[524] = { label: \"application/vnd.epson.msf\"};\n\nmimetypes[525] = { label: \"application/vnd.epson.ssf\"};\n\nmimetypes[526] = { label: \"application/vnd.epson.quickanime\"};\n\nmimetypes[527] = { label: \"application/vnd.intu.qfx\"};\n\nmimetypes[528] = { label: \"video/quicktime\"};\n\nmimetypes[529] = { label: \"application/x-rar-compressed\"};\n\nmimetypes[530] = { label: \"audio/x-pn-realaudio\"};\n\nmimetypes[531] = { label: \"audio/x-pn-realaudio-plugin\"};\n\nmimetypes[532] = { label: \"application/rsd+xml\"};\n\nmimetypes[533] = { label: \"application/vnd.rn-realmedia\"};\n\nmimetypes[534] = { label: \"application/vnd.realvnc.bed\"};\n\nmimetypes[535] = { label: \"application/vnd.recordare.musicxml\"};\n\nmimetypes[536] = { label: \"application/vnd.recordare.musicxml+xml\"};\n\nmimetypes[537] = { label: \"application/relax-ng-compact-syntax\"};\n\nmimetypes[538] = { label: \"application/vnd.data-vision.rdz\"};\n\nmimetypes[539] = { label: \"application/rdf+xml\"};\n\nmimetypes[540] = { label: \"application/vnd.cloanto.rp9\"};\n\nmimetypes[541] = { label: \"application/vnd.jisp\"};\n\nmimetypes[542] = { label: \"application/rtf\"};\n\nmimetypes[543] = { label: \"text/richtext\"};\n\nmimetypes[544] = { label: \"application/vnd.route66.link66+xml\"};\n\nmimetypes[545] = { label: \"application/rss+xml\"};\n\nmimetypes[546] = { label: \"application/shf+xml\"};\n\nmimetypes[547] = { label: \"application/vnd.sailingtracker.track\"};\n\nmimetypes[548] = { label: \"image/svg+xml\"};\n\nmimetypes[549] = { label: \"application/vnd.sus-calendar\"};\n\nmimetypes[550] = { label: \"application/sru+xml\"};\n\nmimetypes[551] = { label: \"application/set-payment-initiation\"};\n\nmimetypes[552] = { label: \"application/set-registration-initiation\"};\n\nmimetypes[553] = { label: \"application/vnd.sema\"};\n\nmimetypes[554] = { label: \"application/vnd.semd\"};\n\nmimetypes[555] = { label: \"application/vnd.semf\"};\n\nmimetypes[556] = { label: \"application/vnd.seemail\"};\n\nmimetypes[557] = { label: \"application/x-font-snf\"};\n\nmimetypes[558] = { label: \"application/scvp-vp-request\"};\n\nmimetypes[559] = { label: \"application/scvp-vp-response\"};\n\nmimetypes[560] = { label: \"application/scvp-cv-request\"};\n\nmimetypes[561] = { label: \"application/scvp-cv-response\"};\n\nmimetypes[562] = { label: \"application/sdp\"};\n\nmimetypes[563] = { label: \"text/x-setext\"};\n\nmimetypes[564] = { label: \"video/x-sgi-movie\"};\n\nmimetypes[565] = { label: \"application/vnd.shana.informed.formdata\"};\n\nmimetypes[566] = { label: \"application/vnd.shana.informed.formtemplate\"};\n\nmimetypes[567] = { label: \"application/vnd.shana.informed.interchange\"};\n\nmimetypes[568] = { label: \"application/vnd.shana.informed.package\"};\n\nmimetypes[569] = { label: \"application/thraud+xml\"};\n\nmimetypes[570] = { label: \"application/x-shar\"};\n\nmimetypes[571] = { label: \"image/x-rgb\"};\n\nmimetypes[572] = { label: \"application/vnd.epson.salt\"};\n\nmimetypes[573] = { label: \"application/vnd.accpac.simply.aso\"};\n\nmimetypes[574] = { label: \"application/vnd.accpac.simply.imp\"};\n\nmimetypes[575] = { label: \"application/vnd.simtech-mindmapper\"};\n\nmimetypes[576] = { label: \"application/vnd.commonspace\"};\n\nmimetypes[577] = { label: \"application/vnd.yamaha.smaf-audio\"};\n\nmimetypes[578] = { label: \"application/vnd.smaf\"};\n\nmimetypes[579] = { label: \"application/vnd.yamaha.smaf-phrase\"};\n\nmimetypes[580] = { label: \"application/vnd.smart.teacher\"};\n\nmimetypes[581] = { label: \"application/vnd.svd\"};\n\nmimetypes[582] = { label: \"application/sparql-query\"};\n\nmimetypes[583] = { label: \"application/sparql-results+xml\"};\n\nmimetypes[584] = { label: \"application/srgs\"};\n\nmimetypes[585] = { label: \"application/srgs+xml\"};\n\nmimetypes[586] = { label: \"application/ssml+xml\"};\n\nmimetypes[587] = { label: \"application/vnd.koan\"};\n\nmimetypes[588] = { label: \"text/sgml\"};\n\nmimetypes[589] = { label: \"application/vnd.stardivision.calc\"};\n\nmimetypes[590] = { label: \"application/vnd.stardivision.draw\"};\n\nmimetypes[591] = { label: \"application/vnd.stardivision.impress\"};\n\nmimetypes[592] = { label: \"application/vnd.stardivision.math\"};\n\nmimetypes[593] = { label: \"application/vnd.stardivision.writer\"};\n\nmimetypes[594] = { label: \"application/vnd.stardivision.writer-global\"};\n\nmimetypes[595] = { label: \"application/vnd.stepmania.stepchart\"};\n\nmimetypes[596] = { label: \"application/x-stuffit\"};\n\nmimetypes[597] = { label: \"application/x-stuffitx\"};\n\nmimetypes[598] = { label: \"application/vnd.solent.sdkm+xml\"};\n\nmimetypes[599] = { label: \"application/vnd.olpc-sugar\"};\n\nmimetypes[600] = { label: \"audio/basic\"};\n\nmimetypes[601] = { label: \"application/vnd.wqd\"};\n\nmimetypes[602] = { label: \"application/vnd.symbian.install\"};\n\nmimetypes[603] = { label: \"application/smil+xml\"};\n\nmimetypes[604] = { label: \"application/vnd.syncml+xml\"};\n\nmimetypes[605] = { label: \"application/vnd.syncml.dm+wbxml\"};\n\nmimetypes[606] = { label: \"application/vnd.syncml.dm+xml\"};\n\nmimetypes[607] = { label: \"application/x-sv4cpio\"};\n\nmimetypes[608] = { label: \"application/x-sv4crc\"};\n\nmimetypes[609] = { label: \"application/sbml+xml\"};\n\nmimetypes[610] = { label: \"text/tab-separated-values\"};\n\nmimetypes[611] = { label: \"image/tiff\"};\n\nmimetypes[612] = { label: \"application/vnd.tao.intent-module-archive\"};\n\nmimetypes[613] = { label: \"application/x-tar\"};\n\nmimetypes[614] = { label: \"application/x-tcl\"};\n\nmimetypes[615] = { label: \"application/x-tex\"};\n\nmimetypes[616] = { label: \"application/x-tex-tfm\"};\n\nmimetypes[617] = { label: \"application/tei+xml\"};\n\nmimetypes[618] = { label: \"text/plain\"};\n\nmimetypes[619] = { label: \"application/vnd.spotfire.dxp\"};\n\nmimetypes[620] = { label: \"application/vnd.spotfire.sfs\"};\n\nmimetypes[621] = { label: \"application/timestamped-data\"};\n\nmimetypes[622] = { label: \"application/vnd.trid.tpt\"};\n\nmimetypes[623] = { label: \"application/vnd.triscape.mxs\"};\n\nmimetypes[624] = { label: \"text/troff\"};\n\nmimetypes[625] = { label: \"application/vnd.trueapp\"};\n\nmimetypes[626] = { label: \"application/x-font-ttf\"};\n\nmimetypes[627] = { label: \"text/turtle\"};\n\nmimetypes[628] = { label: \"application/vnd.umajin\"};\n\nmimetypes[629] = { label: \"application/vnd.uoml+xml\"};\n\nmimetypes[630] = { label: \"application/vnd.unity\"};\n\nmimetypes[631] = { label: \"application/vnd.ufdl\"};\n\nmimetypes[632] = { label: \"text/uri-list\"};\n\nmimetypes[633] = { label: \"application/vnd.uiq.theme\"};\n\nmimetypes[634] = { label: \"application/x-ustar\"};\n\nmimetypes[635] = { label: \"text/x-uuencode\"};\n\nmimetypes[636] = { label: \"text/x-vcalendar\"};\n\nmimetypes[637] = { label: \"text/x-vcard\"};\n\nmimetypes[638] = { label: \"application/x-cdlink\"};\n\nmimetypes[639] = { label: \"application/vnd.vsf\"};\n\nmimetypes[640] = { label: \"model/vrml\"};\n\nmimetypes[641] = { label: \"application/vnd.vcx\"};\n\nmimetypes[642] = { label: \"model/vnd.mts\"};\n\nmimetypes[643] = { label: \"model/vnd.vtu\"};\n\nmimetypes[644] = { label: \"application/vnd.visionary\"};\n\nmimetypes[645] = { label: \"video/vnd.vivo\"};\n\nmimetypes[646] = { label: \"application/ccxml+xml,\"};\n\nmimetypes[647] = { label: \"application/voicexml+xml\"};\n\nmimetypes[648] = { label: \"application/x-wais-source\"};\n\nmimetypes[649] = { label: \"application/vnd.wap.wbxml\"};\n\nmimetypes[650] = { label: \"image/vnd.wap.wbmp\"};\n\nmimetypes[651] = { label: \"audio/x-wav\"};\n\nmimetypes[652] = { label: \"application/davmount+xml\"};\n\nmimetypes[653] = { label: \"application/x-font-woff\"};\n\nmimetypes[654] = { label: \"application/wspolicy+xml\"};\n\nmimetypes[655] = { label: \"image/webp\"};\n\nmimetypes[656] = { label: \"application/vnd.webturbo\"};\n\nmimetypes[657] = { label: \"application/widget\"};\n\nmimetypes[658] = { label: \"application/winhlp\"};\n\nmimetypes[659] = { label: \"text/vnd.wap.wml\"};\n\nmimetypes[660] = { label: \"text/vnd.wap.wmlscript\"};\n\nmimetypes[661] = { label: \"application/vnd.wap.wmlscriptc\"};\n\nmimetypes[662] = { label: \"application/vnd.wordperfect\"};\n\nmimetypes[663] = { label: \"application/vnd.wt.stf\"};\n\nmimetypes[664] = { label: \"application/wsdl+xml\"};\n\nmimetypes[665] = { label: \"image/x-xbitmap\"};\n\nmimetypes[666] = { label: \"image/x-xpixmap\"};\n\nmimetypes[667] = { label: \"image/x-xwindowdump\"};\n\nmimetypes[668] = { label: \"application/x-x509-ca-cert\"};\n\nmimetypes[669] = { label: \"application/x-xfig\"};\n\nmimetypes[670] = { label: \"application/xhtml+xml\"};\n\nmimetypes[671] = { label: \"application/xml\"};\n\nmimetypes[672] = { label: \"application/xcap-diff+xml\"};\n\nmimetypes[673] = { label: \"application/xenc+xml\"};\n\nmimetypes[674] = { label: \"application/patch-ops-error+xml\"};\n\nmimetypes[675] = { label: \"application/resource-lists+xml\"};\n\nmimetypes[676] = { label: \"application/rls-services+xml\"};\n\nmimetypes[677] = { label: \"application/resource-lists-diff+xml\"};\n\nmimetypes[678] = { label: \"application/xslt+xml\"};\n\nmimetypes[679] = { label: \"application/xop+xml\"};\n\nmimetypes[680] = { label: \"application/x-xpinstall\"};\n\nmimetypes[681] = { label: \"application/xspf+xml\"};\n\nmimetypes[682] = { label: \"application/vnd.mozilla.xul+xml\"};\n\nmimetypes[683] = { label: \"chemical/x-xyz\"};\n\nmimetypes[684] = { label: \"text/yaml\"};\n\nmimetypes[685] = { label: \"application/yang\"};\n\nmimetypes[686] = { label: \"application/yin+xml\"};\n\nmimetypes[687] = { label: \"application/vnd.zul\"};\n\nmimetypes[688] = { label: \"application/zip\"};\n\nmimetypes[689] = { label: \"application/vnd.handheld-entertainment+xml\"};\n\nmimetypes[690] = { label: \"application/vnd.zzazz.deck+xml\"};\n\nexport default mimetypes;","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Downshift from 'downshift';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\nimport mimeTypes from './MimeTypes';\nimport AuthManager from 'AppData/AuthManager';\nconst suggestions = mimeTypes;\n\nfunction renderInput(inputProps) {\n    const { InputProps, classes, ref, ...other } = inputProps;\n    const isNotCreator = AuthManager.isNotCreator();\n\n    return (\n        <TextField\n            disabled={isNotCreator}\n            InputProps={{\n                inputRef: ref,\n                classes: {\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                },\n                ...InputProps,\n            }}\n            {...other}\n        />\n    );\n}\n\nfunction renderSuggestion({ suggestion, index, itemProps, highlightedIndex, selectedItem }) {\n    const isHighlighted = highlightedIndex === index;\n    const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\n\n    return (\n        <MenuItem\n            {...itemProps}\n            key={suggestion.label}\n            selected={isHighlighted}\n            component=\"div\"\n            style={{\n                fontWeight: isSelected ? 500 : 400,\n            }}\n        >\n            {suggestion.label}\n        </MenuItem>\n    );\n}\nrenderSuggestion.propTypes = {\n    highlightedIndex: PropTypes.number,\n    index: PropTypes.number,\n    itemProps: PropTypes.object,\n    selectedItem: PropTypes.string,\n    suggestion: PropTypes.shape({ label: PropTypes.string }).isRequired,\n};\n\nfunction getSuggestions(value) {\n    const inputValue = deburr(value.trim()).toLowerCase();\n    const inputLength = inputValue.length;\n    let count = 0;\n\n    return inputLength === 0\n        ? []\n        : suggestions.filter(suggestion => {\n              const keep = count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n              if (keep) {\n                  count += 1;\n              }\n\n              return keep;\n          });\n}\n\n\nclass SelectContentType extends React.Component {\n    constructor(props) {\n        super(props);\n        debugger;\n        this.isNotCreator = AuthManager.isNotCreator();\n    }\n\n    state = {\n        inputValue: '',\n        selectedItem: [],\n    };\n    handleKeyDown = event => {\n        const { inputValue, selectedItem } = this.state;\n        if (selectedItem.length && !inputValue.length && event.keyCode === 8) {\n            this.setState({\n                selectedItem: selectedItem.slice(0, selectedItem.length - 1),\n            });\n        }\n    };\n\n    handleInputChange = event => {\n        this.setState({ inputValue: event.target.value });\n    };\n\n    handleChange = item => {\n        let { selectedItem } = this.state;\n\n        if (selectedItem.indexOf(item) === -1) {\n            selectedItem = [...selectedItem, item];\n        }\n        this.props.onChange(selectedItem, this.props.fieldName);\n        this.setState({\n            inputValue: '',\n            selectedItem,\n        });\n    };\n\n    handleDelete = item => () => {\n        this.setState(state => {\n            const selectedItem = [...state.selectedItem];\n            selectedItem.splice(selectedItem.indexOf(item), 1);\n            return { selectedItem };\n        });\n    };\n\n    componentDidMount() {\n        if (this.props.value) {\n            this.setState({ selectedItem: this.props.value });\n        }\n    }\n    render() {\n        const { classes, value } = this.props;\n        const { inputValue, selectedItem } = this.state;\n        return (\n            <Downshift\n                id=\"downshift-multiple\"\n                inputValue={inputValue}\n                onChange={this.handleChange}\n                selectedItem={value}\n            >\n                {({\n                    getInputProps,\n                    getItemProps,\n                    isOpen,\n                    inputValue: inputValue2,\n                    selectedItem: selectedItem2,\n                    highlightedIndex,\n                }) => (\n                    <div className={classes.container}>\n                        {renderInput({\n                            fullWidth: true,\n                            classes,\n                            InputProps: getInputProps({\n                                startAdornment: selectedItem.map(item => (\n                                    <Chip\n                                        key={item}\n                                        tabIndex={-1}\n                                        label={item}\n                                        className={classes.chip}\n                                        clickable={this.isNotCreator}\n                                    />\n                                )),\n                                onChange: this.handleInputChange,\n                                onKeyDown: this.handleKeyDown,\n                            }),\n                        })}\n                        {isOpen ? (\n                            <Paper className={classes.paper} square>\n                                {getSuggestions(inputValue2).map((suggestion, index) =>\n                                    renderSuggestion({\n                                        suggestion,\n                                        index,\n                                        itemProps: getItemProps({ item: suggestion.label }),\n                                        highlightedIndex,\n                                        selectedItem: selectedItem2,\n                                    }),\n                                )}\n                            </Paper>\n                        ) : null}\n                    </div>\n                )}\n            </Downshift>\n        );\n    }\n}\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        height: 250,\n    },\n    container: {\n        flexGrow: 1,\n        position: 'relative',\n    },\n    paper: {\n        position: 'absolute',\n        zIndex: 1,\n        marginTop: theme.spacing.unit,\n        left: 0,\n        right: 0,\n    },\n    chip: {\n        margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`,\n    },\n    inputRoot: {\n        flexWrap: 'wrap',\n    },\n    inputInput: {\n        width: 'auto',\n        flexGrow: 1,\n    },\n    divider: {\n        height: theme.spacing.unit * 2,\n    },\n});\n\nSelectContentType.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SelectContentType);\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport DoneIcon from '@material-ui/icons/CheckCircle';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Select from '@material-ui/core/Select';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport AuthManager from 'AppData/AuthManager';\n\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    dense: {\n        marginTop: theme.spacing.unit,\n    },\n    menu: {\n        width: 200,\n    },\n    button: {\n        minWidth: theme.spacing.unit * 2,\n        padding: 0,\n    },\n    textArea: {\n        flex: 1,\n    },\n});\n\nclass InlineEditableField extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editable: false,\n            newValue: null,\n            initValue: null,\n        };\n        this.editInlineToggle = this.editInlineToggle.bind(this);\n        this.saveField = this.saveField.bind(this);\n        this.isNotCreator = AuthManager.isNotCreator();\n    }\n    editInlineToggle() {\n        this.setState({ editable: !this.state.editable, newValue: this.props.fieldValue });\n    }\n\n    handleChange = name => (event) => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n    static getDerivedStateFromProps(props, current_state) {\n        if (current_state.initValue !== props.fieldValue) {\n            return {\n                newValue: props.fieldValue,\n            };\n        }\n        return null;\n    }\n    componentDidMount() {\n        this.setState({ newValue: this.props.fieldValue, initValue: this.props.fieldValue });\n    }\n\n    saveField() {\n        this.setState({ editable: false });\n        this.props.saveFieldCallback(this.props.fieldName, this.state.newValue, this.fieldIndex);\n    }\n    render() {\n        const { classes, intl } = this.props;\n\n        if (this.state.editable) {\n            if (typeof this.props.fieldIndex === 'number') {\n                this.fieldIndex = this.props.fieldIndex;\n            } else {\n                this.fieldIndex = false;\n            }\n            return (\n                <form className={classes.container} noValidate autoComplete='off' onSubmit={this.saveField}>\n                    {this.props.type === 'select' && (\n                        <Select\n                            native\n                            value={this.state.newValue}\n                            onChange={this.handleChange('newValue')}\n                            disabled={this.isNotCreator}\n                            inputProps={{\n                                name: 'newValue',\n                                id: 'newValue-native-simple',\n                            }}\n                        >\n                            {this.props.defaultValues.map(val => (\n                                <option value={val}>{val}</option>\n                            ))}\n                        </Select>\n                    )}\n                    {this.props.type === 'input' &&\n                    <input type='text' onChange={this.handleChange('newValue')} value={this.state.newValue}\n                           disabled={this.isNotCreator}\n                    />}\n                    {this.props.type === 'textarea' &&\n                    <TextField\n                        id='standard-textarea'\n                        placeholder={intl.formatMessage({\n                            id: 'Apis.Details.Resources.InlineEditableField.placeholder',\n                            defaultMessage: 'Placeholder',\n                        })}\n                        multiline\n                        className={classes.textArea}\n                        margin='normal'\n                        onChange={this.handleChange('newValue')}\n                        value={this.state.newValue}\n                        disabled={this.isNotCreator}\n                    />}\n                    <Button className={classes.button} onClick={this.saveField} disabled={this.isNotCreator}>\n                        <DoneIcon />\n                    </Button>\n                    <Button className={classes.button} onClick={this.editInlineToggle} disabled={this.isNotCreator}>\n                        <CancelIcon />\n                    </Button>\n                </form>\n            );\n            {\n                /* <input type=\"text\" className=\"inline-edit-input\" defaultValue={this.props.fieldValue} onChange={this.handleValueChange}/> */\n            }\n        } else {\n            return (\n                <span onClick={this.editInlineToggle} className='fieldView'>\n                    {this.state.newValue ?\n                        <span>{this.state.newValue}</span> :\n                        this.props.initText ?\n                            <span>{this.props.initText}</span>\n                            : (<span>\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.InlineEditableField.click.to.add'\n                                    defaultMessage='Click to add'\n                                />\n                            </span>)\n                    }\n                </span>\n            );\n        }\n    }\n}\n\nInlineEditableField.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(InlineEditableField));\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Delete from '@material-ui/icons/Delete';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {Icon, IconButton, Typography} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport classNames from 'classnames';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SelectContentType from './SelectContentType';\nimport InlineEditableField from './InlineEditableField';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport AuthManager from 'AppData/AuthManager';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 400,\n    },\n    mainTitle: {\n        paddingLeft: 20,\n    },\n    scopes: {\n        width: 400,\n    },\n    divider: {\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    chip: {\n        margin: theme.spacing.unit,\n        color: theme.palette.text.secondary,\n        minWidth: 100,\n    },\n    chipActive: {\n        margin: theme.spacing.unit,\n        color: theme.palette.text.secondary,\n        background: theme.palette.background.active,\n        minWidth: 100,\n        borderRadius: theme.shape.borderRadius,\n        cursor: 'pointer',\n    },\n    paper: {\n        padding: 20,\n    },\n    link: {\n        cursor: 'pointer',\n    },\n    listItem: {\n        paddingLeft: 0,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    formControl: {\n        paddingRight: 0,\n        marginRight: 0,\n    },\n    resourceRoot: {\n        background: theme.palette.grey['100'],\n        paddingLeft: theme.spacing.unit,\n        paddingRight: theme.spacing.unit,\n        borderRadius: theme.shape.borderRadius,\n        marginBottom: theme.spacing.unit,\n    },\n    deleteButton: {\n        marginLeft: 'auto',\n    },\n    pathDisplay: {\n        marginRight: theme.spacing.unit * 2,\n        marginLeft: theme.spacing.unit * 2,\n    },\n    descriptionWrapper: {\n        paddingTop: theme.spacing.unit,\n        paddingBottom: theme.spacing.unit,\n    },\n    scopeSelect: {\n        width: '100%',\n    },\n    selectWidth: {\n        margin: theme.spacing.unit * 1,\n        minWidth: 120,\n    },\n    descriptionWrapperUp: {\n        paddingBottom: '0 !important',\n    },\n    addParamRow: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    propsForm: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    deleteLink: {\n        cursor: 'pointer',\n    },\n    row: {\n        '& td': {\n            borderBottom: 'none',\n            verticalAlign: 'bottom',\n            width: '33%',\n            paddingLeft: 0,\n        },\n    },\n});\n\nclass Resource extends React.Component {\n    /**\n     *\n     * @param {any} props @inheritdoc\n     */\n    constructor(props) {\n        super(props);\n        let tempScopes = [];\n        if (this.props.methodData.security && this.props.methodData.security.length !== 0) {\n            this.props.methodData.security.map((object, i) => {\n                if (object.OAuth2Security) {\n                    tempScopes = object.OAuth2Security;\n                }\n            });\n        }\n        this.state = {\n            visible: false,\n            method: this.props.methodData,\n            scopes: null,\n            deleteChecked: false,\n            newPropName: '',\n        };\n        this.propsSubmitHandler = this.propsSubmitHandler.bind(this);\n        this.saveFieldCallback = this.saveFieldCallback.bind(this);\n        this.toggleMethodData = this.toggleMethodData.bind(this);\n        this.deleteResource = this.deleteResource.bind(this);\n        this.handleScopeChange = this.handleScopeChange.bind(this);\n        this.changeContentTypes = this.changeContentTypes.bind(this);\n        this.handlePolicyChange = this.handlePolicyChange.bind(this);\n        this.handleAuthTypeChange = this.handleAuthTypeChange.bind(this);\n        this.isNotCreator = AuthManager.isNotCreator();\n    }\n    componentDidMount() {\n        this.props.onRef(this);\n    }\n    componentWillUnmount() {\n        this.props.onRef(undefined);\n    }\n    handleScopeChange(e) {\n        this.handleMethodChangeInSwaggerRoot('x-scope', e.target.value);\n    }\n    handlePolicyChange(e)  {\n        this.handleMethodChangeInSwaggerRoot('x-throttling-tier', e.target.value);\n    }\n    handleAuthTypeChange(e) {\n        this.handleMethodChangeInSwaggerRoot('x-auth-type', e.target.value);\n    }\n    handleMethodChangeInSwaggerRoot(key, value) {\n        const tempMethod = this.state.method;\n        tempMethod[key] = value;\n        this.setState({ method: tempMethod });\n        this.props.updatePath(this.props.path, this.props.method, this.state.method);\n    }\n    propsSubmitHandler(e) {\n        e.preventDefault();\n        const defaultParams = {\n            name: this.state.newPropName,\n            description: '',\n            required: false,\n            in: 'query',\n            type: 'string',\n        };\n        if(!this.state.method.parameters) {\n            this.state.method.parameters = [];\n        }\n        this.state.method.parameters.push(defaultParams);\n        this.props.updatePath(this.props.path, this.props.method, this.state.method);\n    }\n    onChangePropName = (e) => {\n        this.setState({ newPropName: e.target.value });\n    };\n    deleteParam(i) {\n        if (i > -1) {\n            this.setState((state, props) => {\n                const method = JSON.parse(JSON.stringify(state.method));\n                method.parameters.splice(i, 1);\n                props.updatePath(props.path, props.method, method);\n                return { method };\n            });\n        }\n    }\n    saveFieldCallback(fieldName, fieldValue, fieldIndex) {\n        if (fieldName.indexOf('.') !== -1) {\n            const multiLevelFieldName = fieldName.split('param.')[1];\n            const tmpPath = this.state.method;\n            tmpPath.parameters[fieldIndex][multiLevelFieldName] = fieldValue;\n            this.setState({ method: tmpPath });\n        } else {\n            const tmpPath = this.state.method;\n            tmpPath[fieldName] = fieldValue;\n            this.setState({ method: tmpPath });\n        }\n        this.props.updatePath(this.props.path, this.props.method, this.state.method);\n    }\n    toggleMethodData() {\n        this.setState({ visible: !this.state.visible });\n    }\n    deleteResource() {\n        /* We set null and call the update method of the Resources class */\n        this.props.updatePath(this.props.path, this.props.method, null);\n    }\n    toggleDeleteCheck(checkState) {\n        this.setState({ deleteChecked: checkState });\n        this.forceUpdate();\n    }\n    handleDeleteCheck = (path, method) => (event) => {\n        this.setState({ deleteChecked: event.target.checked });\n        this.props.addRemoveToDeleteList(path, method);\n    };\n    changeContentTypes(contentTypes, fieldName) {\n        if (contentTypes && contentTypes.length > 0) {\n            this.setState((state, props) => {\n                state.method[fieldName] = contentTypes;\n                props.updatePath(props.path, props.method, state.method);\n                return { method: state.method };\n            });\n        }\n    }\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const {\n            classes, method, path, scopes, theme, intl, policyLevel, isAPIProduct\n        } = this.props;\n        const resource = this.state.method;\n        let chipColor = theme.custom.resourceChipColors ? theme.custom.resourceChipColors[method] : null;\n        let chipTextColor = '#000000';\n        if (!chipColor) {\n            console.log('Check the theme settings. The resourceChipColors is not populated properlly');\n            chipColor = '#cccccc';\n        } else {\n            chipTextColor = theme.palette.getContrastText(theme.custom.resourceChipColors[method]);\n        }\n        return (\n            <div className={classes.resourceRoot}>\n                <div className={classes.listItem}>\n                {isAPIProduct !== true && (\n                    <FormControlLabel control={<Checkbox checked={this.state.deleteChecked} \n                    onChange={this.handleDeleteCheck(path, method)} value='' />} \n                    label='' className={classes.formControl} />\n                )}\n                    <a onClick={this.toggleMethodData} className={classes.link}>\n                        <Chip label={method} style={{ backgroundColor: chipColor, color: chipTextColor }} className={classes.chipActive} />\n                    </a>\n                    <a onClick={this.toggleMethodData}>\n                        <Typography variant='h6' className={classes.pathDisplay}>\n                            {path}\n                        </Typography>\n                    </a>\n                   { isAPIProduct !== true && (\n                        <div> \n                        <InlineEditableField\n                        saveFieldCallback={this.saveFieldCallback}\n                        initText={intl.formatMessage({\n                            id: 'Apis.Details.Resources.Resource.click.here.to.add.summary',\n                            defaultMessage: 'Click here to add summary',\n                        })}\n                        fieldValue={resource.summery}\n                        type='textarea'\n                        fieldName='summery'\n                    />\n                        <IconButton onClick={this.deleteResource} className={classes.deleteButton} disabled={this.isNotCreator}>\n                            <Icon>\n                                delete\n                            </Icon>\n                        </IconButton>\n                    </div>\n                   )}\n                </div>\n                {this.state.visible && (\n                    <div>\n                        <Grid container spacing={7}>\n                            <Grid item xs={12} className={classes.descriptionWrapperUp}>\n                                <Typography variant='caption' className={classes.descriptionWrapper}>\n                                  {isAPIProduct !== true &&\n                                    <InlineEditableField\n                                        saveFieldCallback={this.saveFieldCallback}\n                                        initText={intl.formatMessage({\n                                            id: 'Apis.Details.Resources.Resource.click.here.to.add.description',\n                                            defaultMessage: 'Click here to add description',\n                                        })}\n                                        fieldValue={resource.description}\n                                        type='textarea'\n                                        fieldName='description'\n                                    />\n                                    }\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Table>\n                                    <TableRow className={classes.row}>\n                                        <TableCell>\n                                            <Typography variant='subtitle2'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Resources.Resource.produces'\n                                                    defaultMessage='Produces'\n                                                />\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography variant='subtitle2'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Resources.Resource.consumes'\n                                                    defaultMessage='Consumes'\n                                                />\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography variant='subtitle2'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Resources.Resource.scopes'\n                                                    defaultMessage='Scopes'\n                                                />\n                                            </Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                    <TableRow className={classes.row}>\n                                        <TableCell>\n                                            <SelectContentType\n                                                value={resource.produces}\n                                                onChange={this.changeContentTypes}\n                                                fieldName='produces'\n                                            />\n                                        </TableCell>\n                                        <TableCell>\n                                            <SelectContentType\n                                                value={resource.consumes}\n                                                onChange={this.changeContentTypes}\n                                                fieldName='consumes'\n                                            />\n                                        </TableCell>\n                                        <TableCell>\n                                                <Select className={classes.selectWidth}\n                                                        disabled={this.isNotCreator}\n                                                    value={resource['x-scope']}\n                                                    onChange={this.handleScopeChange}\n                                                    inputProps={{\n                                                        name: 'scopes',\n                                                        id: 'age-simple',\n                                                    }}\n                                                >\n                                                    {scopes.map((tempScope) => (\n                                                            <MenuItem\n                                                                key={tempScope.name}\n                                                                value={tempScope.name}\n                                                            >\n                                                                {tempScope.name}\n                                                            </MenuItem>\n                                                        ))}\n                                                </Select>\n                                        </TableCell>\n                                    </TableRow>\n                                </Table>\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <Table>\n                                    <TableRow className={classes.row}>\n                                        <TableCell>\n                                            <Typography variant='subtitle2'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Resources.Resource.authtype'\n                                                    defaultMessage='Auth Type'\n                                                />\n                                            </Typography>\n                                        </TableCell>\n                                        {policyLevel === 'perResource' &&\n                                        <TableCell>\n                                            <Typography variant='subtitle2'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Resources.Resource.throttling.policy'\n                                                    defaultMessage='Throttling Policy'\n                                                />\n                                            </Typography>\n                                        </TableCell>\n                                        }\n                                    </TableRow>\n                                    <TableRow className={classes.row}>\n                                        <TableCell>\n                                            <Select className={classes.selectWidth}\n                                                value={resource['x-auth-type']}\n                                                onChange={this.handleAuthTypeChange}\n                                                fieldName='Auth Type'\n                                                disabled={this.isNotCreator}\n                                            >\n                                                <MenuItem\n                                                    key='None'\n                                                    value='None'\n                                                >\n                                                    <FormattedMessage\n                                                        id='Apis.Details.Resources.Resource.authType.none'\n                                                        defaultMessage='None'\n                                                    />\n                                                </MenuItem>\n                                                <MenuItem\n                                                    key='Application'\n                                                    value='Application'\n                                                >\n                                                    <FormattedMessage\n                                                        id='Apis.Details.Resources.Resource.authType.application'\n                                                        defaultMessage='Application'\n                                                    />\n                                                </MenuItem>\n                                                <MenuItem\n                                                    key='Application User'\n                                                    value='Application User'\n                                                >\n                                                    <FormattedMessage\n                                                        id='Apis.Details.Resources.Resource.authType.application_user'\n                                                        defaultMessage='Application User'\n                                                    />\n                                                </MenuItem>\n                                                <MenuItem\n                                                    key='Application & Application User'\n                                                    value='Application & Application User'\n                                                >\n                                                    <FormattedMessage\n                                                        id='Apis.Details.Resources.Resource.authType.application_and_user'\n                                                        defaultMessage='Application & Application User'\n                                                    />\n                                                </MenuItem>\n                                            </Select>\n                                        </TableCell>\n                                        {policyLevel==='perResource' &&\n                                        <TableCell>\n                                            <Select className={classes.selectWidth}\n                                                value={resource['x-throttling-tier']}\n                                                onChange={this.handlePolicyChange}\n                                                fieldName='Throttling Policy'\n                                            >\n                                                {this.props.apiPolicies.map((policy) => (\n                                                    <MenuItem\n                                                        key={policy.name}\n                                                        value={policy.name}\n                                                    >\n                                                        {policy.displayName}\n                                                    </MenuItem>\n                                                ))}\n                                            </Select>\n                                        </TableCell>\n                                        }\n                                    </TableRow>\n                                </Table>\n                            </Grid>\n\n                            { isAPIProduct !== true && (\n                            <Grid item xs={12} className={classes.addParamRow}>\n                                <Typography variant='subtitle2'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Resources.Resource.parameters'\n                                        defaultMessage='Parameters'\n                                    />\n                                </Typography>\n                                <form onSubmit={this.propsSubmitHandler} className={classes.propsForm}>\n                                    <TextField\n                                        id='outlined-dense'\n                                        label='Parameter Name'\n                                        className={classNames(classes.textField, classes.dense)}\n                                        margin='dense'\n                                        variant='outlined'\n                                        value={this.state.newPropName}\n                                        onChange={this.onChangePropName}\n                                        disabled={this.isNotCreator}\n                                    />\n                                    <Button\n                                        variant='contained'\n                                        className={classes.button}\n                                        onClick={this.propsSubmitHandler}\n                                        disabled={this.isNotCreator}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Resources.Resource.add'\n                                            defaultMessage='Add'\n                                        />\n                                    </Button>\n                                </form>\n                                {/* <WrappedPropertyAddForm propsSubmitHandler={this.propsSubmitHandler} /> */}\n                            </Grid>\n                            )}\n                            <Grid item xs={12}>\n                                {resource.parameters && resource.parameters.length > 0 && (\n                                    <Table>\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.Resources.Resource.parameter.name'\n                                                        defaultMessage='Parameter Name'\n                                                    />\n                                                </TableCell>\n                                                <TableCell>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.Resources.Resource.description'\n                                                        defaultMessage='Description'\n                                                    />\n                                                </TableCell>\n                                                <TableCell>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.Resources.Resource.parameter.type'\n                                                        defaultMessage='Parameter Type'\n                                                    />\n                                                </TableCell>\n                                                <TableCell>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.Resources.Resource.data.type'\n                                                        defaultMessage='Data Type'\n                                                    />\n                                                </TableCell>\n                                                <TableCell>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.Resources.Resource.required'\n                                                        defaultMessage='Required'\n                                                    />\n                                                </TableCell>\n                                                <TableCell>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.Resources.Resource.delete'\n                                                        defaultMessage='Delete'\n                                                    />\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {resource.parameters.map(function (param, i) {\n                                                return (\n                                                    <TableRow key={i}>\n                                                        <TableCell>\n                                                            <InlineEditableField type='input' saveFieldCallback={this.saveFieldCallback} fieldIndex={i} fieldValue={param.name} fieldName='param.name' />\n                                                        </TableCell>\n                                                        <TableCell>\n                                                            <InlineEditableField type='input' saveFieldCallback={this.saveFieldCallback} fieldIndex={i} fieldValue={param.description} fieldName='param.description' />\n                                                        </TableCell>\n                                                        <TableCell>\n                                                            <InlineEditableField type='select' saveFieldCallback={this.saveFieldCallback} fieldIndex={i} fieldValue={param.in} defaultValues={['body', 'query', 'header', 'formData']} fieldName='param.in' />\n                                                        </TableCell>\n                                                        <TableCell>\n                                                            <InlineEditableField type='input' saveFieldCallback={this.saveFieldCallback} fieldIndex={i} fieldValue={param.type} fieldName='param.type' />\n                                                        </TableCell>\n                                                        <TableCell>\n                                                            <InlineEditableField type='select' saveFieldCallback={this.saveFieldCallback} fieldIndex={i} fieldValue={param.required} defaultValues={['true', 'false']} fieldName='param.required' />\n                                                        </TableCell>\n                                                        <TableCell>\n                                                            {this.isNotCreator ?\n                                                            (\n                                                                <DeleteIcon color={\"disabled\"}/>\n                                                            ): (<a onClick={() => this.deleteParam(i)} className={classes.deleteLink}>\n                                                                    <DeleteIcon />\n                                                                </a>)\n                                                            }\n                                                        </TableCell>\n                                                    </TableRow>\n                                                );\n                                            }, this)}\n                                        </TableBody>\n                                    </Table>\n                                )}\n                            </Grid>\n                        </Grid>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\nResource.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(Resource));\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport ScopesIcon from '@material-ui/icons/VpnKey';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport cloneDeep from 'lodash.clonedeep';\nimport isEmpty from 'lodash/isEmpty';\nimport Api from 'AppData/api';\nimport CONSTS from 'AppData/Constants';\nimport { Progress } from 'AppComponents/Shared';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport { Radio, RadioGroup } from '@material-ui/core';\nimport ResourceNotFound from '../../../Base/Errors/ResourceNotFound';\nimport Resource from './Resource';\nimport AuthManager from 'AppData/AuthManager';\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 400,\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    scopes: {\n        width: 400,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    button: {\n        marginLeft: theme.spacing.unit * 2,\n        textTransform: theme.custom.leftMenuTextStyle,\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    buttonMain: {\n        textTransform: theme.custom.leftMenuTextStyle,\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing.unit * 2,\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addNewHeader: {\n        padding: theme.spacing.unit * 2,\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing.unit * 2,\n    },\n    radioGroup: {\n        display: 'flex',\n        flexDirection: 'row',\n        width: 300,\n    },\n    addResource: {\n        width: 600,\n        marginTop: 0,\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing.unit,\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    imageContainer: {\n        display: 'flex',\n    },\n    formControl: {\n        margin: theme.unit * 3,\n    },\n    group: {\n        margin: theme.unit * 3,\n    },\n    selectWidth: {\n        margin: theme.spacing.unit * 1,\n        minWidth: 120,\n    },\n});\n\n/**\n *  Classed used for resoruces\n */\nclass Resources extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            tmpMethods: [],\n            tmpResourceName: '',\n            paths: {},\n            swagger: {},\n            scopes: [],\n            pathDeleteList: [],\n            allChecked: false,\n            notFound: false,\n            showAddResource: false,\n            showPolicy: false,\n            apiPolicies: [],\n            selectedPolicy: props.api.apiThrottlingPolicy,\n            policyLevel: props.api.apiThrottlingPolicy ? 'perAPI' : 'perResource',\n        };\n        this.api = new Api();\n        this.api_uuid = props.api.id;\n        this.addResources = this.addResources.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onChangeInput = this.onChangeInput.bind(this);\n        this.updatePath = this.updatePath.bind(this);\n        this.addRemoveToDeleteList = this.addRemoveToDeleteList.bind(this);\n        this.updateResources = this.updateResources.bind(this);\n        this.handleScopeChange = this.handleScopeChange.bind(this);\n        this.handleCheckAll = this.handleCheckAll.bind(this);\n        this.deleteSelected = this.deleteSelected.bind(this);\n        this.advancedPolicyTypeChange = this.advancedPolicyTypeChange.bind(this);\n        this.handlePolicyChange = this.handlePolicyChange.bind(this);\n        this.updateAPI = this.updateAPI.bind(this);\n        this.childResources = [];\n        this.isNotCreator = AuthManager.isNotCreator();\n    }\n    handleChange = name => (event) => {\n        const tmpMethods = this.state.tmpMethods;\n        const index = tmpMethods.indexOf(name);\n\n        if (event.target.checked) {\n            // add to tmpMethods\n            if (index === -1) {\n                tmpMethods.push(name);\n            }\n        } else {\n            // remove from tmpMethods if exists\n            if (index > -1) {\n                tmpMethods.splice(index, 1);\n            }\n        }\n        this.setState({ tmpMethods });\n    };\n    onChange(checkedValues) {\n        this.setState({ tmpMethods: checkedValues });\n    }\n    handleScopeChange(e) {\n        this.setState({ scopes: e.target.value });\n        this.handleScopeChangeInSwaggerRoot(e.target.value);\n    }\n    handleScopeChangeInSwaggerRoot(scopes) {\n        const swagger = this.state.swagger;\n        if (swagger.security) {\n            swagger.security.map((object, i) => {\n                if (object.OAuth2Security) {\n                    object.OAuth2Security = scopes;\n                }\n            });\n        } else {\n            swagger.security = [{ OAuth2Security: scopes }];\n        }\n        this.setState({ swagger });\n    }\n\n    componentDidMount() {\n        const api = new Api();\n        const promised_api_object = Api.get(this.api_uuid);\n        promised_api_object\n            .then((api) => {\n                this.setState({ api, scopes: api.scopes });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const status = error.status;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n\n        const promisedResPolicies = Api.policies('api');\n        promisedResPolicies\n            .then((policies) => {\n                this.setState({ apiPolicies: policies.obj.list });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const status = error.status;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n\n        const promised_api = this.api.getSwagger(this.api_uuid);\n        promised_api\n            .then((response) => {\n                let tempScopes = [];\n                if (response.obj.security && response.obj.security.length !== 0) {\n                    response.obj.security.map((object, i) => {\n                        if (object.OAuth2Security) {\n                            tempScopes = object.OAuth2Security;\n                        }\n                    });\n                }\n                this.setState({ swagger: response.obj, scopes: tempScopes });\n\n                if (response.obj.paths !== undefined) {\n                    this.setState({ paths: response.obj.paths });\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const status = error.status;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 401) {\n                    this.setState({ isAuthorize: false });\n                }\n            });\n    }\n    onChangeInput = name => (event) => {\n        let value = event.target.value;\n        if (value.indexOf('/') === -1) {\n            value = '/' + value;\n        }\n        this.setState({ [name]: value });\n    };\n    addResources() {\n        const defaultGet = {\n            description: '',\n            parameters: [],\n            'x-auth-type': 'Application & Application User',\n            'x-throttling-tier': 'Unlimited', // todo: handle when Unlimited tier is disabled\n            responses: {\n                200: {\n                    description: '',\n                },\n            },\n        };\n\n        const defaultPost = {\n            description: '',\n            'x-auth-type': 'Application & Application User',\n            'x-throttling-tier': 'Unlimited', // todo: handle when Unlimited tier is disabled\n            responses: {\n                200: {\n                    description: '',\n                },\n            },\n            parameters: [\n                {\n                    name: 'Payload',\n                    description: 'Request Body',\n                    required: false,\n                    in: 'body',\n                    schema: {\n                        type: 'object',\n                        properties: {\n                            payload: {\n                                type: 'string',\n                            },\n                        },\n                    },\n                },\n            ],\n        };\n\n        const defaultDelete = {\n            description: '',\n            'x-auth-type': 'Application & Application User',\n            'x-throttling-tier': 'Unlimited', // todo: handle when Unlimited tier is disabled\n            responses: {\n                200: {\n                    description: '',\n                },\n            },\n            parameters: [],\n        };\n        const defaultHead = {\n            'x-auth-type': 'Application & Application User',\n            'x-throttling-tier': 'Unlimited', // todo: handle when Unlimited tier is disabled\n            responses: {\n                200: {\n                    description: '',\n                },\n            },\n            parameters: [],\n        };\n        const pathValue = {};\n        let existingPathVale = {};\n        const tmpPaths = this.state.paths;\n        if (Object.keys(tmpPaths).length > 0) {\n            if (this.state.tmpResourceName in tmpPaths) {\n                existingPathVale = tmpPaths[this.state.tmpResourceName];\n            }\n        }\n        CONSTS.HTTP_METHODS.map((method) => {\n            switch (method) {\n                case 'get':\n                    if ('get' in existingPathVale) {\n                        pathValue.get = existingPathVale.get;\n                    } else if (this.state.tmpMethods.indexOf('get') !== -1) {\n                        pathValue.get = defaultGet;\n                    }\n                    break;\n                case 'post':\n                    if ('post' in existingPathVale) {\n                        pathValue.post = existingPathVale.post;\n                    }\n                    if (this.state.tmpMethods.indexOf('post') !== -1) {\n                        pathValue.post = defaultPost;\n                    }\n                    break;\n                case 'put':\n                    if ('put' in existingPathVale) {\n                        pathValue.put = existingPathVale.put;\n                    }\n                    if (this.state.tmpMethods.indexOf('put') !== -1) {\n                        pathValue.put = defaultPost;\n                    }\n                    break;\n                case 'patch':\n                    if ('patch' in existingPathVale) {\n                        pathValue.patch = existingPathVale.patch;\n                    }\n                    if (this.state.tmpMethods.indexOf('patch') !== -1) {\n                        pathValue.patch = defaultPost;\n                    }\n                    break;\n                case 'delete':\n                    if ('delete' in existingPathVale) {\n                        pathValue.delete = existingPathVale.delete;\n                    }\n                    if (this.state.tmpMethods.indexOf('delete') !== -1) {\n                        pathValue.delete = defaultDelete;\n                    }\n                    break;\n                case 'head':\n                    if ('head' in existingPathVale) {\n                        pathValue.head = existingPathVale.head;\n                    }\n                    if (this.state.tmpMethods.indexOf('head') !== -1) {\n                        pathValue.head = defaultHead;\n                    }\n                    break;\n            }\n        });\n\n        tmpPaths[this.state.tmpResourceName] = pathValue;\n        this.setState({ paths: tmpPaths });\n    }\n\n    /**\n     * Update the resource paths in the state\n     * @param {*} path resource path\n     * @param {*} method resource method\n     * @param {*} value value\n     */\n    updatePath(path, method, value) {\n        const { paths } = this.state;\n        const tmpPaths = cloneDeep(paths);\n        if (value === null) {\n            delete tmpPaths[path][method];\n        } else {\n            tmpPaths[path][method] = value;\n        }\n        this.setState({ paths: tmpPaths });\n    }\n\n    /**\n     *  update the resources in swagger\n     */\n    updateResources() {\n        const { swagger, paths, api } = this.state;\n        const { intl } = this.props;\n        const tmpSwagger = { ...swagger, paths: cloneDeep(paths) };\n        const newPaths = Object.keys(paths).filter(path => !isEmpty(paths[path]))\n            .reduce((acc, path) => {\n                acc[path] = paths[path];\n                return acc;\n            }, {});\n        tmpSwagger.paths = newPaths;\n        const promisedApi = api.updateSwagger(tmpSwagger);\n        promisedApi\n            .then(() => {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Resources.Resources.api.path.updated.successfully',\n                    defaultMessage: 'API Resources updated successfully!',\n                }));\n                this.updateAPI();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 401) {\n                    this.setState({ isAuthorize: false });\n                }\n            });\n    }\n\n    /**\n     * Updates the api\n     */\n    updateAPI() {\n        const { intl, api, api: { id } } = this.props;\n        const { policyLevel, selectedPolicy } = this.state;\n        const promisedApi = api.get(id);\n        promisedApi\n            .then((getResponse) => {\n                let apiThrottlingPolicy;\n                if (policyLevel === 'perAPI') {\n                    apiThrottlingPolicy = selectedPolicy;\n                } else {\n                    apiThrottlingPolicy = null;\n                }\n                let apiData = getResponse.body;\n                apiData.apiThrottlingPolicy = apiThrottlingPolicy;\n                const promisedUpdate = api.update(apiData);\n                promisedUpdate\n                    .then(() => {\n                        Alert.info(intl.formatMessage({\n                            id: 'Apis.Details.Resources.Resources.api.updated.successfully',\n                            defaultMessage: 'API updated successfully!',\n                        }));\n                        return this.api.getSwagger(id);\n                    })\n                    .then((response) => {\n                        if (response.obj.paths !== undefined) {\n                            this.setState({ paths: response.obj.paths });\n                        }\n                    })\n                    .catch((errorResponse) => {\n                        console.error(errorResponse);\n                        Alert.error(intl.formatMessage({\n                            id: 'Apis.Details.Resources.Resources.something.went.wrong.while.updating.the.api',\n                            defaultMessage: 'Error occurred while updating API',\n                        }));\n                    });\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Resources.Resources.something.went.wrong.while.getting.the.api',\n                    defaultMessage: 'Error occurred while retrieving API',\n                }));\n            });\n    }\n\n    addRemoveToDeleteList(path, method) {\n        const pathDeleteList = this.state.pathDeleteList;\n\n        const deleteRef = { path, method };\n        let itemAlreadyExisted = false;\n        for (let i = 0; i < pathDeleteList.length; i++) {\n            if (pathDeleteList[i].path === path && pathDeleteList[i].method === method) {\n                pathDeleteList.splice(i, 1);\n                itemAlreadyExisted = true;\n            }\n        }\n\n        if (!itemAlreadyExisted) {\n            pathDeleteList.push(deleteRef);\n        }\n        this.setState({ pathDeleteList });\n    }\n    handleCheckAll = (event) => {\n        const paths = this.state.paths;\n        const pathDeleteList = [];\n        if (event.target.checked) {\n            for (let i = 0; i < this.childResources.length; i++) {\n                if (this.childResources[i]) {\n                    this.childResources[i].toggleDeleteCheck(true);\n                }\n            }\n            // We iterate all the paths and add each method and path to the pathDeleteList Object\n            for (const path in paths) {\n                if (paths.hasOwnProperty(path)) {\n                    if (Object.keys(path) && Object.keys(path).length > 0) {\n                        const pathValue = paths[path];\n                        for (const method in pathValue) {\n                            if (pathValue.hasOwnProperty(method)) {\n                                pathDeleteList.push({ path, method });\n                            }\n                        }\n                    } else {\n                        console.debug('Error with path object');\n                    }\n                }\n            }\n            this.setState({ allChecked: true });\n            this.setState({ pathDeleteList });\n        } else {\n            for (let i = 0; i < this.childResources.length; i++) {\n                if (this.childResources[i]) {\n                    this.childResources[i].toggleDeleteCheck(false);\n                }\n            }\n            this.setState({ allChecked: false });\n            this.setState({ pathDeleteList: [] });\n        }\n    };\n    deleteSelected = () => {\n        const tmpPaths = this.state.paths;\n        const pathDeleteList = this.state.pathDeleteList;\n        for (let i = 0; i < pathDeleteList.length; i++) {\n            delete tmpPaths[pathDeleteList[i].path][pathDeleteList[i].method];\n            const indexesToDelete = [];\n            for (let j = 0; j < this.childResources.length; j++) {\n                if (this.childResources[j]) {\n                    if (this.childResources[j].props.path === pathDeleteList[i].path && this.childResources[j].props.method === pathDeleteList[i].method) {\n                        indexesToDelete.push(j);\n                    }\n                }\n            }\n            for (let j = 0; j < indexesToDelete.length; j++) {\n                this.childResources.splice(j, 1); // Remove react child from reference array\n            }\n        }\n        for (let i = 0; i < pathDeleteList.length; i++) {\n            pathDeleteList.splice(i, 1); // Remove the item from waiting to be deleted list\n        }\n\n        this.setState({ pathDeleteList });\n        this.setState({ path: tmpPaths });\n        for (let i = 0; i < this.childResources.length; i++) {\n            if (this.childResources[i]) {\n                this.childResources[i].toggleDeleteCheck(false);\n            }\n        }\n    };\n    toggleAddResource = () => {\n        this.setState({ showAddResource: !this.state.showAddResource });\n    }\n    toggleAssignPolicy = () => {\n        this.setState({ showPolicy: !this.state.showPolicy, showAddResource: false });\n    }\n    advancedPolicyTypeChange = (event) => {\n        const { apiThrottlingPolicy } = this.props.api;\n        if (event.target.value === 'perAPI') {\n            this.setState({ selectedPolicy: apiThrottlingPolicy });\n        }\n        this.setState({ policyLevel: event.target.value });\n    }\n    handlePolicyChange = (event) => {\n        this.setState({ selectedPolicy: event.target.value });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const {\n            api, showAddResource, showPolicy, policyLevel, apiPolicies, selectedPolicy,\n        } = this.state;\n\n        if (this.state.notFound) {\n            return <ResourceNotFound message={this.props.resourceNotFountMessage} />;\n        }\n        if (!api) {\n            return <Progress />;\n        }\n        const plainOptions = ['get', 'post', 'put', 'delete', 'patch', 'head', 'options'];\n        const paths = this.state.paths;\n        const { classes, intl } = this.props;\n        return (\n            <div className={classes.root}>\n                <div className={classes.titleWrapper}>\n                    <Typography variant='h4' align='left' className={classes.mainTitle}>\n                        <FormattedMessage id='Apis.Details.Resources.Resources.resources' defaultMessage='Resources' />\n                    </Typography>\n                    <Button size='small' className={classes.button} onClick={this.toggleAddResource} disabled={this.isNotCreator}>\n                        <AddCircle className={classes.buttonIcon} />\n                        <FormattedMessage\n                            id='Apis.Details.Resources.Resources.add.new.resource.button'\n                            defaultMessage='Add New Resource'\n                        />\n                    </Button>\n                    <Button size='small' className={classes.button} onClick={this.toggleAssignPolicy} disabled={this.isNotCreator}>\n                        <ScopesIcon className={classes.buttonIcon} />\n                        <FormattedMessage\n                            id='Apis.Details.Resources.Resources.assign.policies'\n                            defaultMessage='Assign Advanced Throttling Policies'\n                        />\n                    </Button>\n                </div>\n                <div className={classes.contentWrapper}>\n                    {showAddResource &&\n                        <React.Fragment>\n                            <div className={classes.addNewWrapper}>\n                                <Typography className={classes.addNewHeader}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Resources.Resources.add.new.resource.title'\n                                        defaultMessage='Add New Resource'\n                                    />\n                                </Typography>\n                                <Divider className={classes.divider} />\n                                <div className={classes.addNewOther}>\n                                    <TextField\n                                        required\n                                        id='outlined-required'\n                                        label={intl.formatMessage({\n                                            id: 'Apis.Details.Resources.Resources.url.pattern',\n                                            defaultMessage: 'URL Pattern',\n                                        })}\n                                        margin='normal'\n                                        variant='outlined'\n                                        id='tmpResourceName'\n                                        className={classes.addResource}\n                                        value={this.state.tmpResourceName}\n                                        onChange={this.onChangeInput('tmpResourceName')}\n                                    />\n                                    <div className={classes.radioGroup}>\n                                        {plainOptions.map((option, index) => (\n                                            <FormGroup key={index} row>\n                                                <FormControlLabel\n                                                    control={<Checkbox\n                                                        checked={this.state.tmpMethods.indexOf(option) > -1}\n                                                        onChange={this.handleChange(option)}\n                                                        value={option}\n                                                    />\n                                                    }\n                                                    label={option.toUpperCase()}\n                                                />\n                                            </FormGroup>\n                                        ))}\n                                    </div>\n                                </div>\n                                <Divider className={classes.divider} />\n                                <div className={classes.addNewOther}>\n                                    <Button variant='contained' color='primary' onClick={this.addResources}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Resources.Resources.add.resources.to.path'\n                                            defaultMessage='Add Resources to Path'\n                                        />\n                                    </Button>\n                                    <Button className={classes.button} onClick={this.toggleAddResource}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Resources.Resources.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </div>\n                            </div>\n                        </React.Fragment>}\n\n                    {showPolicy &&\n                        <React.Fragment>\n                            <div className={classes.addNewWrapper}>\n                                <Typography className={classes.addNewHeader}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Resources.Resources.assign.advanced.throttling.policies'\n                                        defaultMessage='Assign advanced throttling policies'\n                                    />\n                                </Typography>\n                                <Divider className={classes.divider} />\n                                <div className={classes.addNewOther}>\n                                    <FormControl component='fieldset' className={classes.formControl}>\n                                        <RadioGroup\n                                            aria-label='advancedPolicyType'\n                                            name='advancedPolicyType'\n                                            className={classes.group}\n                                            value={policyLevel}\n                                            onChange={this.advancedPolicyTypeChange}\n                                        >\n                                            <FormControlLabel\n                                                value='perAPI'\n                                                control={<Radio />}\n                                                label={intl.formatMessage({\n                                                    id: 'Apis.Details.Resources.Resources.assign.advanced.throttling.perApi',\n                                                    defaultMessage: 'Apply per API',\n                                                })}\n                                            />\n                                            <FormControlLabel\n                                                value='perResource'\n                                                control={<Radio />}\n                                                label={intl.formatMessage({\n                                                    id: 'Apis.Details.Resources.Resources.assign.advanced.throttling.Resource',\n                                                    defaultMessage: 'Apply per Resource',\n                                                })}\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                    <div className={classes.rightDataColum}>\n                                        {policyLevel === 'perAPI' &&\n                                            <Select\n                                                className={classes.selectWidth}\n                                                value={selectedPolicy}\n                                                onChange={this.handlePolicyChange}\n                                                fieldName='Throttling Policy'\n                                            >\n                                                {apiPolicies.map(policy => (\n                                                    <MenuItem\n                                                        key={policy.name}\n                                                        value={policy.name}\n                                                    >\n                                                        {policy.displayName}\n                                                    </MenuItem>\n                                                ))}\n                                            </Select>}\n                                    </div>\n                                </div>\n                            </div>\n                        </React.Fragment>}\n\n                    <List>\n                        {this.state.paths && (\n                            <ListItem>\n                                <FormControlLabel\n                                    control={<Checkbox\n                                        checked={this.state.allChecked}\n                                        onChange={this.handleCheckAll}\n                                        value=''\n                                        disabled={this.isNotCreator}\n                                    />}\n                                    label='Check All'\n                                />\n                                {Object.keys(this.state.pathDeleteList).length !== 0 && (\n                                    <ListItemSecondaryAction>\n                                        <Button\n                                            className={classes.button}\n                                            color='secondary'\n                                            onClick={this.deleteSelected}\n                                            disabled={this.isNotCreator}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.Resources.Resources.delete.selected'\n                                                defaultMessage='Delete Selected'\n                                            />\n                                        </Button>\n                                    </ListItemSecondaryAction>\n                                )}\n                            </ListItem>\n                        )}\n                        {Object.keys(paths).map((key) => {\n                            const path = paths[key];\n                            const that = this;\n                            return (\n                                <div>\n                                    <ExpansionPanel defaultExpanded className={classes.expansionPanel}>\n                                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                                            <Typography className={classes.heading} variant='h6'>{key}</Typography>\n                                        </ExpansionPanelSummary>\n                                        <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                                            {Object.keys(path).map((innerKey) => {\n                                                return CONSTS.HTTP_METHODS.includes(innerKey) ?\n                                                    <Resource\n                                                        path={key}\n                                                        method={innerKey}\n                                                        methodData={path[innerKey]}\n                                                        updatePath={that.updatePath}\n                                                        scopes={api.scopes}\n                                                        apiPolicies={apiPolicies}\n                                                        isAPIProduct={false}\n                                                        addRemoveToDeleteList={that.addRemoveToDeleteList}\n                                                        onRef={ref => this.childResources.push(ref)}\n                                                        policyLevel={policyLevel}\n                                                    /> : null;\n                                            })}\n                                        </ExpansionPanelDetails>\n                                    </ExpansionPanel>\n                                </div>\n                            );\n                        })}\n                    </List>\n                    <Grid  container\n                           direction='row'\n                           alignItems='center'\n                           spacing={4}>\n                        <Grid item>\n                            <Button\n                                variant='contained'\n                                color='primary'\n                                className={classes.buttonMain}\n                                onClick={this.updateResources}\n                                disabled={this.isNotCreator}\n                            >\n                                <FormattedMessage id='Apis.Details.Resources.Resources.save' defaultMessage='Save' />\n                            </Button>\n                        </Grid>\n                        {this.isNotCreator\n                            && (\n                                <Grid item>\n                                    <Typography variant='body2' color='primary'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Resources.Resources.update.not.allowed'\n                                            defaultMessage={'*You are not authorized to update API resources due' +\n                                            ' to insufficient permissions'}\n                                        />\n                                    </Typography>\n                                </Grid>\n                            )\n                        }\n                    </Grid>\n                </div>\n            </div>\n        );\n    }\n}\nResources.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Resources));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { Progress } from 'AppComponents/Shared';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport APIProduct from 'AppData/APIProduct';\nimport CONSTS from 'AppData/Constants';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage } from 'react-intl';\nimport Resource from './Resource';\n\n/**\n * Render method base.\n * @param {*} props\n */\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 400,\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    scopes: {\n        width: 400,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    button: {\n        marginLeft: theme.spacing.unit * 2,\n        textTransform: theme.custom.leftMenuTextStyle,\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    buttonMain: {\n        textTransform: theme.custom.leftMenuTextStyle,\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing.unit * 2,\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addNewHeader: {\n        padding: theme.spacing.unit * 2,\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing.unit * 2,\n    },\n    radioGroup: {\n        display: 'flex',\n        flexDirection: 'row',\n        width: 300,\n    },\n    addResource: {\n        width: 600,\n        marginTop: 0,\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing.unit,\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n});\n\n/**\n * Component to show api product resources in resources tab\n */\nclass ProductResourcesView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            paths: null,\n            scopes: [],\n            notFound: false,\n            showAddResource: false,\n            showPolicy: false,\n            apiPolicies: [],\n            selectedPolicy: props.api.apiThrottlingPolicy,\n            policyLevel: props.api.apiThrottlingPolicy ? 'perAPI' : 'perResource',\n        };\n\n        this.api_uuid = props.api.id;\n        this.childResources = [];\n    }\n\n    componentDidMount() {\n        const apiProduct = new APIProduct();\n        const promised_api = apiProduct.getSwagger(this.api_uuid);\n        promised_api\n            .then((response) => {\n                if (response.obj.paths !== undefined) {\n                    this.setState({ paths: response.obj.paths });\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const status = error.status;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 401) {\n                    this.setState({ isAuthorize: false });\n                }\n            });\n    }\n\n    render() {\n        const {\n            policyLevel, apiPolicies, scopes, paths,\n        } = this.state;\n        const { classes, api } = this.props;\n        if (this.state.notFound) {\n            return <ResourceNotFound message={this.props.resourceNotFountMessage} />;\n        }\n        if (paths === null) {\n            return <Progress />;\n        }\n        const apiResources = api.apis;\n        const apiResourcesDetails = apiResources\n            .map((key) => {\n                const operations = key.operations.map(item => item.target);\n                const filteredPaths  = Object.keys(paths).filter(item => operations.includes(item))\n                .reduce((acc,cur) => {\n                    acc[cur] = paths[cur]\n                    return acc;\n                },{})\n                return {\n                    name:key.name,\n                    paths:filteredPaths\n                }\n            })\n            console.log(\"**\", apiResourcesDetails)\n        return (\n            <div className={classes.root}>\n                <div className={classes.titleWrapper}>\n                    <Typography variant='h4' align='left' className={classes.mainTitle}>\n                        <FormattedMessage id='Apis.Details.Resources.Resources.resources' defaultMessage='Resources' />\n                    </Typography>\n                    <Link to={'/api-products/' + api.id + '/resources/edit'}>\n                        <Button size='small' className={classes.button}>\n                            <Icon className={classes.buttonIcon}>edit</Icon>\n                            <FormattedMessage\n                                id='Apis.Details.Resources.Resources.edit.resources.button'\n                                defaultMessage='Edit Resources'\n                            />\n                        </Button>\n                    </Link>\n                </div>\n                <div className={classes.contentWrapper}>\n                    <List>\n                        {Object.keys(apiResourcesDetails).map((key) => {\n                            const resource = apiResourcesDetails[key];\n                            return( <div className={classes.root}>\n                                    <Typography className={classes.heading} variant='h5'>\n                                    {resource.name}\n                                </Typography>\n                                    <div className={classes.root}>\n                                    {Object.keys(resource.paths).map((key) => {\n                                        const path = resource.paths[key];\n                                        const that = this;\n                                        return (\n                                            <div>\n                                                <ExpansionPanel defaultExpanded className={classes.expansionPanel}>\n                                                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                                                        <Typography className={classes.heading} variant='h6'>\n                                                            {key}\n                                                        </Typography>\n                                                    </ExpansionPanelSummary>\n                                                    <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                                                        {Object.keys(path).map((innerKey) => {\n                                                            return CONSTS.HTTP_METHODS.includes(innerKey) ? (\n                                                                <Resource\n                                                                    path={key}\n                                                                    method={innerKey}\n                                                                    methodData={path[innerKey]}\n                                                                    updatePath={that.updatePath}\n                                                                    scopes={scopes}\n                                                                    apiPolicies={apiPolicies}\n                                                                    isAPIProduct\n                                                                    onRef={ref => this.childResources.push(ref)}\n                                                                    policyLevel={policyLevel}\n                                                                />\n                                                            ) : null;\n                                                        })}\n                                                    </ExpansionPanelDetails>\n                                                </ExpansionPanel>\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            </div>);\n                        })}\n                    </List>\n                </div>\n            </div>\n        );\n    }\n}\n\nProductResourcesView.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.shape({}),\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.shape({}),\n    }).isRequired,\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({ id: PropTypes.string }).isRequired,\n};\n\nexport default withStyles(styles)(ProductResourcesView);\n","/**\n * This will parse the search query entered by the user into the expected format\n */\nclass SearchParser {\n    static parse(userQuery) {\n        let modifiedSearchQuery = '';\n        // Get a list of search terms respecting single and double quotes\n        const regex =\n            /(\\S+:'(?:[^'\\\\]|\\\\.)*')|(\\S+:\"(?:[^\"\\\\]|\\\\.)*\")|(-?\"(?:[^\"\\\\]|\\\\.)*\")|(-?'(?:[^'\\\\]|\\\\.)*')|\\S+|\\S+:\\S+/g;\n        let match;\n        const contentArr = [];\n        // eslint-disable-next-line no-cond-assign\n        while ((match = regex.exec(userQuery)) !== null) {\n            let term = match[0];\n            const sepIndex = term.indexOf(':');\n            if (sepIndex !== -1) {\n                const key = term.slice(0, sepIndex);\n                let val = term.slice(sepIndex + 1);\n                // Strip backslashes respecting escapes\n                val = (val + '').replace(/\\\\(.?)/g, (s, n1) => {\n                    switch (n1) {\n                        case '\\\\':\n                            return '\\\\';\n                        case '0':\n                            return '\\u0000';\n                        case '':\n                            return '';\n                        default:\n                            return n1;\n                    }\n                });\n                if (key && val) {\n                    modifiedSearchQuery += key + ':' + val + ' ';\n                } else {\n                    return '';\n                }\n            } else {\n                // Strip backslashes respecting escapes\n                term = (term + '').replace(/\\\\(.?)/g, (s, n1) => {\n                    switch (n1) {\n                        case '\\\\':\n                            return '\\\\';\n                        case '0':\n                            return '\\u0000';\n                        case '':\n                            return '';\n                        default:\n                            return n1;\n                    }\n                });\n                contentArr.push(term);\n            }\n        }\n        if (contentArr.length > 0) {\n            modifiedSearchQuery = 'content:' + contentArr.join(' ') + ' ' + modifiedSearchQuery;\n        }\n        return modifiedSearchQuery.trim();\n    }\n}\n\nexport default SearchParser;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useTheme } from '@material-ui/styles';\nimport Chip from '@material-ui/core/Chip';\nimport PropTypes from 'prop-types';\n\nfunction MethodView(props) {\n    const theme = useTheme();\n    const { method, className } = props;\n    let chipColor = theme.custom.resourceChipColors ? theme.custom.resourceChipColors[method.toLowerCase()] : null;\n    let chipTextColor = '#000000';\n    if (!chipColor) {\n        console.log('Check the theme settings. The resourceChipColors is not populated properly');\n        chipColor = '#cccccc';\n    } else {\n        chipTextColor = theme.palette.getContrastText(theme.custom.resourceChipColors[method.toLowerCase()]);\n    }\n    return (\n        <Chip\n            label={method}\n            className={className || ''}\n            style={{ backgroundColor: chipColor, color: chipTextColor, height: 20 }}\n        />\n    );\n}\nMethodView.propTypes = {\n    className: PropTypes.string.isRequired,\n    method: PropTypes.string.isRequired,\n};\n\nexport default MethodView;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable array-callback-return */\n/* eslint no-param-reassign: [\"error\", { \"props\": true, \"ignorePropertyModificationsFor\": [\"operationObj\"] }] */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Icon from '@material-ui/core/Icon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport queryString from 'query-string';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport cloneDeep from 'lodash.clonedeep';\n\nimport API from 'AppData/api';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport SearchParser from 'AppComponents/Base/Header/headersearch/SearchParser';\nimport MethodView from 'AppComponents/Apis/Details/ProductResources/MethodView';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport CONSTS from 'AppData/Constants';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    searchWrapper: {\n        padding: 0,\n        marginTop: theme.spacing.unit,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingBottom: theme.spacing.unit * 2,\n    },\n    paper: {\n        height: '100%',\n        borderRadius: 0,\n    },\n    apiWrapper: {\n        overflowY: 'auto',\n        height: 400,\n    },\n    leftMost: {\n        background: theme.palette.grey[700],\n        color: theme.palette.getContrastText(theme.palette.grey[700]),\n        padding: theme.spacing.unit,\n    },\n    rightMost: {\n        background: theme.palette.grey[600],\n        color: theme.palette.getContrastText(theme.palette.grey[600]),\n        padding: theme.spacing.unit,\n    },\n    colTitle: {\n        background: theme.palette.grey[400],\n        color: theme.palette.getContrastText(theme.palette.grey[400]),\n        padding: theme.spacing.unit,\n        fontWeight: 200,\n        minHeight: 25,\n    },\n    treeItemMain: {\n        background: theme.palette.grey[100],\n        color: theme.palette.getContrastText(theme.palette.grey[100]),\n        padding: theme.spacing.unit,\n    },\n    treeItemMainWrapper: {\n        paddingLeft: theme.spacing.unit * 4,\n    },\n    treeItem: {\n        '& .material-icons': {\n            fontSize: theme.spacing.unit * 2,\n            cursor: 'pointer',\n            marginRight: theme.spacing.unit,\n        },\n        display: 'flex',\n        alignItems: 'center',\n        padding: '6px 0',\n    },\n    hr: {\n        flex: 1,\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        color: theme.palette.getContrastText(theme.palette.grey[100]),\n    },\n    methodView: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    middleText: {\n        flex: 1,\n    },\n    selectedApi: {\n        background: theme.palette.grey[100],\n    },\n    selectedTitle: {\n        padding: theme.spacing.unit * 2,\n    },\n    buttonWrapper: {\n        marginTop: theme.spacing.unit * 2,\n        textDecorate: 'none',\n    },\n    selectedApiDescription: {\n        padding: theme.spacing.unit * 2,\n    },\n    messageWrapper: {\n        padding: theme.spacing.unit * 3,\n    },\n    tootBar: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        margin: '0 16px',\n        background: theme.palette.grey[100],\n        color: theme.palette.getContrastText(theme.palette.grey[100]),\n        padding: 5,\n        borderRadius: 5,\n        '& a': {\n            cursor: 'pointer',\n            display: 'flex',\n            justifyContent: 'flex-end',\n            alignItems: 'center',\n        },\n    },\n    inactiveIcon: {\n        color: theme.palette.grey[300],\n    },\n}));\n\nfunction ProductResourcesEdit() {\n    const classes = useStyles();\n\n    // Get the current api product object from the context\n    const { api, updateAPI } = useContext(APIContext);\n    const apiCopy = cloneDeep(api);\n    const { apis } = apiCopy;\n\n    // Define states\n    const [allApis, setAllApis] = useState([]);\n    const [notFound, setNotFound] = useState(false);\n    const [searchText, setSearchText] = useState('');\n    const [selectedApiPaths, setSelectedApiPaths] = useState([]);\n    const [selectedApi, setSelectedApi] = useState(null);\n    const [apiResources, setApiResources] = useState(apis);\n    const [updating, setUpdating] = useState(false);\n    // Initialize the rest api libraries\n    const apiRestClient = new API();\n\n    /**\n     * This method is filtering apis base on the searchText entered. In no searchText provided it will give all apis.\n     *\n     * @param {*} [text=null]\n     * @returns a promise\n     */\n    const filterAPIs = (text = null) => {\n        if (text) {\n            // Build the search query and update\n            const inputValue = text.trim().toLowerCase();\n            let composeQuery = SearchParser.parse(inputValue);\n            composeQuery = '?query=' + composeQuery;\n            const composeQueryJSON = queryString.parse(composeQuery);\n            // TODO we need to make the limit and offset changeable from the UI ( paggination )\n            composeQueryJSON.limit = 100;\n            composeQueryJSON.offset = 0;\n            return API.search(composeQueryJSON);\n        } else {\n            return API.all({});\n        }\n    };\n    const addPropsToSelectedApiPaths = (paths, apiId, latestApiResources = apiResources) => {\n        /* Add checked field to each resource object */\n        Object.keys(paths).map((key) => {\n            const methodObj = paths[key];\n            Object.keys(methodObj).map((innerKey) => {\n                // We are setting the check property at this level because we need to\n                // add resources for each verb ( post, get, put etc.. )\n                methodObj[innerKey].checked = false;\n\n                // We need to check the latestApiResources for the same\n                // API/Resource Name / Verb and  indicate it differently\n                // Loop latestApiResources object\n                const target = key;\n                const verb = innerKey;\n                let resourceFound = false;\n                if (latestApiResources) {\n                    Object.keys(latestApiResources).map((resourcekey) => {\n                        const apiResource = latestApiResources[resourcekey];\n\n                        // Check if the the api slected from UI is same as the operation api id checking\n                        if (apiResource && apiId === apiResource.apiId) {\n                            // API is the same\n                            Object.keys(apiResource.operations).map((operationKey) => {\n                                const operation = apiResource.operations[operationKey];\n                                if (\n                                    operation &&\n                                    operation.target === target &&\n                                    operation.verb.toLowerCase() === verb.toLowerCase()\n                                ) {\n                                    // Operation is already there\n                                    resourceFound = true;\n                                }\n                            });\n                        }\n                    });\n                }\n                if (resourceFound) {\n                    methodObj[innerKey].allreadyAdded = true;\n                } else {\n                    methodObj[innerKey].allreadyAdded = false;\n                }\n            });\n        });\n        setSelectedApiPaths(paths);\n    };\n\n    // Get the api swagger after an api is selected\n    const getApiSwagger = (apiSelected) => {\n        const { id } = apiSelected;\n        const promisedAPI = apiRestClient.getSwagger(id);\n        promisedAPI\n            .then((response) => {\n                if (response.obj.paths !== undefined) {\n                    addPropsToSelectedApiPaths(response.obj.paths, id);\n                    setSelectedApi(apiSelected);\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    };\n    const handleSearchTextChange = (event) => {\n        const apiPromise = filterAPIs(event.target.value);\n        apiPromise\n            .then((response) => {\n                const {\n                    body: { list },\n                } = response;\n                if (list.length > 0) {\n                    setSelectedApi(list[0]);\n                }\n                setAllApis(list);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n        setSearchText(event.target.value);\n    };\n    const updateResourceTree = (resourceToAdd, action, inputApiResources = null) => {\n        let updateStateHere = false;\n        let newApiResources = null;\n        if (!inputApiResources) {\n            // If a copy of the state variable is not passed from the calling method we\n            // have to make a copy inside here before doing modifications to that\n            newApiResources = cloneDeep(apiResources);\n            updateStateHere = true;\n        } else {\n            newApiResources = inputApiResources;\n        }\n        const {\n            target, verb, apiId, name,\n        } = resourceToAdd;\n        const newResource = {\n            id: null,\n            target,\n            verb: verb.toUpperCase(),\n            authType: null,\n            throttlingPolicy: null,\n            scopes: [],\n        };\n        let apiFound = false;\n\n        // Loop copy of apiResources object\n        Object.keys(newApiResources).map((key, indexA) => {\n            const apiResource = newApiResources[key];\n\n            // Check if the the api slected from UI is same as the operation api id trying to remove.\n            if (apiResource && apiId === apiResource.apiId) {\n                apiFound = true;\n                let operationFound = false;\n                Object.keys(apiResource.operations).map((innerKey, indexB) => {\n                    const operation = apiResource.operations[innerKey];\n                    if (\n                        operation &&\n                        operation.target === target &&\n                        operation.verb.toLowerCase() === verb.toLowerCase()\n                    ) {\n                        // Operation is already there\n                        operationFound = true;\n                        if (action === 'remove') {\n                            if (apiResource.operations.length > 1) {\n                                apiResource.operations.splice(indexB, 1);\n                            } else {\n                                newApiResources.splice(indexA, 1);\n                            }\n                        }\n                    }\n                });\n                // Operation not added .. so we need to add that\n                if (!operationFound && action === 'add') {\n                    apiResource.operations.push(newResource);\n                }\n            }\n        });\n\n        if (!apiFound) {\n            // Add api object\n            newApiResources.push({\n                name,\n                apiId,\n                operations: [newResource],\n            });\n        }\n        // When we are adding the resources in a loop we do not care about the return but we simply set the state here.\n        if (updateStateHere) {\n            setApiResources(newApiResources);\n            // We need to call this in order to set other properties\n            if (apiId === selectedApi.id) {\n                addPropsToSelectedApiPaths(cloneDeep(selectedApiPaths), apiId, newApiResources);\n            }\n        }\n        return newApiResources;\n    };\n    const save = () => {\n        apiCopy.apis = apiResources;\n\n        // Rest api is failing when we send properties other than verb and target in the paylod with operations\n        // Following is a hack to fix it. We need to remove the following when it's fixed\n        apiCopy.apis.map((apiObj) => {\n            const apiObjOperations = apiObj.operations;\n            if (apiObjOperations) {\n                apiObjOperations.map((operationObj) => {\n                    Object.keys(operationObj).map((key) => {\n                        if (key !== 'verb' && key !== 'target') {\n                            delete operationObj[key];\n                        }\n                    });\n                });\n            }\n        });\n        setUpdating(true);\n        const updatePromise = updateAPI(apiCopy, true);\n        updatePromise\n            .then(() => {\n                setUpdating(false);\n            })\n            .catch((error) => {\n                setUpdating(false);\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    };\n    const updateCheckBox = (key, innerKey) => {\n        // we need to copy the object from the state and modify it before set it to the state\n        const prevSelectedApiPaths = { ...selectedApiPaths };\n\n        // Now we inverse the checked value\n        prevSelectedApiPaths[key][innerKey].checked = !prevSelectedApiPaths[key][innerKey].checked;\n\n        // Then we set state\n        setSelectedApiPaths(prevSelectedApiPaths);\n    };\n    const addSelectedResourcesToTree = (addAll = false) => {\n        /* Add checked field to each resource object */\n        const newApiResources = cloneDeep(apiResources);\n        Object.keys(selectedApiPaths).map((key) => {\n            const methodObj = selectedApiPaths[key];\n            Object.keys(methodObj).map((innerKey) => {\n                // We are setting the check property at this level because we need to\n                // add resources for each verb ( post, get, put etc.. )\n                if (methodObj[innerKey].checked || addAll) {\n                    // We need to add this to apiResources array\n                    updateResourceTree(\n                        {\n                            target: key,\n                            verb: innerKey,\n                            apiId: selectedApi.id,\n                            name: selectedApi.name,\n                        },\n                        'add',\n                        newApiResources,\n                    );\n                }\n            });\n        });\n        setApiResources(newApiResources);\n        addPropsToSelectedApiPaths(cloneDeep(selectedApiPaths), selectedApi.id, newApiResources);\n    };\n    useEffect(() => {\n        // Get all apis\n        const apiPromise = filterAPIs();\n        apiPromise\n            .then((response) => {\n                const {\n                    body: { list },\n                } = response;\n                setAllApis(list);\n                if (list.length > 0) {\n                    setSelectedApi(list[0]);\n                    getApiSwagger(list[0]);\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    }, []);\n    if (notFound) {\n        return <ResourceNotFound message={this.props.resourceNotFountMessage} />;\n    }\n    return (\n        <div className={classes.root}>\n            <div className={classes.titleWrapper}>\n                <Typography variant='h4' align='left' className={classes.mainTitle}>\n                    <FormattedMessage\n                        id='Apis.Details.ProductResources.ProductResourcesEdit.title'\n                        defaultMessage='Manage Resources'\n                    />\n                </Typography>\n            </div>\n            <div className={classes.contentWrapper}>\n                <Grid container>\n                    <Grid item xs={7} className={classes.leftMost}>\n                        <FormattedMessage\n                            id='Apis.Details.ProductResources.ProductResourcesEdit.find.and.select'\n                            defaultMessage='Find and select resources for the API Product'\n                        />\n                    </Grid>\n                    <Grid item xs={5} className={classes.rightMost}>\n                        <FormattedMessage\n                            id='Apis.Details.ProductResources.ProductResourcesEdit.find.and.select'\n                            defaultMessage='Find and select resources for the API Product'\n                        />\n                        <div />\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    {/* ************************************************ */}\n                    {/* 1st column API search and select column          */}\n                    {/* ************************************************ */}\n                    <Grid item xs={3}>\n                        <div className={classes.colTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.ProductResources.ProductResourcesEdit.select.an.api'\n                                defaultMessage='Select an API'\n                            />\n                        </div>\n                        <Paper>\n                            <ListItem className={classes.searchWrapper}>\n                                <TextField\n                                    id='outlined-full-width'\n                                    label='API'\n                                    style={{ margin: 8 }}\n                                    placeholder='Filter APIs'\n                                    helperText='Filter the visible APIs'\n                                    onChange={handleSearchTextChange}\n                                    value={searchText}\n                                    fullWidth\n                                    margin='normal'\n                                    variant='outlined'\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                />\n                            </ListItem>\n                            <div className={classes.apiWrapper}>\n                                <List dense>\n                                    {allApis.map((apiObj) => {\n                                        const labelId = `checkbox-list-label-${apiObj.id}`;\n\n                                        return (\n                                            <ListItem\n                                                key={apiObj.id}\n                                                role={undefined}\n                                                dense\n                                                button\n                                                className={\n                                                    selectedApi && apiObj.id === selectedApi.id && classes.selectedApi\n                                                }\n                                            >\n                                                <ListItemText\n                                                    id={labelId}\n                                                    primary={apiObj.name}\n                                                    secondary={`${apiObj.version} - ${apiObj.context}`}\n                                                    onClick={() => getApiSwagger(apiObj)}\n                                                />\n                                            </ListItem>\n                                        );\n                                    })}\n                                </List>\n                            </div>\n                        </Paper>\n                    </Grid>\n                    {/* ************************************************ */}\n                    {/* 2nd column Resource Selection                    */}\n                    {/* ************************************************ */}\n                    <Grid item xs={4}>\n                        <Paper className={classes.paper}>\n                            <div className={classes.colTitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.ProductResources.ProductResourcesEdit.api.resources'\n                                    defaultMessage='API Resources'\n                                />\n                            </div>\n                            {selectedApi && (\n                                <React.Fragment>\n                                    <Typography variant='h5' className={classes.selectedTitle}>\n                                        {selectedApi.name}\n                                    </Typography>\n                                    <Typography\n                                        variant='caption'\n                                        className={classes.selectedApiDescription}\n                                        component='div'\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.ProductResources.ProductResourcesEdit.api.all.resources'\n                                            defaultMessage={\n                                                'All resources available with the API are displayed bellow.' +\n                                                'Click the right hand side arrow to add them to the api product.'\n                                            }\n                                        />\n                                    </Typography>\n                                </React.Fragment>\n                            )}\n                            <div className={classes.tootBar}>\n                                <a\n                                    onClick={() => addSelectedResourcesToTree()}\n                                    onKeyDown={() => addSelectedResourcesToTree()}\n                                >\n                                    <Typography variant='body2'>\n                                        <FormattedMessage\n                                            id='Apis.Details.ProductResources.ProductResourcesEdit.toolbar.add.selected'\n                                            defaultMessage='Add Selected'\n                                        />\n                                    </Typography>\n                                    <Icon>fast_forward</Icon>\n                                </a>\n                                <VerticalDivider />\n                                <a\n                                    onClick={() => addSelectedResourcesToTree(true)}\n                                    onKeyDown={() => addSelectedResourcesToTree(true)}\n                                >\n                                    <Typography variant='body2'>\n                                        <FormattedMessage\n                                            id='Apis.Details.ProductResources.ProductResourcesEdit.toolbar.add.all'\n                                            defaultMessage='Add All'\n                                        />\n                                    </Typography>\n                                    <Icon>fast_forward</Icon>\n                                </a>\n                            </div>\n                            <List dense>\n                                {Object.keys(selectedApiPaths).map((key) => {\n                                    const path = selectedApiPaths[key];\n                                    const labelId = `checkbox-list-label-${key}`;\n                                    return Object.keys(path).map((innerKey) => {\n                                        const methodObj = path[innerKey];\n                                        return (\n                                            CONSTS.HTTP_METHODS.includes(innerKey) && (\n                                                <ListItem key={`${innerKey} - ${key}`} role={undefined} dense>\n                                                    <ListItemIcon>\n                                                        <Checkbox\n                                                            edge='start'\n                                                            checked={methodObj.checked}\n                                                            tabIndex={-1}\n                                                            disableRipple\n                                                            onChange={() => updateCheckBox(key, innerKey)}\n                                                        />\n                                                    </ListItemIcon>\n                                                    <ListItemText\n                                                        id={labelId}\n                                                        primary={\n                                                            <div>\n                                                                <span>{key}</span>\n                                                                <MethodView\n                                                                    method={innerKey}\n                                                                    className={classes.methodView}\n                                                                />\n                                                            </div>\n                                                        }\n                                                        secondary={\n                                                            methodObj['x-auth-type'] &&\n                                                            methodObj['x-throttling-tier'] &&\n                                                            `${methodObj['x-auth-type']} - ${\n                                                                methodObj['x-throttling-tier']\n                                                            }`\n                                                        }\n                                                        onClick={() =>\n                                                            updateResourceTree(\n                                                                {\n                                                                    target: key,\n                                                                    verb: innerKey,\n                                                                    apiId: selectedApi.id,\n                                                                    name: selectedApi.name,\n                                                                },\n                                                                'add',\n                                                            )\n                                                        }\n                                                        className={classes.middleText}\n                                                    />\n                                                    <ListItemSecondaryAction>\n                                                        {methodObj.allreadyAdded && (\n                                                            <Icon className={classes.inactiveIcon}>chevron_right</Icon>\n                                                        )}\n                                                        {!methodObj.allreadyAdded && (\n                                                            <IconButton\n                                                                edge='end'\n                                                                aria-label='comments'\n                                                                onClick={() =>\n                                                                    updateResourceTree(\n                                                                        {\n                                                                            target: key,\n                                                                            verb: innerKey,\n                                                                            apiId: selectedApi.id,\n                                                                            name: selectedApi.name,\n                                                                        },\n                                                                        'add',\n                                                                    )\n                                                                }\n                                                            >\n                                                                <Icon>chevron_right</Icon>\n                                                            </IconButton>\n                                                        )}\n                                                    </ListItemSecondaryAction>\n                                                </ListItem>\n                                            )\n                                        );\n                                    });\n                                })}\n                            </List>\n                        </Paper>\n                    </Grid>\n                    {/* ************************************************ */}\n                    {/* Third column with  selected resources            */}\n                    {/* ************************************************ */}\n                    <Grid item xs={5}>\n                        <Paper className={classes.paper}>\n                            <div className={classes.colTitle} />\n                            <div className={classes.treeViewRoot}>\n                                {apiResources && apiResources.length === 0 && (\n                                    <div className={classes.messageWrapper}>\n                                        <Typography variant='h5' component='h3'>\n                                            <FormattedMessage\n                                                id='Apis.Details.ProductResources.ProductResourcesEdit.empty.title'\n                                                defaultMessage='No resources are available'\n                                            />\n                                        </Typography>\n                                        <Typography component='p'>\n                                            <FormattedMessage\n                                                id='Apis.Details.ProductResources.ProductResourcesEdit.empty.content'\n                                                defaultMessage='Use the left side panel to add resources'\n                                            />\n                                        </Typography>\n                                    </div>\n                                )}\n                                {apiResources &&\n                                    apiResources.length > 0 &&\n                                    Object.keys(apiResources).map((key) => {\n                                        const apiResource = apiResources[key];\n                                        return (\n                                            <div key={apiResource.name}>\n                                                <div className={classes.treeItemMain}>{apiResource.name}</div>\n                                                <div className={classes.treeItemMainWrapper}>\n                                                    {Object.keys(apiResource.operations).map((innerKey) => {\n                                                        const operation = apiResource.operations[innerKey];\n                                                        const { target, verb } = operation;\n                                                        return (\n                                                            <div key={verb} className={classes.treeItem}>\n                                                                <Typography variant='body2'>{target}</Typography>\n                                                                <MethodView\n                                                                    method={verb}\n                                                                    className={classes.methodView}\n                                                                />\n                                                                <hr className={classes.hr} />\n                                                                <Icon\n                                                                    onClick={() =>\n                                                                        updateResourceTree(\n                                                                            {\n                                                                                target,\n                                                                                verb,\n                                                                                apiId: apiResource.apiId,\n                                                                                name: apiResource.name,\n                                                                            },\n                                                                            'remove',\n                                                                        )\n                                                                    }\n                                                                >\n                                                                    delete\n                                                                </Icon>\n                                                            </div>\n                                                        );\n                                                    })}\n                                                </div>\n                                            </div>\n                                        );\n                                    })}\n                            </div>\n                        </Paper>\n                    </Grid>\n                </Grid>\n                <div className={classes.buttonWrapper}>\n                    <Grid container direction='row' alignItems='flex-start' spacing={4}>\n                        <Grid item>\n                            <div>\n                                <Button variant='contained' color='primary' onClick={save} disabled={updating}>\n                                    {updating && (\n                                        <FormattedMessage\n                                            id='Apis.Details.ProductResources.ProductResourcesEdit.updating'\n                                            defaultMessage='Updating ...'\n                                        />\n                                    )}\n                                    {!updating && (\n                                        <FormattedMessage\n                                            id='Apis.Details.ProductResources.ProductResourcesEdit.save'\n                                            defaultMessage='Save'\n                                        />\n                                    )}\n                                </Button>\n                            </div>\n                        </Grid>\n                        <Grid item>\n                            <Link to={'/apis/' + api.id + '/overview'}>\n                                <Button>\n                                    <FormattedMessage\n                                        id='Apis.Details.ProductResources.ProductResourcesEdit.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ProductResourcesEdit;\n","/*\n *  Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\nimport React, { useState } from 'react';\nimport {\n    Typography,\n    Grid,\n    withStyles,\n    RadioGroup,\n    FormControlLabel,\n    Radio,\n    FormControl,\n    Divider,\n    Button,\n    Card,\n    CardContent,\n    CardActions,\n} from '@material-ui/core';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n    inlineMessageContainer: {\n        marginBottom: theme.spacing(),\n    },\n    endpointTypeCard: {\n        margin: theme.spacing(),\n        maxWidth: theme.spacing(32),\n        transition: 'box-shadow 0.3s ease-in-out',\n        height: theme.spacing(40),\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardContent: {\n        height: theme.spacing(40),\n    },\n    content: {\n        marginTop: theme.spacing(),\n    },\n    cardActions: {\n        justifyContent: 'flex-end',\n        borderTop: 'solid #e0e0e0 thin',\n    },\n});\n\n/**\n * Component to create new endpoint.\n * This component will render if the api object does not have an endpoint configuration, letting users to create a\n * new endpoint configuration based on their requirement.\n * Following endpoint types are supported.\n * 1. HTTP/ SOAP endpoints\n * 2. Prototyped/ Mock endpoints\n * 3. AWS Lambda endpoints\n * 4. Dynamic Endpoints\n *\n * @param {any} props The input props.\n * @return {any} The HTML representation of the component.\n * */\nfunction NewEndpointCreate(props) {\n    const { classes, intl, generateEndpointConfig } = props;\n    const [endpointImplType, setImplType] = useState('mock');\n    const endpointTypes = [\n        {\n            type: 'http',\n            name: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.http.endpoint',\n                defaultMessage: 'HTTP/ REST Endpoint',\n            }),\n            description: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.http.endpoint.description',\n                defaultMessage: 'A REST API endpoint based on a URI template.',\n            }),\n            options: null,\n        },\n        {\n            type: 'address',\n            name: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.soap.endpoint',\n                defaultMessage: 'HTTP/ SOAP Endpoint',\n            }),\n            description: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.soap.endpoint.description',\n                defaultMessage: 'The direct URI of the web service.',\n            }),\n            options: null,\n        },\n        {\n            type: 'prototyped',\n            name: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.prototype.endpoint',\n                defaultMessage: 'Prototype Endpoint',\n            }),\n            description: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.prototype.endpoint.description',\n                defaultMessage: 'Use the inbuilt JavaScript engine to prototype the API or provide an endpoint' +\n                    ' to a prototype API. The inbuilt JavaScript engine does not have support to prototype SOAP APIs',\n            }),\n            options: [\n                {\n                    type: 'mock',\n                    name: intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.NewEndpointCreate.mock.endpoints',\n                        defaultMessage: 'Mock Endpoint',\n                    }),\n                },\n                {\n                    type: 'prototyped',\n                    name: intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.NewEndpointCreate.default.prototype.endpoints',\n                        defaultMessage: 'Prototype Endpoint',\n                    }),\n                },\n            ],\n        },\n        {\n            type: 'dynamic',\n            name: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.dynamic.endpoint',\n                defaultMessage: 'Dynamic Endpoint',\n            }),\n            description: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.dynamic.endpoint.description',\n                defaultMessage: 'If you need to send the request to the URI specified in the TO header.',\n            }),\n            options: null,\n        },\n        {\n            type: 'awslambda',\n            name: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.aws.endpoint',\n                defaultMessage: 'AWS Lambda Endpoint',\n            }),\n            description: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.aws.endpoint.description',\n                defaultMessage: 'If you need to invoke AWS Lambda functions through WSO2 API gateway.',\n            }),\n            options: null,\n        },\n    ];\n\n    return (\n        <React.Fragment>\n            <Typography variant='h4' align='left' className={classes.titleWrapper}>\n                <FormattedMessage\n                    id='Apis.Details.Endpoints.NewEndpointCreate.add.endpoints.header'\n                    defaultMessage='Select an Endpoint Type to Add'\n                />\n            </Typography>\n            <Grid container justify='flex-start' spacing={2}>\n                {endpointTypes.map(((type) => {\n                    return (\n                        <Grid item className={classes.inlineMessageContainer}>\n                            <Card className={classes.endpointTypeCard}>\n                                <CardContent className={classes.cardContent}>\n                                    <Typography variant='h5' component='h3' className={classes.head}>\n                                        {type.name}\n                                    </Typography>\n                                    <Divider />\n                                    <Typography component='p' className={classes.content}>\n                                        {type.description}\n                                    </Typography>\n                                    {type.options ?\n                                        <div>\n                                            <FormControl component='fieldset' className={classes.formControl}>\n                                                <RadioGroup\n                                                    aria-label='EndpointType'\n                                                    name='endpointType'\n                                                    className={classes.radioGroup}\n                                                    value={endpointImplType}\n                                                    onChange={(event) => { setImplType(event.target.value); }}\n                                                >\n                                                    {type.options.map((option) => {\n                                                        return (\n                                                            <FormControlLabel\n                                                                value={option.type}\n                                                                control={<Radio />}\n                                                                label={option.name}\n                                                            />\n                                                        );\n                                                    })}\n                                                </RadioGroup>\n                                            </FormControl>\n                                        </div> :\n                                        <div /> }\n                                </CardContent>\n                                <CardActions className={classes.cardActions}>\n                                    <Button\n                                        color='primary'\n                                        className={classes.button}\n                                        onClick={() => generateEndpointConfig(type.type, endpointImplType)}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Endpoints.NewEndpointCreate.create.button'\n                                            defaultMessage='Add'\n                                        />\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    );\n                }))}\n            </Grid>\n        </React.Fragment>\n    );\n}\n\nNewEndpointCreate.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    generateEndpointConfig: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(injectIntl(NewEndpointCreate));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport {\n    Divider,\n    Icon,\n    IconButton,\n    InputAdornment,\n    TextField,\n    withStyles,\n} from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst styles = theme => ({\n    endpointInputWrapper: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    textField: {\n        width: '100%',\n    },\n    input: {\n        marginLeft: theme.spacing(),\n        flex: 1,\n    },\n    iconButton: {\n        padding: theme.spacing(),\n    },\n    divider: {\n        width: 1,\n        height: 28,\n        margin: 4,\n    },\n});\n/**\n * This component represents a single endpoint view of the endpoints listing. This component holds the actions that\n * affect the endpont. Eg: Delete, advance configuration.\n *\n * @param {any} props The input props\n * @returns {any} The HTML representation of the component.\n * */\nfunction GenericEndpoint(props) {\n    const {\n        category,\n        endpointURL,\n        editEndpoint,\n        classes,\n        type,\n        setAdvancedConfigOpen,\n        deleteEndpoint,\n        index,\n        readOnly,\n    } = props;\n    const [serviceUrl, setServiceUrl] = useState(endpointURL);\n    const { api } = useContext(APIContext);\n\n    useEffect(() => {\n        setServiceUrl(endpointURL);\n    }, [endpointURL]);\n\n    return (\n        <React.Fragment className={classes.endpointInputWrapper}>\n            <TextField\n                disabled={isRestricted(['apim:api_create'], api)}\n                label={<FormattedMessage\n                    id='Apis.Details.Endpoints.GenericEndpoint.service.url.input'\n                    defaultMessage='Service URL'\n                />}\n                className={classes.textField}\n                value={serviceUrl}\n                placeholder={!serviceUrl ? 'http://appserver/resource' : ''}\n                onChange={event => setServiceUrl(event.target.value)}\n                onBlur={() => editEndpoint(index, category, serviceUrl)}\n                variant='outlined'\n                margin='normal'\n                required\n                InputProps={{\n                    readOnly,\n                    endAdornment: (\n                        <InputAdornment position='end'>\n                            {type === 'prototyped' ?\n                                <div /> :\n                                <IconButton\n                                    className={classes.iconButton}\n                                    aria-label='Settings'\n                                    onClick={() => setAdvancedConfigOpen(index, type, category)}\n                                >\n                                    <Icon>\n                                        settings\n                                    </Icon>\n                                </IconButton>\n                            }\n                            {(index > 0) ? <Divider className={classes.divider} /> : <div />}\n                            {(type === 'load_balance' || type === 'failover') ? (\n                                <IconButton\n                                    className={classes.iconButton}\n                                    aria-label='Delete'\n                                    color='secondary'\n                                    onClick={() => deleteEndpoint(index, type, category)}\n                                >\n                                    <Icon>\n                                        delete\n                                    </Icon>\n                                </IconButton>\n                            ) : (<div />)}\n                        </InputAdornment>\n                    ),\n                }}\n            />\n        </React.Fragment>);\n}\n\nGenericEndpoint.defaultProps = {\n    readOnly: false,\n};\n\nGenericEndpoint.propTypes = {\n    endpointURL: PropTypes.string.isRequired,\n    deleteEndpoint: PropTypes.func.isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    type: PropTypes.string.isRequired,\n    setAdvancedConfigOpen: PropTypes.func.isRequired,\n    index: PropTypes.number.isRequired,\n    editEndpoint: PropTypes.func.isRequired,\n    category: PropTypes.string.isRequired,\n    readOnly: PropTypes.bool,\n};\n\nexport default withStyles(styles)(GenericEndpoint);\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useState, useContext } from 'react';\n\nimport {\n    Icon,\n    IconButton,\n    InputAdornment,\n    TextField,\n    withStyles,\n} from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst styles = theme => ({\n    endpointInputWrapper: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    textField: {\n        width: '100%',\n    },\n    input: {\n        marginLeft: theme.spacing(),\n        flex: 1,\n    },\n    iconButton: {\n        padding: theme.spacing(),\n    },\n});\n\n/**\n * This component represents the view and functions of endpoint add.\n *\n * @param {any} props The input props.\n * @returns {any} HTML representation of the component.\n * */\nfunction GenericEndpointAdd(props) {\n    const {\n        classes,\n        addEndpoint,\n    } = props;\n    const [serviceUrl, setServiceUrl] = useState('');\n    const [isError, setError] = useState(false);\n    const { api } = useContext(APIContext);\n\n    /**\n     * The method to handle endpoint add button click action.\n     * */\n    const onAddEndpoint = () => {\n        setServiceUrl('');\n        addEndpoint(serviceUrl);\n    };\n\n    return (\n        <React.Fragment className={classes.endpointInputWrapper}>\n            <TextField\n                label={<FormattedMessage\n                    id='Apis.Details.Endpoints.GenericEndpoint.service.url.input'\n                    defaultMessage='Service URL'\n                />}\n                disabled={isRestricted(['apim:api_create'], api)}\n                className={classes.textField}\n                value={serviceUrl}\n                onChange={event => setServiceUrl(event.target.value)}\n                onBlur={event => setError(event.target.value === '')}\n                variant='outlined'\n                margin='normal'\n                placeholder='Add new endpoint'\n                error={isError}\n                required\n                InputProps={{\n                    endAdornment: (\n                        <InputAdornment position='end'>\n                            <IconButton\n                                onClick={onAddEndpoint}\n                                color='green'\n                                className={classes.iconButton}\n                                aria-label='Search'\n                                disabled={serviceUrl === ''}\n                            >\n                                <Icon>\n                                    add\n                                </Icon>\n                            </IconButton>\n                        </InputAdornment>\n                    ),\n                }}\n            />\n        </React.Fragment>);\n}\n\nGenericEndpointAdd.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    addEndpoint: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(GenericEndpointAdd);\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Grid, withStyles } from '@material-ui/core';\nimport { injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport GenericEndpoint from './GenericEndpoint';\nimport GenericEndpointAdd from './GenericEndpointAdd';\n\nconst styles = theme => ({\n    endpointInputWrapper: {\n        display: 'flex',\n    },\n    epInput: {\n        width: '100%',\n    },\n    epTypeWrapper: {\n        display: 'flex',\n        padding: '5px',\n    },\n    epTypeName: {\n        paddingTop: '10px',\n        fontWeight: 600,\n    },\n    epConfig: {\n        justifyContent: 'flex-end',\n    },\n    leftArrow: {\n        paddingTop: '6px',\n    },\n    leftArrowLight: {\n        color: '#c5c5c5',\n        paddingTop: '6px',\n    },\n    dialogHeader: {\n        fontWeight: 600,\n    },\n    listItemOdd: {\n        background: '#ececec',\n        borderRadius: '5px',\n        '&:hover': {\n            backgroundColor: theme.palette.grey[300],\n        },\n        '&:focus': {\n            backgroundColor: theme.palette.grey[400],\n        },\n    },\n    listItem: {\n        borderRadius: '5px',\n        '&:hover': {\n            backgroundColor: theme.palette.grey[300],\n        },\n        '&:focus': {\n            backgroundColor: theme.palette.grey[400],\n        },\n    },\n});\n\n/**\n * The Component for endpoint listing.\n * @param {*} props The props that are being passed to the component.\n * @returns {any} The HTML view of the ep listing component.\n */\nfunction EndpointListing(props) {\n    const {\n        classes,\n        category,\n        apiEndpoints,\n        epType,\n        failOvers,\n        editEndpoint,\n        addNewEndpoint,\n        removeEndpoint,\n        setAdvancedConfigOpen,\n    } = props;\n    const [endpointType, setEndpointType] = useState(epType);\n    const [endpoints, setEndpoints] = useState([{ url: 'http://myservice/endpoint' }]);\n    const selectedRef = useRef(null);\n\n    /**\n     * Method to add a new endpoint.\n     *\n     * @param {string} url The url of the endpoint that needs to be added.\n     * */\n    const addEndpoint = (url) => {\n        addNewEndpoint(category, epType, url);\n    };\n\n    useEffect(() => {\n        setEndpointType(epType);\n        setEndpoints(() => {\n            if (apiEndpoints !== null && epType === 'failover') {\n                return ([apiEndpoints].concat(failOvers));\n            } else {\n                if (apiEndpoints !== undefined) {\n                    return Array.isArray(apiEndpoints) ? apiEndpoints : [apiEndpoints];\n                }\n                return [{ url: 'http://myservice/' }];\n            }\n        });\n    }, [props]);\n\n    return (\n        <React.Fragment className={classes.listingWrapper} ref={selectedRef}>\n            <Grid container direction='column' xs={12}>\n                <Grid xs={12}>\n                    {(endpointType === 'failover' || endpointType === 'load_balance') ?\n                        <GenericEndpointAdd addEndpoint={addEndpoint} /> : <div />}\n                </Grid>\n                <Grid xs={12}>\n                    {\n                        (endpoints.map((ep, index) => {\n                            if (index > 0) {\n                                return (\n                                    <GenericEndpoint\n                                        readOnly\n                                        endpointURL={endpoints[index] ? endpoints[index].url : ''}\n                                        type={endpointType}\n                                        index={index}\n                                        category={category}\n                                        editEndpoint={editEndpoint}\n                                        deleteEndpoint={removeEndpoint}\n                                        setAdvancedConfigOpen={setAdvancedConfigOpen}\n                                    />\n                                );\n                            }\n                            return (<div />);\n                        }))\n                    }\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n}\n\nEndpointListing.propTypes = {\n    classes: PropTypes.shape({\n        epTypeWrapper: PropTypes.shape({}),\n        epTypeName: PropTypes.shape({}),\n        listingWrapper: PropTypes.shape({}),\n        epConfig: PropTypes.shape({}),\n    }).isRequired,\n    epType: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    apiEndpoints: PropTypes.shape({}).isRequired,\n    failOvers: PropTypes.shape({}).isRequired,\n    addNewEndpoint: PropTypes.func.isRequired,\n    removeEndpoint: PropTypes.func.isRequired,\n    editEndpoint: PropTypes.func.isRequired,\n    setAdvancedConfigOpen: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(EndpointListing));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport cloneDeep from 'lodash.clonedeep';\n\n/**\n * Utility method to get the endpoint property name based on the given endpoint type and category.\n *\n * @param {string} type The type of the endpoint (load_balance/ failover)\n * @param {string} category The endpoint category (production/ sandbox)\n * @return {string} The property name of the endpoints.\n */\nfunction getEndpointTypeProperty(type, category) {\n    if (type !== 'failover') {\n        return category;\n    } else {\n        return category === 'sandbox_endpoints' ? 'sandbox_failovers' : 'production_failovers';\n    }\n}\n\n/**\n * Merge the loadbalance/ failover endpoints to single object.\n *\n * @param {object} endpointConfig The endpoint config object\n * @return {object} {production: [], sandbox: []}\n * */\nfunction mergeEndpoints(endpointConfig) {\n    const type = endpointConfig.endpoint_type;\n    if (type === 'load_balance') {\n        return { production: endpointConfig.production_endpoints, sandbox: endpointConfig.sandbox_endpoints };\n    } else if (type === 'failover') {\n        const prodEps = [endpointConfig.production_endpoints].concat(endpointConfig.production_failovers);\n        const sandboxEps = [endpointConfig.sandbox_endpoints].concat(endpointConfig.sandbox_failovers);\n        return { production: prodEps, sandbox: sandboxEps };\n    }\n    return { production: [endpointConfig.production_endpoints], sandbox: [endpointConfig.sandbox_endpoints] };\n}\n\n/**\n * Method to get the endpoints templates based on the selected endpoint type (loadbalance/ failover) and whether is\n * http or address endpoint.\n *\n * @param {string} endpointType The endpoint type\n * @param {bool} isAddressEndpoint Whether the endpoint is soap or not.\n * @param {object} currentEndpointConfig The existing endpoint information.\n * @return {object} A endpoint template object.\n * */\nfunction getEndpointTemplateByType(endpointType, isAddressEndpoint, currentEndpointConfig) {\n    const tmpEndpointConfig = {};\n    if (endpointType === 'failover') {\n        tmpEndpointConfig.endpoint_type = endpointType;\n        tmpEndpointConfig.production_failovers =\n            currentEndpointConfig.production_failovers ? currentEndpointConfig.production_failovers : [];\n        tmpEndpointConfig.sandbox_failovers =\n            currentEndpointConfig.sandbox_failovers ? currentEndpointConfig.sandbox_failovers : [];\n        tmpEndpointConfig.production_endpoints =\n            Array.isArray(currentEndpointConfig.production_endpoints) ?\n                currentEndpointConfig.production_endpoints[0] : currentEndpointConfig.production_endpoints;\n        tmpEndpointConfig.sandbox_endpoints =\n            Array.isArray(currentEndpointConfig.sandbox_endpoints) ?\n                currentEndpointConfig.sandbox_endpoints[0] : currentEndpointConfig.sandbox_endpoints;\n        tmpEndpointConfig.failOver = 'True';\n    } else if (endpointType === 'load_balance') {\n        tmpEndpointConfig.endpoint_type = endpointType;\n        tmpEndpointConfig.algoClassName = 'org.apache.synapse.endpoints.algorithms.RoundRobin';\n        tmpEndpointConfig.algoCombo = 'org.apache.synapse.endpoints.algorithms.RoundRobin';\n        tmpEndpointConfig.sessionManagement = '';\n        tmpEndpointConfig.sessionTimeOut = '';\n        tmpEndpointConfig.production_endpoints = Array.isArray(currentEndpointConfig.production_endpoints) ?\n            currentEndpointConfig.production_endpoints : [currentEndpointConfig.production_endpoints];\n        tmpEndpointConfig.sandbox_endpoints =\n            Array.isArray(currentEndpointConfig.sandbox_endpoints) ?\n                currentEndpointConfig.sandbox_endpoints : [currentEndpointConfig.sandbox_endpoints];\n        tmpEndpointConfig.failOver = 'False';\n    } else {\n        tmpEndpointConfig.endpoint_type = isAddressEndpoint === true ? 'address' : endpointType;\n        tmpEndpointConfig.production_endpoints = Array.isArray(currentEndpointConfig.production_endpoints) ?\n            currentEndpointConfig.production_endpoints[0] : currentEndpointConfig.production_endpoints;\n        tmpEndpointConfig.sandbox_endpoints =\n            Array.isArray(currentEndpointConfig.sandbox_endpoints) ?\n                currentEndpointConfig.sandbox_endpoints[0] : currentEndpointConfig.sandbox_endpoints;\n        tmpEndpointConfig.failOver = 'False';\n    }\n    return tmpEndpointConfig;\n}\n\n/**\n * Returns all the endpoints as a list.\n *\n * @param {object} endpointConfig The endpoint config object from the api.\n * @return {array} The list of endpoints.\n * */\nfunction endpointsToList(endpointConfig) {\n    const config = cloneDeep(endpointConfig);\n    const endpoints = [];\n\n    if (Array.isArray(config.production_endpoints)) {\n        endpoints.concat(config.production_endpoints);\n    } else {\n        endpoints.push(config.production_endpoints);\n    }\n\n    if (Array.isArray(config.sandbox_endpoints)) {\n        endpoints.concat(config.sandbox_endpoints);\n    } else {\n        endpoints.push(config.sandbox_endpoints);\n    }\n\n    if (config.endpoint_type === 'failover') {\n        endpoints.push(...config.sandbox_failovers);\n        endpoints.push(...config.production_failovers);\n    }\n    return endpoints;\n}\n\n/**\n * Returns an endpoint config object template based on the implementation method.\n * Eg: Managed, Prototyped.\n *\n * @param {string} implementationType The endpoint implementation type.\n * @return {object} The endpoint template.\n * */\nfunction getEndpointConfigByImpl(implementationType) {\n    const tmpEndpointConfig = {};\n    if (implementationType === 'PROTOTYPED') {\n        tmpEndpointConfig.endpoint_type = 'http';\n        tmpEndpointConfig.implementation_status = 'prototyped';\n        tmpEndpointConfig.production_endpoints = { config: null, url: 'http://localhost' };\n        tmpEndpointConfig.sandbox_endpoints = { config: null, url: 'http://localhost' };\n    } else {\n        tmpEndpointConfig.endpoint_type = 'http';\n        tmpEndpointConfig.production_endpoints = { url: '' };\n        tmpEndpointConfig.sandbox_endpoints = { url: '' };\n        tmpEndpointConfig.failOver = 'False';\n    }\n    return tmpEndpointConfig;\n}\n\n/**\n * Get the endpoint config based on the selected endpoint type.\n * Supported endpoint types:\n * 1. http\n * 2. address\n * 3. prototyped\n * 4. awslambda\n * 5. default (Dynamic)\n *\n * @param {string} endpointType The selected endpoint type.\n * @return {endpointConfig} Endpoint config object.\n * */\nfunction createEndpointConfig(endpointType) {\n    const tmpEndpointConfig = {};\n    switch (endpointType) {\n        case 'http':\n            tmpEndpointConfig.endpoint_type = 'http';\n            tmpEndpointConfig.production_endpoints = { url: '' };\n            tmpEndpointConfig.sandbox_endpoints = { url: '' };\n            tmpEndpointConfig.failOver = 'False';\n            break;\n        case 'address':\n            tmpEndpointConfig.endpoint_type = 'address';\n            tmpEndpointConfig.production_endpoints = {\n                url: '',\n                endpoint_type: 'address',\n                template_not_supported: false,\n            };\n            tmpEndpointConfig.sandbox_endpoints = {\n                url: '',\n                endpoint_type: 'address',\n                template_not_supported: false,\n            };\n            tmpEndpointConfig.failOver = 'False';\n            break;\n        case 'prototyped':\n            tmpEndpointConfig.implementation_status = 'prototyped';\n            tmpEndpointConfig.endpoint_type = 'http';\n            tmpEndpointConfig.production_endpoints = { config: null, url: 'http://localhost' };\n            tmpEndpointConfig.sandbox_endpoints = { config: null, url: 'http://localhost' };\n            break;\n        case 'awslambda':\n            tmpEndpointConfig.endpoint_type = 'awslambda';\n            tmpEndpointConfig.accessKey = '';\n            tmpEndpointConfig.secretKey = '';\n            break;\n        default:\n            tmpEndpointConfig.endpoint_type = 'default';\n            tmpEndpointConfig.production_endpoints = { url: 'default' };\n            tmpEndpointConfig.sandbox_endpoints = { url: 'default' };\n            tmpEndpointConfig.failOver = 'False';\n            break;\n    }\n    return tmpEndpointConfig;\n}\n\nexport {\n    getEndpointTypeProperty,\n    mergeEndpoints,\n    getEndpointTemplateByType,\n    endpointsToList,\n    getEndpointConfigByImpl,\n    createEndpointConfig,\n};\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Grid,\n    TextField,\n    MenuItem,\n    InputLabel,\n    Select,\n    FormControl,\n} from '@material-ui/core';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\n/**\n * The base component for advanced endpoint configurations.\n * @param {any} props The props that are being passed\n * @returns {any} The html representation of the component.\n */\nfunction EndpointSecurity(props) {\n    const { api } = useContext(APIContext);\n    const {\n        intl,\n        securityInfo,\n        onChangeEndpointAuth,\n    } = props;\n    const [endpointSecurityInfo, setEndpointSecurityInfo] = useState({\n        type: 'BASIC',\n        username: '',\n        password: '',\n    });\n\n    const authTypes = [\n        {\n            key: 'BASIC',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.basic',\n                defaultMessage: 'Basic Auth',\n            }),\n        },\n        {\n            key: 'DIGEST',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.digest.auth',\n                defaultMessage: 'Digest Auth',\n            }),\n        }];\n\n    useEffect(() => {\n        setEndpointSecurityInfo(securityInfo !== null ? securityInfo : endpointSecurityInfo);\n    }, [props]);\n\n    return (\n        <Grid container direction='column'>\n            <Grid item xs={12}>\n                <FormControl>\n                    <InputLabel htmlFor='auth-type-select'>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.auth.type'\n                            defaultMessage='Auth Type'\n                        />\n                    </InputLabel>\n                    <Select\n                        disabled={isRestricted(['apim:api_create'], api)}\n                        fullwidth\n                        value={endpointSecurityInfo.type}\n                        onChange={(event) => { onChangeEndpointAuth(event, 'type'); }}\n                        inputProps={{\n                            name: 'key',\n                            id: 'auth-type-select',\n                        }}\n                    >\n                        {authTypes.map(type => (\n                            <MenuItem value={type.key}>\n                                {type.value}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item container xs={12}>\n                <Grid item xs>\n                    <TextField\n                        disabled={isRestricted(['apim:api_create'], api)}\n                        required\n                        id='auth-userName'\n                        label={(\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.user.name.input'\n                                defaultMessage='User Name'\n                            />\n                        )}\n                        onChange={\n                            event => setEndpointSecurityInfo({ ...endpointSecurityInfo, username: event.target.value })}\n                        value={endpointSecurityInfo.username}\n                        onBlur={(event) => { onChangeEndpointAuth(event, 'username'); }}\n                    />\n                </Grid>\n                <Grid item xs>\n                    <TextField\n                        disabled={isRestricted(['apim:api_create'], api)}\n                        required\n                        type='password'\n                        id='auth-password'\n                        label={(\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.password.input'\n                                defaultMessage='Password'\n                            />\n                        )}\n                        value={endpointSecurityInfo.password}\n                        onChange={\n                            event => setEndpointSecurityInfo({ ...endpointSecurityInfo, password: event.target.value })}\n                        onBlur={(event) => { onChangeEndpointAuth(event, 'password'); }}\n                    />\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nEndpointSecurity.propTypes = {\n    classes: PropTypes.shape({\n        advancedConfigWrapper: PropTypes.shape({}),\n        textField: PropTypes.shape({}),\n        menu: PropTypes.shape({}),\n        credentialsContainer: PropTypes.shape({}),\n    }).isRequired,\n    intl: PropTypes.func.isRequired,\n    securityInfo: PropTypes.shape({}).isRequired,\n    onChangeEndpointAuth: PropTypes.func.isRequired,\n};\n\nexport default injectIntl((EndpointSecurity));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport {\n    Collapse,\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary,\n    FormControl,\n    FormControlLabel,\n    Grid,\n    InputLabel,\n    MenuItem,\n    Select,\n    Switch,\n    Typography,\n    withStyles,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport EndpointSecurity from './GeneralConfiguration/EndpointSecurity';\nimport Certificates from './GeneralConfiguration/Certificates';\nimport API from '../../../../data/api'; // TODO: Use webpack aliases instead of relative paths ~tmkb\nimport Alert from '../../../Shared/Alert';\nimport { endpointsToList } from './endpointUtils';\n\nconst styles = theme => ({\n    endpointTypeSelect: {\n        width: '50%',\n    },\n    configHeaderContainer: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    generalConfigContent: {\n        boxShadow: 'inset -1px 2px 3px 0px #c3c3c3',\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n        display: 'flex',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n        fontWeight: '900',\n    },\n    endpointConfigSection: {\n        padding: '10px',\n    },\n    generalConfigPanel: {\n        width: '100%',\n    },\n});\n\nconst endpointTypes = [\n    { key: 'http', value: 'HTTP/REST Endpoint' },\n    { key: 'address', value: 'HTTP/SOAP Endpoint' },\n    { key: 'default', value: 'Dynamic Endpoints' },\n    { key: 'awslambda', value: 'AWS Lambda Endpoint' },\n];\n\n/**\n * The component which holds the general configurations of the endpoints.\n *\n * @param {any} props The input properties to the component\n * @returns {any} The HTML representation of the component.\n * */\nfunction GeneralConfiguration(props) {\n    const {\n        intl,\n        epConfig,\n        endpointSecurityInfo,\n        handleToggleEndpointSecurity,\n        handleEndpointSecurityChange,\n        handleEndpointTypeSelect,\n        endpointType,\n        classes,\n        apiType,\n    } = props;\n    const [isConfigExpanded, setConfigExpand] = useState(true);\n    const [endpointCertificates, setEndpointCertificates] = useState([]);\n    const [epTypeSubHeading, setEpTypeSubHeading] = useState('Single HTTP/ REST');\n    const { api } = useContext(APIContext);\n\n    /**\n     * Method to upload the certificate content by calling the rest api.\n     * */\n    const saveCertificate = (certificate, endpoint, alias) => {\n        API.addCertificate(certificate, endpoint, alias)\n            .then((resp) => {\n                if (resp.status === 201) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.add.success',\n                        defaultMessage: 'Certificate added successfully',\n                    }));\n                    const tmpCertificates = [...endpointCertificates];\n                    tmpCertificates.push({\n                        alias: resp.obj.alias,\n                        endpoint: resp.obj.endpoint,\n                    });\n                    setEndpointCertificates(tmpCertificates);\n                }\n            })\n            .catch((err) => {\n                console.error(err.message);\n                if (err.message === 'Conflict') {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.alias.exist',\n                        defaultMessage: 'Adding Certificate Failed. Certificate alias exists.',\n                    }));\n                }\n            });\n    };\n\n    /**\n     * Method to get the endpoint type heading.\n     * Ex: Load Balance REST/ HTTP, Fail Over SOAP/ HTTP\n     *\n     * @return {string} The endpoint type string.\n     * */\n    const getEndpointTypeSubHeading = () => {\n        let type = '';\n        const epType = epConfig.endpoint_type;\n        const endpointTypeKey = endpointType.key;\n\n        if (endpointTypeKey === 'default') {\n            return 'Dynamic Endpoints';\n        }\n\n        if (endpointTypeKey === 'awslambda') {\n            return 'AWS Lambda Endpoint';\n        }\n\n        switch (epType) {\n            case 'load_balance':\n                type = 'Load Balance';\n                break;\n            case 'failover':\n                type = 'Fail Over';\n                break;\n            default:\n                type = 'Single';\n                break;\n        }\n        if (endpointTypeKey === 'address') {\n            type = type.concat(' HTTP/ SOAP');\n        } else {\n            type = type.concat(' HTTP/ REST');\n        }\n        return type;\n    };\n\n    /**\n     * Method to delete the selected certificate.\n     *\n     * @param {string} alias The alias of the certificate to be deleted.\n     * */\n    const deleteCertificate = (alias) => {\n        API.deleteEndpointCertificate(alias)\n            .then((resp) => {\n                setEndpointCertificates(() => {\n                    if (resp.status === 200) {\n                        return endpointCertificates.filter((cert) => {\n                            return cert.alias !== alias;\n                        });\n                    } else {\n                        return -1;\n                    }\n                });\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.delete.success',\n                    defaultMessage: 'Certificate Deleted Successfully',\n                }));\n            })\n            .catch((err) => {\n                console.log(err);\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.delete.error',\n                    defaultMessage: 'Error Deleting Certificate',\n                }));\n            });\n    };\n\n    useEffect(() => {\n        const heading = getEndpointTypeSubHeading();\n        setEpTypeSubHeading(heading);\n    }, [props]);\n\n    // Get the certificates from backend.\n    useEffect(() => {\n        API.getEndpointCertificates()\n            .then((resp) => {\n                const { certificates } = resp.obj;\n                const endpoints = endpointsToList(epConfig);\n                const filteredCertificates = certificates.filter((cert) => {\n                    for (const endpoint of endpoints) {\n                        if (endpoint.url.indexOf(cert.endpoint) !== -1) {\n                            return true;\n                        }\n                    }\n                    return false;\n                });\n                setEndpointCertificates(filteredCertificates);\n            })\n            .catch((err) => {\n                console.error(err);\n                setEndpointCertificates([]);\n            });\n    }, []);\n\n    return (\n        <React.Fragment>\n            <ExpansionPanel\n                expanded={isConfigExpanded}\n                onChange={() => setConfigExpand(!isConfigExpanded)}\n                className={classes.generalConfigPanel}\n            >\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls='panel1bh-content'\n                    id='panel1bh-header'\n                    className={classes.configHeaderContainer}\n                >\n                    <Typography className={classes.heading}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.general.configuration.heading'\n                            defaultMessage='General Configuration'\n                        />\n                    </Typography>\n                    {apiType !== 'HTTP' ? (\n                        <div />\n                    ) : (\n                        <Typography className={classes.secondaryHeading}>\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.GeneralConfiguration.endpoint.type.sub.heading'\n                                defaultMessage='Endpoint Type'\n                            />{' '}\n                            : {epTypeSubHeading}\n                            {' | '}\n                        </Typography>\n                    )}\n                    {apiType !== 'HTTP' || endpointType.key === 'awslambda' ? (\n                        <div />\n                    ) : (\n                        <Typography\n                            className={classes.secondaryHeading}\n                            hidden={\n                                apiType !== 'HTTP' || endpointType.key === 'default' || endpointType.key === 'awslambda'\n                            }\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.GeneralConfiguration.endpoint.security.sub.heading'\n                                defaultMessage='Endpoint Security'\n                            />\n                            : {endpointSecurityInfo !== null ? endpointSecurityInfo.type : 'None'}\n                            {' | '}\n                        </Typography>\n                    )}\n                    {apiType !== 'HTTP' || endpointType.key === 'default' || endpointType.key === 'awslambda' ? (\n                        <div />\n                    ) : (\n                        <Typography\n                            className={classes.secondaryHeading}\n                            hidden={\n                                apiType !== 'HTTP' || endpointType.key === 'default' || endpointType.key === 'awslambda'\n                            }\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.GeneralConfiguration.certificates.sub.heading'\n                                defaultMessage='Certificates'\n                            />\n                            : {endpointCertificates.length}\n                        </Typography>\n                    )}\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.generalConfigContent}>\n                    <Grid container direction='row' xs={12}>\n                        {apiType !== 'HTTP' ? (\n                            <div />\n                        ) : (\n                            <Grid container item xs={8}>\n                                <Grid item xs className={classes.endpointConfigSection}>\n                                    <FormControl className={classes.endpointTypeSelect}>\n                                        <InputLabel htmlFor='endpoint-type-select'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Endpoints.EndpointOverview.endpointType'\n                                                defaultMessage='Endpoint Type'\n                                            />\n                                        </InputLabel>\n                                        <Select\n                                            disabled={isRestricted(['apim:api_create'], api)}\n                                            value={endpointType.key}\n                                            onChange={handleEndpointTypeSelect}\n                                            inputProps={{\n                                                name: 'key',\n                                                id: 'endpoint-type-select',\n                                            }}\n                                        >\n                                            {endpointTypes.map((type) => {\n                                                return <MenuItem value={type.key}>{type.value}</MenuItem>;\n                                            })}\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                {apiType !== 'HTTP' ? (\n                                    <div />\n                                ) : (\n                                    <Grid\n                                        item\n                                        xs\n                                        className={classes.endpointConfigSection}\n                                        hidden={endpointType.key === 'awslambda'}\n                                    >\n                                        <FormControlLabel\n                                            value='start'\n                                            checked={endpointSecurityInfo !== null}\n                                            control={\n                                                <Switch\n                                                    color='primary'\n                                                    disabled={isRestricted(['apim:api_create'], api)}\n                                                />\n                                            }\n                                            label={\n                                                <FormattedMessage\n                                                    id={\n                                                        'Apis.Details.Endpoints.EndpointOverview.' +\n                                                        'endpoint.security.enable.switch'\n                                                    }\n                                                    defaultMessage='Endpoint Security'\n                                                />\n                                            }\n                                            labelPlacement='start'\n                                            onChange={handleToggleEndpointSecurity}\n                                        />\n                                        <Collapse in={endpointSecurityInfo !== null}>\n                                            <EndpointSecurity\n                                                securityInfo={endpointSecurityInfo}\n                                                onChangeEndpointAuth={handleEndpointSecurityChange}\n                                            />\n                                        </Collapse>\n                                    </Grid>\n                                )}\n                            </Grid>\n                        )}\n                        <Grid\n                            item\n                            xs\n                            className={classes.endpointConfigSection}\n                            hidden={endpointType.key === 'default' || endpointType.key === 'awslambda'}\n                        >\n                            <Certificates\n                                certificates={endpointCertificates}\n                                uploadCertificate={saveCertificate}\n                                deleteCertificate={deleteCertificate}\n                            />\n                        </Grid>\n                    </Grid>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </React.Fragment>\n    );\n}\n\nGeneralConfiguration.propTypes = {\n    epConfig: PropTypes.shape({}).isRequired,\n    endpointSecurityInfo: PropTypes.shape({}).isRequired,\n    handleToggleEndpointSecurity: PropTypes.func.isRequired,\n    handleEndpointSecurityChange: PropTypes.func.isRequired,\n    handleEndpointTypeSelect: PropTypes.func.isRequired,\n    endpointType: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    apiType: PropTypes.string.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(GeneralConfiguration));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { TextField, MenuItem, Grid, Button, withStyles } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst algorithms = [\n    {\n        key: 'org.apache.synapse.endpoints.algorithms.RoundRobin',\n        value: 'Round-Robbin',\n    },\n    { key: 'other', value: 'other' },\n];\nconst sessionManagementOps = [\n    { key: 'http', value: 'Transport' },\n    { key: 'soap', value: 'SOAP' },\n    { key: 'simpleClientSession', value: 'Client Id' },\n    { key: 'none', value: 'None' },\n];\n\nconst defaultTemplateObj = {\n    algoClassName: algorithms[0].key,\n    algoCombo: algorithms[0].key,\n    sessionManagement: sessionManagementOps[0].key,\n    sessionTimeOut: 300,\n};\n\nconst styles = theme => ({\n    configButtonContainer: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingTop: theme.spacing(),\n    },\n});\n\n/**\n * The component for loadbalance endpoint configuration.\n * @param {any} props The props that are being passed.\n * @returns {any} The HTML contents of the Configuration component.\n */\nfunction LoadBalanceConfig(props) {\n    const {\n        algoClassName,\n        algoCombo,\n        sessionManagement,\n        sessionTimeOut,\n        handleLBConfigChange,\n        closeLBConfigDialog,\n        classes,\n    } = props;\n    const [lbConfig, setLbConfigObject] = useState(defaultTemplateObj);\n    const [algoClassNameError, setAlgoClassNameError] = useState(false);\n    const { api } = useContext(APIContext);\n\n    useEffect(() => {\n        setLbConfigObject(() => {\n            const tmpLBConfig = { ...defaultTemplateObj };\n            if (algoCombo) {\n                tmpLBConfig.algoCombo = algoCombo;\n            }\n            if (sessionManagement) {\n                tmpLBConfig.sessionManagement = sessionManagement;\n            }\n            if (algoClassName) {\n                tmpLBConfig.algoClassName = algoClassName;\n            }\n            if (sessionTimeOut) {\n                tmpLBConfig.sessionTimeOut = sessionTimeOut;\n            }\n            return tmpLBConfig;\n        });\n    }, [props]);\n\n    /**\n     * Method to capture the alogrithm select changes.\n     *\n     * @param {any} event The event triggered by the element.\n     * */\n    const handleAlgorithmChange = (event) => {\n        const { value } = event.target;\n        setLbConfigObject({\n            ...lbConfig,\n            algoCombo: value,\n            algoClassName: value === 'other' ? '' : defaultTemplateObj.algoClassName,\n        });\n    };\n\n    /**\n     * Method to capture the onChange event of the elements.\n     *\n     * @param {any} event The event triggered by the element.\n     * @param {string} field The respective field which is being changed.\n     * */\n    const handleFieldChange = (event, field) => {\n        setLbConfigObject({ ...lbConfig, [field]: event.target.value });\n    };\n\n    /**\n     * Method to set the configuration changes to the original endpoints config object.\n     * */\n    const submitConfiguration = () => {\n        handleLBConfigChange(lbConfig);\n    };\n\n    return (\n        <React.Fragment>\n            <Grid container direction='column'>\n                <TextField\n                    id='algorithmSelect'\n                    select\n                    label={<FormattedMessage\n                        id='Apis.Details.Endpoints.LoadBalanceConfig.algorithm'\n                        defaultMessage='Algorithm'\n                    />}\n                    value={lbConfig.algoCombo}\n                    onChange={handleAlgorithmChange}\n                    helperText='Please select the Loadbalance Algorithm.'\n                    margin='normal'\n                    disabled={isRestricted(['apim:api_create'], api)}\n                >\n                    {algorithms.map(algo => (\n                        <MenuItem key={algo.key} value={algo.key} selected={lbConfig.algoCombo}>\n                            {algo.value}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                {(lbConfig.algoCombo === 'other') ?\n                    <TextField\n                        id='customAlgoInput'\n                        label={<FormattedMessage\n                            id='Apis.Details.Endpoints.LoadBalanceConfig.class.name.for.algorithm'\n                            defaultMessage='Class Name for Algorithm'\n                        />}\n                        required\n                        error={algoClassNameError}\n                        value={lbConfig.algoClassName}\n                        onChange={event => handleFieldChange(event, 'algoClassName')}\n                        onBlur={() => setAlgoClassNameError(lbConfig.algoClassName === '')}\n                        helperText='Enter the class name of the loadbalance algorithm'\n                        disabled={isRestricted(['apim:api_create'], api)}\n                        margin='normal'\n                    /> : <div /> }\n                <TextField\n                    id='sessionMgtSelect'\n                    select\n                    label={<FormattedMessage\n                        id='Apis.Details.Endpoints.LoadBalanceConfig.session.management'\n                        defaultMessage='Session Management'\n                    />}\n                    value={lbConfig.sessionManagement}\n                    onChange={event => handleFieldChange(event, 'sessionManagement')}\n                    helperText='Please select the Session Management mechanism.'\n                    margin='normal'\n                    disabled={isRestricted(['apim:api_create'], api)}\n                >\n                    {sessionManagementOps.map(option => (\n                        <MenuItem key={option.key} value={option.key}>\n                            {option.value}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <TextField\n                    id='sessionTimeout'\n                    label={<FormattedMessage\n                        id='Apis.Details.Endpoints.LoadBalanceConfig.session.timeout'\n                        defaultMessage='Session Timeout (Millis)'\n                    />}\n                    value={lbConfig.sessionTimeOut}\n                    onChange={event => handleFieldChange(event, 'sessionTimeOut')}\n                    type='number'\n                    placeholder='300'\n                    margin='normal'\n                    disabled={isRestricted(['apim:api_create'], api)}\n                />\n            </Grid>\n            <Grid className={classes.configButtonContainer}>\n                <Button\n                    color='primary'\n                    autoFocus\n                    onClick={submitConfiguration}\n                    disabled={lbConfig.algoClassName === '' || isRestricted(['apim:api_create'], api)}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.EndpointOverview.loadbalance.config.save.button'\n                        defaultMessage='Save'\n                    />\n                </Button>\n                <Button\n                    color='secondary'\n                    onClick={closeLBConfigDialog}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.EndpointOverview.loadbalance.config.cancel.button'\n                        defaultMessage='Close'\n                    />\n                </Button>\n            </Grid>\n        </React.Fragment>\n    );\n}\n\nLoadBalanceConfig.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    algoClassName: PropTypes.string.isRequired,\n    algoCombo: PropTypes.string.isRequired,\n    sessionManagement: PropTypes.string.isRequired,\n    sessionTimeOut: PropTypes.string.isRequired,\n    handleLBConfigChange: PropTypes.func.isRequired,\n    closeLBConfigDialog: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(LoadBalanceConfig));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport {\n    Divider,\n    FormControl,\n    Grid,\n    Input,\n    InputLabel,\n    MenuItem,\n    Select,\n    TextField,\n    Typography,\n    Button,\n    withStyles,\n} from '@material-ui/core';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst itemHeight = 48;\nconst itemPaddingTop = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: (itemHeight * 4.5) + itemPaddingTop, width: 250,\n        },\n    },\n};\nconst styles = theme => ({\n    formControl: {\n        width: '500px',\n    },\n    subTitle: {\n        fontSize: '1rem',\n        paddingTop: theme.spacing(),\n        paddingBottom: theme.spacing(),\n        marginBottom: theme.spacing(),\n    },\n    configContainer: {\n        paddingTop: '10px',\n    },\n    configSubContainer: {\n        paddingBottom: '10px',\n        marginTop: '5px',\n        padding: '5px',\n    },\n    textField: {\n        marginRight: theme.spacing(),\n        width: '45%',\n    },\n    advanceDialogActions: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n});\n\n/**\n * The component for advanced endpoint configurations.\n * @param {any} props The input props\n * @returns {any} The HTML representation of the compoenent.\n */\nfunction AdvanceEndpointConfig(props) {\n    const { api } = useContext(APIContext);\n    const {\n        classes,\n        intl,\n        advanceConfig,\n        isSOAPEndpoint,\n        onSaveAdvanceConfig,\n        onCancel,\n    } = props;\n    const [advanceConfigObj, setAdvanceConfig] =\n        useState(() => {\n            const config = {};\n            if (isSOAPEndpoint) {\n                config.format = 'soap11';\n                config.optimize = 'SWA';\n            }\n            config.actionDuration = '300';\n            config.actionSelect = 'fault';\n            config.factor = '';\n            config.retryDelay = '';\n            config.retryErroCode = [];\n            config.retryTimeOut = '';\n            config.suspendDuration = '';\n            config.suspendErrorCode = [];\n            config.suspendMaxDuration = '';\n            return config;\n        });\n\n    /**\n     * The error codes definition.\n     * */\n    const errorCodes = [\n        {\n            key: '101001',\n            value: '101001 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.receiver.io.error.receiving',\n                defaultMessage: 'Receiver IO error receiving',\n            }),\n        },\n        {\n            key: '101500',\n            value: '101500 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.sender.io.error.sending',\n                defaultMessage: 'Sender IO Error Sending',\n            }),\n        },\n        {\n            key: '101000',\n            value: '101000 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.receiver.io.error.sending',\n                defaultMessage: 'Retriever IO Error Sending',\n            }),\n        },\n        {\n            key: '101501',\n            value: '101501 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.sender.io.error.receiving',\n                defaultMessage: 'Sender IO Error Receiving',\n            }),\n        },\n        {\n            key: '101503',\n            value: '101503 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.connection.failed',\n                defaultMessage: 'Connection Failed',\n            }),\n        },\n        {\n            key: '101504',\n            value: '101504 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.connection.timed.out',\n                defaultMessage: 'Connection Timed Out',\n            }),\n        },\n        {\n            key: '101505',\n            value: '101505 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.connection.closed',\n                defaultMessage: 'Connection Closed',\n            }),\n        },\n        {\n            key: '101506',\n            value: '101506 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.tpp.protocol.violation',\n                defaultMessage: 'TTP Protocol Violation',\n            }),\n        },\n        {\n            key: '101507',\n            value: '101507 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.connect.cancel',\n                defaultMessage: 'Connect Cancel',\n            }),\n        },\n        {\n            key: '101508',\n            value: '101508 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.connect.timeout',\n                defaultMessage: 'Connect Timeout',\n            }),\n        },\n        {\n            key: '101509',\n            value: '101509 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.send.abort',\n                defaultMessage: 'Send Abort',\n            }),\n        },\n        {\n            key: '101510',\n            value: '101510 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.response.processing.failure',\n                defaultMessage: 'Response Processing Failure',\n            }),\n        }];\n\n    /**\n     * Supported action items.\n     * */\n    const actionItems = [\n        {\n            key: 'fault',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.execute.fault.sequence',\n                defaultMessage: 'Execute Fault Sequence',\n            }),\n        },\n        {\n            key: 'discard',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.discard.message',\n                defaultMessage: 'Discard Message',\n            }),\n        },\n    ];\n\n    /**\n     * Message types for the address endpoint type.\n     * */\n    const messageTypes = [\n        { key: 'soap11', value: 'SOAP 1.1' },\n        { key: 'soap12', value: 'SOAP 1.2' },\n        {\n            key: 'POX',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.plain.old.xml',\n                defaultMessage: 'Plain Old XML (POX)',\n            }),\n        },\n        {\n            key: 'REST',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.representational.state.transfer',\n                defaultMessage: 'Representational State Transer (REST)',\n            }),\n        },\n        {\n            key: 'GET',\n            value: 'GET',\n        },\n        {\n            key: 'leave-as-is',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.leave.as.is',\n                defaultMessage: 'Leave As-Is',\n            }),\n        },\n    ];\n\n    /**\n     * Address endpoint message optimizations.\n     * */\n    const optimizeOptions = [\n        { key: 'SWA', value: 'SWA' },\n        { key: 'MTOM', value: 'MTOM' },\n        {\n            key: 'leave-as-is',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.leave.as.is',\n                defaultMessage: 'Leave As-Is',\n            }),\n        },\n    ];\n\n    useEffect(() => {\n        setAdvanceConfig(() => {\n            if (advanceConfig === {}) {\n                return { ...advanceConfigObj };\n            }\n            return { ...advanceConfigObj, ...advanceConfig };\n        });\n    }, [props]);\n\n    /**\n     * Method to handle the advance endpoint field change. In each change, the advance config object is getting updated.\n     *\n     * @param {any} event The HTML event triggered by the element.\n     * @param {string} field The HTML element that is being changed.\n     * */\n    const handleConfigFieldChange = (event, field) => {\n        const di = { ...advanceConfigObj, [field]: event.target.value };\n        setAdvanceConfig(di);\n    };\n\n    return (\n        <Grid container direction='column' className={classes.configContainer}>\n            {(isSOAPEndpoint) ? (\n                <Grid item container className={classes.configSubContainer}>\n                    <Typography className={classes.subTitle}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.message.content'\n                            defaultMessage='Message Content'\n                        />\n                    </Typography>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel htmlFor='err-code-select'>\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.format.select'\n                                defaultMessage='Format'\n                            />\n                        </InputLabel>\n                        <Select\n                            autoWidth={false}\n                            value={advanceConfigObj.format}\n                            onChange={event => handleConfigFieldChange(event, 'format')}\n                            input={<Input id='err-code-select' />}\n                            MenuProps={MenuProps}\n                        >\n                            {messageTypes.map(messageType => (\n                                <MenuItem key={messageType.key} value={messageType.key}>\n                                    {messageType.value}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel htmlFor='err-code-select'>\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.optimize.select'\n                                defaultMessage='Optimize'\n                            />\n                        </InputLabel>\n                        <Select\n                            autoWidth={false}\n                            value={advanceConfigObj.optimize}\n                            onChange={event => handleConfigFieldChange(event, 'optimize')}\n                            input={<Input id='err-code-select' />}\n                            MenuProps={MenuProps}\n                        >\n                            {optimizeOptions.map(option => (\n                                <MenuItem key={option.key} value={option.key}>\n                                    {option.value}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                    <Divider />\n                </Grid>\n            ) : (<div />)}\n            <Grid item container className={classes.configSubContainer}>\n                <Typography className={classes.subTitle}>\n                    <FormattedMessage id='Endpoint.Suspension.State' defaultMessage='Endpoint Suspension State' />\n                </Typography>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor='err-code-select'>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.error.code'\n                            defaultMessage='Error Code'\n                        />\n                    </InputLabel>\n                    <Select\n                        multiple\n                        autoWidth={false}\n                        value={advanceConfigObj.suspendErrorCode}\n                        onChange={event => handleConfigFieldChange(event, 'suspendErrorCode')}\n                        input={<Input id='err-code-select' />}\n                        MenuProps={MenuProps}\n                        variant='outlined'\n                    >\n                        {errorCodes.map(code => (\n                            <MenuItem key={code.key} value={code.key}>\n                                {code.value}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <TextField\n                    className={classes.textField}\n                    id='initial-duration-input'\n                    value={advanceConfigObj.suspendDuration}\n                    onChange={event => handleConfigFieldChange(event, 'suspendDuration')}\n                    label={\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.initial.duration.ms'\n                            defaultMessage='Initial Duration (ms)'\n                        />\n                    }\n                    margin='normal'\n                    type='number'\n                />\n                <TextField\n                    className={classes.textField}\n                    id='max-duration-input'\n                    value={advanceConfigObj.suspendMaxDuration}\n                    onChange={event => handleConfigFieldChange(event, 'suspendMaxDuration')}\n                    label={\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.max.duration.ms'\n                            defaultMessage='Max Duration (ms)'\n                        />\n                    }\n                    margin='normal'\n                    type='number'\n                />\n                <TextField\n                    className={classes.textField}\n                    value={advanceConfigObj.factor}\n                    onChange={event => handleConfigFieldChange(event, 'factor')}\n                    id='factor-input'\n                    label={\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.factor'\n                            defaultMessage='Factor'\n                        />\n                    }\n                    margin='normal'\n                />\n            </Grid>\n            <Divider />\n            <Grid item container className={classes.configSubContainer}>\n                <Typography className={classes.subTitle}>\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.endpoint.timeout.state'\n                        defaultMessage='Endpoint Timeout State'\n                    />\n                </Typography>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor='err-code-select'>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.error.code'\n                            defaultMessage='Error Code'\n                        />\n                    </InputLabel>\n                    <Select\n                        multiple\n                        autoWidth={false}\n                        value={advanceConfigObj.retryErroCode}\n                        onChange={event => handleConfigFieldChange(event, 'retryErroCode')}\n                        input={<Input id='err-code-select' />}\n                        MenuProps={MenuProps}\n                    >\n                        {errorCodes.map(code => (\n                            <MenuItem key={code.key} value={code.key}>\n                                {code.value}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <TextField\n                    className={classes.textField}\n                    id='retries-input'\n                    value={advanceConfigObj.retryTimeOut}\n                    onChange={event => handleConfigFieldChange(event, 'retryTimeOut')}\n                    label={<FormattedMessage\n                        id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.retries.before.suspension'\n                        defaultMessage='Retries Before Suspension'\n                    />\n                    }\n                    type='number'\n                    margin='normal'\n                />\n                <TextField\n                    className={classes.textField}\n                    id='retry-delay-input'\n                    value={advanceConfigObj.retryDelay}\n                    onChange={event => handleConfigFieldChange(event, 'retryDelay')}\n                    label={<FormattedMessage\n                        id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.retry.delay.ms'\n                        defaultMessage='Retry Delay (ms)'\n                    />}\n                    type='number'\n                    margin='normal'\n                />\n            </Grid>\n            <Divider />\n            <Grid item container className={classes.configSubContainer}>\n                <Typography className={classes.subTitle}>\n                    <FormattedMessage id='Connection.Timeout' defaultMessage='Connection Timeout' />\n                </Typography>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor='err-code-select'>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.action'\n                            defaultMessage='Action'\n                        />\n                    </InputLabel>\n                    <Select\n                        autoWidth={false}\n                        value={advanceConfigObj.actionSelect}\n                        onChange={event => handleConfigFieldChange(event, 'actionSelect')}\n                        input={<Input id='err-code-select' />}\n                        MenuProps={MenuProps}\n                    >\n                        {actionItems.map(item => (\n                            <MenuItem key={item.key} value={item.key}>\n                                {item.value}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <TextField\n                    className={classes.textField}\n                    id='duration-input'\n                    value={advanceConfigObj.actionDuration}\n                    onChange={event => handleConfigFieldChange(event, 'actionDuration')}\n                    label={<FormattedMessage\n                        id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.duration.ms'\n                        defaultMessage='Duration (ms)'\n                    />}\n                    type='number'\n                    margin='normal'\n                />\n            </Grid>\n            <Grid className={classes.advanceDialogActions}>\n                <Button\n                    onClick={() => onSaveAdvanceConfig(advanceConfigObj)}\n                    color='primary'\n                    autoFocus\n                    disabled={isRestricted(['apim:api_create'], api)}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.config.save.button'\n                        defaultMessage='Save'\n                    />\n                </Button>\n                <Button\n                    onClick={onCancel}\n                    color='secondary'\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.cancel.button'\n                        defaultMessage='Close'\n                    />\n                </Button>\n            </Grid>\n        </Grid>\n    );\n}\n\nAdvanceEndpointConfig.propTypes = {\n    classes: PropTypes.shape({\n        configContainer: PropTypes.shape({}),\n        configSubContainer: PropTypes.shape({}),\n        subTitle: PropTypes.shape({}),\n        formControl: PropTypes.shape({}),\n\n    }).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n    advanceConfig: PropTypes.shape({}).isRequired,\n    isSOAPEndpoint: PropTypes.bool.isRequired,\n    onSaveAdvanceConfig: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(AdvanceEndpointConfig));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport {\n    FormControl,\n    Grid,\n    Paper,\n    Typography,\n    withStyles,\n    Radio,\n    FormControlLabel,\n    RadioGroup, Icon, Dialog, DialogTitle, DialogContent, IconButton,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport cloneDeep from 'lodash.clonedeep';\n\nimport EndpointListing from './EndpointListing';\nimport { getEndpointTemplateByType, getEndpointTypeProperty, createEndpointConfig } from './endpointUtils';\nimport GeneralConfiguration from './GeneralConfiguration';\nimport GenericEndpoint from './GenericEndpoint';\nimport LoadBalanceConfig from './LoadBalanceConfig';\nimport AdvanceEndpointConfig from './AdvancedConfig/AdvanceEndpointConfig';\n\n\nconst styles = theme => ({\n    overviewWrapper: {\n        marginTop: theme.spacing(2),\n    },\n    listing: {\n        margin: theme.spacing(),\n        padding: theme.spacing(),\n    },\n    endpointContainer: {\n        paddingBottom: theme.spacing(),\n        paddingTop: theme.spacing(),\n        width: '100%',\n        marginTop: theme.spacing(),\n    },\n    endpointName: {\n        paddingLeft: theme.spacing(),\n        fontSize: '1rem',\n        paddingTop: theme.spacing(),\n        paddingBottom: theme.spacing(),\n    },\n    endpointTypesWrapper: {\n        padding: theme.spacing(3),\n        marginTop: theme.spacing(2),\n    },\n    sandboxHeading: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    radioGroup: {\n        display: 'flex',\n        flexDirection: 'row',\n        paddingTop: theme.spacing(),\n    },\n    endpointsWrapperLeft: {\n        padding: theme.spacing(),\n        borderRight: '#c4c4c4',\n        borderRightStyle: 'solid',\n        borderRightWidth: 'thin',\n    },\n    endpointsWrapperRight: {\n        padding: theme.spacing(),\n    },\n    endpointsTypeSelectWrapper: {\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        padding: theme.spacing(),\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    endpointTypesSelectWrapper: {\n        display: 'flex',\n    },\n    defaultEndpointWrapper: {\n        paddingLeft: theme.spacing(),\n        paddingRight: theme.spacing(),\n        marginRight: theme.spacing(),\n    },\n    configDialogHeader: {\n        fontWeight: '600',\n    },\n    addLabel: {\n        padding: theme.spacing(2),\n    },\n});\n\nconst endpointTypes = [{ key: 'http', value: 'HTTP/REST Endpoint' },\n    { key: 'address', value: 'HTTP/SOAP Endpoint' },\n    { key: 'default', value: 'Dynamic Endpoints' },\n    { key: 'awslambda', value: 'AWS Lambda Endpoint' },\n];\n\n/**\n * The endpoint overview component. This component holds the views of endpoint creation and configuration.\n * @param {any} props The props that are being passed to the component.\n * @returns {any} HTML view of the endpoints overview.\n */\nfunction EndpointOverview(props) {\n    const { classes, api, onChangeAPI } = props;\n    const { endpointConfig, endpointSecurity } = api;\n    const [endpointType, setEndpointType] = useState(endpointTypes[0]);\n    const [epConfig, setEpConfig] = useState(endpointConfig);\n    const [endpointSecurityInfo, setEndpointSecurityInfo] = useState(null);\n    const [isLBConfigOpen, setLBConfigOpen] = useState(false);\n    const [advanceConfigOptions, setAdvancedConfigOptions] = useState({\n        open: false,\n        index: 0,\n        type: '',\n        category: '',\n        config: undefined,\n    });\n\n    /**\n     * Method to get the type of the endpoint. (HTTP/REST or HTTP/SOAP)\n     * In failover/ loadbalance cases, the endpoint type is presented in the endpoints list. Therefore that property\n     * needs to be extracted separately.\n     *\n     * @param {string} type  The representative type of the endpoint.\n     * @return {string} The type of the endpoint.\n     * */\n    const getEndpointType = (type) => {\n        if (type === 'http') {\n            return endpointTypes[0];\n        } else if (type === 'address') {\n            return endpointTypes[1];\n        } else if (type === 'default') {\n            return endpointTypes[2];\n        } else if (type === 'awslambda') {\n            return endpointTypes[3];\n        } else {\n            const prodEndpoints = endpointConfig.production_endpoints;\n            if (Array.isArray(prodEndpoints)) {\n                return prodEndpoints[0].endpoint_type !== undefined ? endpointTypes[1] : endpointTypes[0];\n            }\n            return prodEndpoints.endpoint_type !== undefined ? endpointTypes[1] : endpointTypes[0];\n        }\n    };\n    useEffect(() => {\n        // setEpConfig(endpointConfig);\n        setEndpointType(getEndpointType(endpointConfig.endpoint_type));\n        setEndpointSecurityInfo(endpointSecurity);\n    }, []);\n\n    useEffect(() => {\n        onChangeAPI({ ...api, endpointSecurity: endpointSecurityInfo });\n    }, [endpointSecurityInfo]);\n\n    useEffect(() => {\n        onChangeAPI({ ...api, endpointConfig: epConfig });\n    }, [epConfig]);\n\n    useEffect(() => {\n    }, [endpointType]);\n\n    /**\n     * Method to modify the endpoint represented by the given parameters.\n     *\n     * @param {number} index The index of the endpoint in the listing.\n     * @param {string} category The endpoint category. (production/ sand box)\n     * @param {string} url The new endpoint url.\n     * */\n    const editEndpoint = (index, category, url) => {\n        let modifiedEndpoint = null;\n        // Make a copy of the endpoint config.\n        const endpointConfigCopy = cloneDeep(epConfig);\n\n        /*\n        * If the index > 0, it means that the endpoint is load balance or fail over.\n        * Otherwise it is the default endpoint. (index = 0)\n        * */\n        if (index > 0) {\n            const endpointTypeProperty = getEndpointTypeProperty(endpointConfigCopy.endpoint_type, category);\n            modifiedEndpoint = endpointConfigCopy[endpointTypeProperty];\n            /*\n            * In failover case, the failover endpoints are a separate object. But in endpoint listing, since we\n            *  consider all the endpoints as a single list, to get the real index of the failover endpoint we use\n            *  index - 1.\n            * */\n            if (endpointConfigCopy.endpoint_type === 'failover') {\n                modifiedEndpoint[index - 1].url = url;\n            } else {\n                modifiedEndpoint[index].url = url;\n            }\n            endpointConfigCopy[endpointTypeProperty] = modifiedEndpoint;\n        } else {\n            modifiedEndpoint = endpointConfigCopy[category];\n            /*\n            * In this case, we are editing the default endpoint.\n            * If the endpoint type is load balance, the production_endpoints or the sandbox_endpoint object is an\n            *  array. Otherwise, in failover mode, the default endpoint is an object.\n            *\n            * So, we check whether the endpoints is an array or an object.\n            * */\n            if (Array.isArray(modifiedEndpoint)) {\n                modifiedEndpoint[0].url = url;\n            } else {\n                modifiedEndpoint.url = url;\n            }\n            endpointConfigCopy[category] = modifiedEndpoint;\n        }\n        setEpConfig(endpointConfigCopy);\n    };\n\n    /**\n     * Method to add new loadbalance/ failover endpoint to the existing endpoints.\n     *\n     * @param {string} category The endpoint category (production/ sandbox)\n     * @param {string} type The endpoint type. (load_balance/ failover)\n     * @param {string} newURL The url of the new endpoint.\n     * */\n    const addEndpoint = (category, type, newURL) => {\n        const endpointConfigCopy = cloneDeep(epConfig);\n        let endpointTemplate = {};\n        if (endpointType.key === 'address' || type === 'failover') {\n            endpointTemplate = {\n                endpoint_type: endpointType.key,\n                template_not_supported: false,\n                url: newURL,\n            };\n        } else {\n            endpointTemplate = {\n                url: newURL,\n            };\n        }\n        const epConfigProperty = getEndpointTypeProperty(type, category);\n        let endpointList = endpointConfigCopy[epConfigProperty];\n        /**\n         * Check whether we have existing endpoints added.\n         * */\n        if (endpointList) {\n            if (!Array.isArray(endpointList)) {\n                endpointList = [endpointList].concat(endpointTemplate);\n            } else {\n                endpointList = endpointList.concat(endpointTemplate);\n            }\n        } else {\n            endpointList = [endpointTemplate];\n        }\n        endpointConfigCopy[epConfigProperty] = endpointList;\n        setEpConfig(endpointConfigCopy);\n    };\n\n    /**\n     * Method to capture the endpoint category change.\n     * @param {any} event The html element change event.\n     * */\n    const onChangeEndpointCategory = (event) => {\n        const tmpEndpointConfig = getEndpointTemplateByType(\n            event.target.value,\n            endpointType.key === 'address',\n            epConfig,\n        );\n        setEpConfig({ ...tmpEndpointConfig });\n    };\n\n    /**\n     * Handles the endpoint type select event.\n     * @param {any} event The select event.\n     * */\n    const handleEndpointTypeSelect = (event) => {\n        const selectedKey = event.target.value;\n        const selectedType = endpointTypes.filter((type) => {\n            return type.key === selectedKey;\n        })[0];\n\n        const generatedEndpointConfig = createEndpointConfig(selectedKey);\n\n        setEpConfig(generatedEndpointConfig);\n        setEndpointType(selectedType);\n    };\n\n    /**\n     * Handles the endpoint security toggle action.\n     * */\n    const handleToggleEndpointSecurity = () => {\n        setEndpointSecurityInfo(() => {\n            if (endpointSecurityInfo === null) {\n                return { type: 'BASIC', username: '', password: '' };\n            }\n            return null;\n        });\n    };\n\n    /**\n     * Method to get the advance configuration from the selected endpoint.\n     *\n     * @param {number} index The selected endpoint index\n     * @param {string} epType The type of the endpoint. (loadbalance/ failover)\n     * @param {string} category The endpoint category (Production/ sandbox)\n     * @return {object} The advance config object of the endpoint.\n     * */\n    const getAdvanceConfig = (index, epType, category) => {\n        const endpointTypeProperty = getEndpointTypeProperty(epType, category);\n        let advanceConfig = {};\n        if (index > 0) {\n            if (epConfig.endpoint_type === 'failover') {\n                advanceConfig = epConfig[endpointTypeProperty][index - 1].config;\n            } else {\n                advanceConfig = epConfig[endpointTypeProperty][index].config;\n            }\n        } else {\n            const endpointInfo = epConfig[endpointTypeProperty];\n            if (Array.isArray(endpointInfo)) {\n                advanceConfig = endpointInfo[0].config;\n            } else {\n                advanceConfig = endpointInfo.config;\n            }\n        }\n        return advanceConfig;\n    };\n\n    /**\n     * Method to open/ close the advance configuration dialog. This method also sets some information about the\n     * seleted endpoint type/ category and index.\n     *\n     * @param {number} index The index of the selected endpoint.\n     * @param {string} type The endpoint type\n     * @param {string} category The endpoint category.\n     * */\n    const toggleAdvanceConfig = (index, type, category) => {\n        const advanceEPConfig = getAdvanceConfig(index, type, category);\n        setAdvancedConfigOptions(() => {\n            return ({\n                open: !advanceConfigOptions.open,\n                index,\n                type,\n                category,\n                config: advanceEPConfig === undefined ? {} : advanceEPConfig,\n            });\n        });\n    };\n\n    /**\n     * Method to handle the loadbalance configuration changes.\n     *\n     * @param {object} lbConfig The modified loadbalance configuration.\n     * */\n    const handleLBConfigChange = (lbConfig) => {\n        setEpConfig({ ...epConfig, ...lbConfig });\n        setLBConfigOpen(false);\n    };\n\n    /**\n     * Method to remove the selected endpoint from the endpoints list.\n     *\n     * @param {number} index The selected endpoint index\n     * @param {string} epType The type of the endpoint. (loadbalance/ failover)\n     * @param {string} category The endpoint category (production/ sandbox)\n     * */\n    const removeEndpoint = (index, epType, category) => {\n        const endpointConfigProperty = getEndpointTypeProperty(epType, category);\n        const indexToRemove = epType === 'failover' ? index - 1 : index;\n        const tmpEndpoints = epConfig[endpointConfigProperty];\n        tmpEndpoints.splice(indexToRemove, 1);\n        setEpConfig({ ...epConfig, [endpointConfigProperty]: tmpEndpoints });\n    };\n\n    /**\n     * Method to handle the endpoint security changes.\n     * @param {any} event The html event\n     * @param {string} field The security propety that is being modified.\n     * */\n    const handleEndpointSecurityChange = (event, field) => {\n        setEndpointSecurityInfo({ ...endpointSecurityInfo, [field]: event.target.value });\n    };\n\n    /**\n     * Method to save the advance configurations.\n     *\n     * @param {object} advanceConfig The advance configuration object.\n     * */\n    const saveAdvanceConfig = (advanceConfig) => {\n        const endpointConfigProperty =\n            getEndpointTypeProperty(advanceConfigOptions.type, advanceConfigOptions.category);\n        const selectedEndpoints = cloneDeep(epConfig[endpointConfigProperty]);\n        if (Array.isArray(selectedEndpoints)) {\n            if (advanceConfigOptions.type === 'failover') {\n                selectedEndpoints[advanceConfigOptions.index - 1].config = advanceConfig;\n            } else {\n                selectedEndpoints[advanceConfigOptions.index].config = advanceConfig;\n            }\n        } else {\n            selectedEndpoints.config = advanceConfig;\n        }\n        setAdvancedConfigOptions({ open: false });\n        setEpConfig({ ...epConfig, [endpointConfigProperty]: selectedEndpoints });\n    };\n\n    /**\n     * Method to close the advance configuration dialog box.\n     * */\n    const closeAdvanceConfig = () => {\n        setAdvancedConfigOptions({ open: false });\n    };\n\n    return (\n        <React.Fragment className={classes.overviewWrapper}>\n            <Grid container xs={12}>\n                <Grid container item xs={12}>\n                    <GeneralConfiguration\n                        epConfig={(cloneDeep(epConfig))}\n                        endpointSecurityInfo={endpointSecurityInfo}\n                        onChangeEndpointCategory={onChangeEndpointCategory}\n                        handleToggleEndpointSecurity={handleToggleEndpointSecurity}\n                        handleEndpointSecurityChange={handleEndpointSecurityChange}\n                        handleEndpointTypeSelect={handleEndpointTypeSelect}\n                        endpointType={endpointType}\n                        apiType={api.type}\n                    />\n                </Grid>\n                {endpointType.key === 'awslambda' ?\n                    <div /> :\n                    <Paper className={classes.endpointContainer} hidden={endpointType.key === 'default'}>\n                        <Grid container item xs={12}>\n                            <Grid xs className={classes.endpointsWrapperLeft}>\n                                <div className={classes.sandboxHeading}>\n                                    <Typography className={classes.endpointName}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Endpoints.EndpointOverview.production'\n                                            defaultMessage='Production'\n                                        />\n                                    </Typography>\n                                </div>\n                                <GenericEndpoint\n                                    className={classes.defaultEndpointWrapper}\n                                    endpointURL={\n                                        epConfig.production_endpoints && epConfig.production_endpoints.length > 0 ?\n                                            epConfig.production_endpoints[0].url : epConfig.production_endpoints.url}\n                                    type=''\n                                    index={0}\n                                    category='production_endpoints'\n                                    editEndpoint={editEndpoint}\n                                    setAdvancedConfigOpen={toggleAdvanceConfig}\n                                />\n                            </Grid>\n                            <Grid xs className={classes.endpointsWrapperRight}>\n                                <div className={classes.sandboxHeading}>\n                                    <Typography className={classes.endpointName}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Endpoints.EndpointOverview.sandbox'\n                                            defaultMessage='Sandbox'\n                                        />\n                                    </Typography>\n                                </div>\n                                <GenericEndpoint\n                                    className={classes.defaultEndpointWrapper}\n                                    endpointURL={epConfig.sandbox_endpoints && epConfig.sandbox_endpoints.length > 0 ?\n                                        epConfig.sandbox_endpoints[0].url : epConfig.sandbox_endpoints.url}\n                                    type=''\n                                    index={0}\n                                    category='sandbox_endpoints'\n                                    editEndpoint={editEndpoint}\n                                    setAdvancedConfigOpen={toggleAdvanceConfig}\n                                />\n                            </Grid>\n                        </Grid>\n                        {api.type === 'HTTP' ?\n                            <Grid container item xs={12} direction='column'>\n                                <Grid xs className={classes.endpointsTypeSelectWrapper}>\n                                    <div />\n                                    <div className={classes.endpointTypesSelectWrapper}>\n                                        <div className={classes.addLabel}>\n                                            <Typography>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Endpoints.EndpointOverview.add.text'\n                                                    defaultMessage='Add'\n                                                />\n                                            </Typography>\n                                        </div>\n                                        <FormControl component='fieldset' className={classes.formControl}>\n                                            <RadioGroup\n                                                aria-label='EndpointType'\n                                                name='endpointType'\n                                                className={classes.radioGroup}\n                                                value={epConfig.endpoint_type}\n                                                onChange={onChangeEndpointCategory}\n                                            >\n                                                <FormControlLabel\n                                                    value='failover'\n                                                    control={<Radio />}\n                                                    label='Failover'\n                                                />\n                                                <FormControlLabel\n                                                    value='load_balance'\n                                                    control={<Radio />}\n                                                    label='Load balance'\n                                                />\n                                            </RadioGroup>\n                                        </FormControl>\n                                        <div>\n                                            <IconButton\n                                                disabled={epConfig.endpoint_type !== 'load_balance'}\n                                                aria-label='Delete'\n                                                onClick={() => setLBConfigOpen(true)}\n                                            >\n                                                <Icon>\n                                                    settings\n                                                </Icon>\n                                            </IconButton>\n                                        </div>\n                                    </div>\n                                    <div />\n                                </Grid>\n                                <Grid xs container>\n                                    <Grid xs className={classes.endpointsWrapperLeft}>\n                                        <EndpointListing\n                                            apiEndpoints={epConfig.production_endpoints}\n                                            failOvers={epConfig.production_failovers}\n                                            epType={epConfig.endpoint_type}\n                                            addNewEndpoint={addEndpoint}\n                                            removeEndpoint={removeEndpoint}\n                                            editEndpoint={editEndpoint}\n                                            setAdvancedConfigOpen={toggleAdvanceConfig}\n                                            category='production_endpoints'\n                                        />\n                                    </Grid>\n                                    <Grid xs className={classes.endpointsWrapperRight}>\n                                        <EndpointListing\n                                            apiEndpoints={epConfig.sandbox_endpoints}\n                                            failOvers={epConfig.sandbox_failovers}\n                                            epType={epConfig.endpoint_type}\n                                            addNewEndpoint={addEndpoint}\n                                            removeEndpoint={removeEndpoint}\n                                            editEndpoint={editEndpoint}\n                                            setAdvancedConfigOpen={toggleAdvanceConfig}\n                                            category='sandbox_endpoints'\n                                        />\n                                    </Grid>\n                                </Grid>\n                                {/* TODO : Integrate the mediation sequence upload component here. */}\n                            </Grid> : <div /> }\n                    </Paper>\n                }\n            </Grid>\n            <Dialog open={isLBConfigOpen}>\n                <DialogTitle>\n                    <Typography className={classes.configDialogHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.EndpointOverview.load.balance.configuration.title'\n                            defaultMessage='Load Balance Configuration'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <LoadBalanceConfig\n                        handleLBConfigChange={handleLBConfigChange}\n                        closeLBConfigDialog={() => setLBConfigOpen(false)}\n                        algoCombo={epConfig.algoCombo}\n                        algoClassName={epConfig.algoClassName}\n                        sessionTimeOut={epConfig.sessionTimeOut}\n                        sessionManagement={epConfig.sessionManagement}\n                    />\n                </DialogContent>\n            </Dialog>\n            <Dialog open={advanceConfigOptions.open}>\n                <DialogTitle>\n                    <Typography className={classes.configDialogHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.EndpointOverview.advance.endpoint.configuration'\n                            defaultMessage='Advance Configuration'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <AdvanceEndpointConfig\n                        isSOAPEndpoint={endpointType.key === 'address'}\n                        advanceConfig={advanceConfigOptions.config}\n                        onSaveAdvanceConfig={saveAdvanceConfig}\n                        onCancel={closeAdvanceConfig}\n                    />\n                </DialogContent>\n            </Dialog>\n        </React.Fragment>\n    );\n}\n\nEndpointOverview.propTypes = {\n    classes: PropTypes.shape({\n        overviewWrapper: PropTypes.shape({}),\n        endpointTypesWrapper: PropTypes.shape({}),\n        endpointName: PropTypes.shape({}),\n    }).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    onChangeAPI: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(EndpointOverview));\n","/*\n *  Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\nimport React from 'react';\nimport {\n    Chip,\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary,\n    Grid,\n    Typography,\n    withStyles,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MonacoEditor from 'react-monaco-editor';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n    editor: {\n        width: '100%',\n    },\n    chipActive: {\n        borderRadius: '5px',\n        width: '80%',\n    },\n    resourcePathContainer: {\n        paddingTop: theme.spacing(),\n    },\n    genericResourceContent: {\n        boxShadow: 'inset 0px 3px 2px 0px #aaaaaa',\n    },\n});\n\n/**\n * The generic resource component.\n *\n * @param {any} props The input props\n * @return {any} The HTML representation of the component.\n * */\nfunction GenericResource(props) {\n    const {\n        resourcePath, resourceMethod, scriptContent, classes, theme, onChange,\n    } = props;\n    let chipColor = theme.custom.resourceChipColors ? theme.custom.resourceChipColors[resourceMethod] : null;\n    let chipTextColor = '#000000';\n    if (!chipColor) {\n        console.log('Check the theme settings. The resourceChipColors is not populated properlly');\n        chipColor = '#cccccc';\n    } else {\n        chipTextColor = theme.palette.getContrastText(theme.custom.resourceChipColors[resourceMethod]);\n    }\n\n    return (\n        <ExpansionPanel>\n            <ExpansionPanelSummary\n                className={classes.prototypeResourceHeader}\n                expandIcon={<ExpandMoreIcon />}\n            >\n                <Grid container spacing={12}>\n                    <Grid xs={1}>\n                        <Chip\n                            label={resourceMethod}\n                            style={{ backgroundColor: chipColor, color: chipTextColor }}\n                            className={classes.chipActive}\n                        />\n                    </Grid>\n                    <Grid xs className={classes.resourcePathContainer}>\n                        <Typography>\n                            {resourcePath}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.genericResourceContent}>\n                <Grid container direction='column'>\n                    <Grid item>\n                        <Typography variant='h6'>\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.Prototype.InlineEndpoints.script'\n                                defaultMessage='Script'\n                            /> { ' : ' }\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <MonacoEditor\n                            height='50vh'\n                            width='100%'\n                            theme='vs-dark'\n                            value={scriptContent}\n                            options={{ selectOnLineNumbers: true }}\n                            language='javascript'\n                            onChange={content => onChange(content, resourcePath, resourceMethod)}\n                        />\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n    );\n}\n\nGenericResource.propTypes = {\n    resourcePath: PropTypes.string.isRequired,\n    resourceMethod: PropTypes.string.isRequired,\n    scriptContent: PropTypes.string.isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(GenericResource);\n","/*\n *  Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport GenericResource from 'AppComponents/Apis/Details/Endpoints/Prototype/GenericResource';\n\nconst xMediationScriptProperty = 'x-mediation-script';\nconst defaultScript = '/* mc.setProperty(\"CONTENT_TYPE\", \"application/json\");\\n' +\n    'mc.setPayloadJSON(\"{ \"data\" : \"sample JSON\"}\");*/\\n' +\n    '/*Uncomment the above comment block to send a sample response.*/';\n\n/**\n * The inline endpoints component.\n * This component lists the api resources to add custom mediation scripts.\n *\n * @param {any} props The input props.\n * @return {any} The HTML representation of the component.\n * */\nfunction InlineEndpoints(props) {\n    const { paths, updatePaths } = props;\n\n    /**\n     * Handles the onChange event of the script editor.\n     *\n     * @param {string} value The editor content\n     * @param {string} path The path value of the resource.\n     * @param {string} method The resource method.\n     * */\n    const onScriptChange = (value, path, method) => {\n        const tmpPaths = JSON.parse(JSON.stringify(paths));\n        tmpPaths[path][method][xMediationScriptProperty] = value;\n        updatePaths(tmpPaths);\n    };\n    return (\n        <React.Fragment >\n            {Object.keys(paths).map((path) => {\n                return (\n                    Object.keys(paths[path]).map((method) => {\n                        const mediationScript = paths[path][method][xMediationScriptProperty];\n                        const script = mediationScript === undefined ? defaultScript : mediationScript;\n                        return (<GenericResource\n                            resourcePath={path}\n                            resourceMethod={method}\n                            onChange={onScriptChange}\n                            scriptContent={script}\n                        />);\n                    })\n                );\n            })}\n        </React.Fragment>);\n}\n\nInlineEndpoints.propTypes = {\n    paths: PropTypes.shape({}).isRequired,\n    updatePaths: PropTypes.func.isRequired,\n};\n\nexport default InlineEndpoints;\n\n","/*\n *  Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    FormControl,\n    Grid,\n    Paper,\n    RadioGroup,\n    FormControlLabel,\n    Radio,\n    withStyles, Typography,\n} from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport InlineEndpoints from 'AppComponents/Apis/Details/Endpoints/Prototype/InlineEndpoints';\nimport GenericEndpoint from 'AppComponents/Apis/Details/Endpoints/GenericEndpoint';\nimport cloneDeep from 'lodash.clonedeep';\n\nconst endpointImplementationTypes = [{ key: 'INLINE', value: 'Inline' }, { key: 'ENDPOINT', value: 'Endpoint' }];\n\nconst styles = theme => ({\n    prototypeEndpointSelectorWrapper: {\n        padding: theme.spacing(2),\n    },\n    prototypeEndpointsWrapper: {\n        marginTop: theme.spacing(),\n    },\n    genericEndpointWrapper: {\n        padding: theme.spacing(),\n    },\n    radioGroup: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    implementationMethodHeader: {\n        fontWeight: 900,\n    },\n});\n\n/**\n * The prototype endpoints component.\n * @param {any} props The input props.\n * @return {any} The HTML representation of the prototype endpoints.\n * */\nfunction PrototypeEndpoints(props) {\n    const {\n        api,\n        modifyAPI,\n        classes,\n        swaggerDef,\n        updateSwagger,\n    } = props;\n    const [endpointImplementationType, setImplementationType] = useState('endpoint');\n    const [endpointUrl, setEndpointUrl] = useState('http://localhost');\n\n    useEffect(() => {\n        setImplementationType(api.endpointImplementationType);\n        setEndpointUrl(api.endpointConfig.production_endpoints.url);\n    }, [props]);\n\n    /**\n     * Method to handle the implementation type change event. (inline, endpoint)\n     * @param {any} event The change event.\n     * */\n    const handleImplementationTypeChange = (event) => {\n        const tmpApi = cloneDeep(api);\n        modifyAPI({ ...tmpApi, endpointImplementationType: event.target.value });\n    };\n\n    /**\n     * Method to edit the prototype endpoint.\n     * @param {number} index The endpoint index. (Not used)\n     * @param {string} category The endpoint category. (Not used)\n     * @param {string} serviceUrl The endpoint string.\n     * */\n    const editPrototypeEndpoint = (index, category, serviceUrl) => {\n        const tmpApi = JSON.parse(JSON.stringify(api));\n        const { endpointConfig } = tmpApi;\n        endpointConfig.production_endpoints = { url: serviceUrl };\n        endpointConfig.sandbox_endpoints = { url: serviceUrl };\n        modifyAPI({ ...tmpApi, endpointConfig });\n    };\n\n    /**\n     * Method to update the resource paths object in the swagger.\n     * @param {any} paths The updated paths object.\n     * */\n    const updatePaths = (paths) => {\n        updateSwagger({ ...swaggerDef, paths });\n    };\n    return (\n        <React.Fragment>\n            <Grid container direction='column'>\n                <Paper>\n                    <Grid item className={classes.prototypeEndpointSelectorWrapper}>\n                        <Typography className={classes.implementationMethodHeader}>\n                            <FormattedMessage\n                                id={'Apis.Details.Endpoints.Prototype.PrototypeEndpoints' +\n                                '.endpoint.implementation.method'}\n                                defaultMessage='Endpoint Implementation Method'\n                            />\n                        </Typography>\n                        <FormControl component='fieldset'>\n                            <RadioGroup\n                                aria-label='gender'\n                                name='gender1'\n                                className={classes.radioGroup}\n                                value={endpointImplementationType}\n                                onChange={handleImplementationTypeChange}\n                            >\n                                <FormControlLabel\n                                    value={endpointImplementationTypes[0].key}\n                                    control={<Radio />}\n                                    label={<FormattedMessage\n                                        id='Apis.Details.Endpoints.Prototype.PrototypeEndpoints.mock'\n                                        defaultMessage='Mock'\n                                    />}\n                                />\n                                <FormControlLabel\n                                    value={endpointImplementationTypes[1].key}\n                                    control={<Radio />}\n                                    label={<FormattedMessage\n                                        id='Apis.Details.Endpoints.Prototype.PrototypeEndpoints.endpoint'\n                                        defaultMessage='Endpoint'\n                                    />}\n                                />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n                </Paper>\n                <Grid item className={classes.prototypeEndpointsWrapper}>\n                    {endpointImplementationType === endpointImplementationTypes[0].key ?\n                        <InlineEndpoints paths={swaggerDef.paths} updatePaths={updatePaths} /> :\n                        <Paper className={classes.genericEndpointWrapper}>\n                            <GenericEndpoint\n                                endpointURL={endpointUrl}\n                                type='prototyped'\n                                index={0}\n                                category='prototyped'\n                                editEndpoint={editPrototypeEndpoint}\n                                setAdvancedConfigOpen={null}\n                            />\n                        </Paper>\n                    }\n                </Grid>\n            </Grid>\n        </React.Fragment>);\n}\n\nPrototypeEndpoints.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    modifyAPI: PropTypes.func.isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    swaggerDef: PropTypes.shape({}).isRequired,\n    updateSwagger: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(PrototypeEndpoints);\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Grid, FormControlLabel, Radio, RadioGroup } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport NewEndpointCreate from 'AppComponents/Apis/Details/Endpoints/NewEndpointCreate';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport cloneDeep from 'lodash.clonedeep';\nimport { isRestricted } from 'AppData/AuthManager';\nimport EndpointOverview from './EndpointOverview';\nimport PrototypeEndpoints from './Prototype/PrototypeEndpoints';\nimport { getEndpointConfigByImpl, createEndpointConfig } from './endpointUtils';\n\nconst styles = theme => ({\n    endpointTypesWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'row',\n        margin: '2px',\n    },\n    root: {\n        flexGrow: 1,\n        paddingRight: '10px',\n    },\n    buttonSection: {\n        marginTop: theme.spacing(2),\n    },\n    titleWrapper: {\n        paddingTop: '10px',\n    },\n    radioGroup: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginLeft: theme.spacing(2),\n    },\n    endpointValidityMessage: {\n        color: theme.palette.error.main,\n    },\n    errorMessageContainer: {\n        marginTop: theme.spacing(),\n    },\n});\n\nconst endpointImplType = ['managed', 'PROTOTYPED'];\nconst defaultSwagger = { paths: {} };\n\n/**\n * The base component of the endpoints view.\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nfunction Endpoints(props) {\n    const { classes, intl } = props;\n    const { api, updateAPI } = useContext(APIContext);\n    const [apiObject, setModifiedAPI] = useState(api);\n    const [endpointImplementation, setEndpointImplementation] = useState('');\n    const [swagger, setSwagger] = useState(defaultSwagger);\n\n    const [endpointValidity, setAPIEndpointsValid] = useState({ isValid: true, message: '' });\n\n    /**\n     * Method to update the api.\n     *\n     * @param {function} updateFunc The api update function.\n     */\n    const saveAPI = () => {\n        if (apiObject !== {}) {\n            updateAPI(apiObject);\n        }\n        if (Object.getOwnPropertyNames(defaultSwagger).length !== Object.getOwnPropertyNames(swagger).length) {\n            console.log('Updating swagger...');\n            api.updateSwagger(swagger).then((resp) => {\n                console.log('success', resp);\n            }).catch((err) => {\n                console.log(err);\n            });\n        }\n    };\n\n    /**\n     * Validate the provided endpoint config object.\n     *\n     * @param {any} endpointConfig The provided endpoint config for validation.\n     * @param {string} implementationType The api implementation type (INLINE/ ENDPOINT)\n     * @return {{isValid: boolean, message: string}} The endpoint validity information.\n     * */\n    const validate = (endpointConfig, implementationType) => {\n        if (endpointConfig === null) {\n            return { isValid: false, message: '' };\n        }\n        const endpointType = endpointConfig.endpoint_type;\n        switch (endpointType) {\n            case 'awslambda':\n                if (endpointConfig.accessKey === '' || endpointConfig.secretKey === '') {\n                    return {\n                        isValid: false,\n                        message: intl.formatMessage({\n                            id: 'Apis.Details.Endpoints.Endpoints.missing.accessKey.secretKey.error',\n                            defaultMessage: 'Access Key and/ or Secret Key should not be empty',\n                        }),\n                    };\n                }\n                break;\n            case 'load_balance':\n                if (endpointConfig.production_endpoints[0].url === ''\n                    && endpointConfig.sandbox_endpoints[0].url === '') {\n                    return {\n                        isValid: false,\n                        message: intl.formatMessage({\n                            id: 'Apis.Details.Endpoints.Endpoints.missing.endpoint.loadbalance',\n                            defaultMessage: 'Production or Sandbox Endpoints should not be empty',\n                        }),\n                    };\n                }\n                break;\n            default:\n                if (endpointConfig.implementation_status === 'prototyped') {\n                    if (implementationType === 'ENDPOINT') {\n                        if (endpointConfig.production_endpoints.url === '') {\n                            return {\n                                isValid: false,\n                                message: intl.formatMessage({\n                                    id: 'Apis.Details.Endpoints.Endpoints.missing.prototype.url',\n                                    defaultMessage: 'Prototype Endpoint URL should not be empty',\n                                }),\n                            };\n                        }\n                    }\n                } else if (endpointConfig.production_endpoints.url === '' &&\n                    endpointConfig.sandbox_endpoints.url === '') {\n                    return {\n                        isValid: false,\n                        message: intl.formatMessage({\n                            id: 'Apis.Details.Endpoints.Endpoints.missing.endpoint.error',\n                            defaultMessage: 'Either one of Production or Sandbox Endpoints should be added.',\n                        }),\n                    };\n                }\n                break;\n        }\n        return {\n            isValid: true,\n            message: '',\n        };\n    };\n\n    useEffect(() => {\n        const { lifeCycleStatus } = api;\n        const apiClone = cloneDeep(api.toJSON());\n        setModifiedAPI(apiClone);\n        const implType = apiClone.endpointConfig === null ? undefined : apiClone.endpointConfig.implementation_status;\n        setEndpointImplementation(() => {\n            return lifeCycleStatus === 'PROTOTYPED' || implType === 'prototyped' ?\n                endpointImplType[1] : endpointImplType[0];\n        });\n    }, []);\n\n    useEffect(() => {\n        setAPIEndpointsValid(validate(apiObject.endpointConfig, apiObject.endpointImplementationType));\n    }, [apiObject]);\n\n    /**\n     * Get the swagger definition if the endpoint implementation type is 'prototyped'\n     * */\n    useEffect(() => {\n        if (endpointImplementation === 'PROTOTYPED') {\n            api.getSwagger(apiObject.id).then((resp) => {\n                setSwagger(resp.obj);\n            }).catch((err) => {\n                console.err(err);\n            });\n        }\n    }, [endpointImplementation]);\n\n    /**\n     * Method to update the swagger object.\n     *\n     * @param {any} swaggerObj The updated swagger object.\n     * */\n    const changeSwagger = (swaggerObj) => {\n        setSwagger(swaggerObj);\n    };\n\n    /**\n     * Method to handle the Managed/ Prototyped endpoint selection.\n     *\n     * @param {any} event The option change event.\n     * */\n    const handleEndpointManagedChange = (event) => {\n        const implOption = event.target.value;\n        setEndpointImplementation(implOption);\n        const tmpEndpointConfig = getEndpointConfigByImpl(implOption);\n        setModifiedAPI({ ...apiObject, endpointConfig: tmpEndpointConfig });\n    };\n\n    /**\n     * Generate endpoint configuration based on the selected endpoint type and set to the api object.\n     *\n     * @param {string} endpointType The endpoint type.\n     * @param {string} implementationType The endpoint implementationType. (Required only for prototype endpoints)\n     * */\n    const generateEndpointConfig = (endpointType, implementationType) => {\n        const config = createEndpointConfig(endpointType, implementationType);\n        setModifiedAPI(() => {\n            if (endpointType === 'prototyped') {\n                if (implementationType === 'mock') {\n                    return { ...apiObject, endpointConfig: config, endpointImplementationType: 'INLINE' };\n                }\n                return { ...apiObject, endpointConfig: config, endpointImplementationType: 'ENDPOINT' };\n            } else {\n                return { ...apiObject, endpointConfig: config };\n            }\n        });\n        setEndpointImplementation(() => {\n            return apiObject.lifeCycleStatus === 'PROTOTYPED' || endpointType === 'prototyped' ?\n                endpointImplType[1] : endpointImplType[0];\n        });\n    };\n\n    return (\n        <React.Fragment>\n            {/* Since the api is set to the state in component did mount, check both the api and the apiObject. */}\n            {api.endpointConfig === null && apiObject.endpointConfig === null ?\n                <NewEndpointCreate generateEndpointConfig={generateEndpointConfig} /> :\n                <div className={classes.root}>\n                    <Grid container spacing={16}>\n                        <Grid item>\n                            <Typography variant='h4' align='left' className={classes.titleWrapper}>\n                                <FormattedMessage\n                                    id='Apis.Details.Endpoints.Endpoints.endpoints.header'\n                                    defaultMessage='Endpoints'\n                                />\n                            </Typography>\n                        </Grid>\n                        {apiObject.type === 'HTTP' && apiObject.endpointConfig.type !== 'awslambda' ?\n                            <Grid item>\n                                <RadioGroup\n                                    aria-label='endpointImpl'\n                                    name='endpointImpl'\n                                    className={classes.radioGroup}\n                                    value={endpointImplementation}\n                                    onChange={handleEndpointManagedChange}\n                                >\n                                    <FormControlLabel\n                                        value='managed'\n                                        control={<Radio />}\n                                        label={<FormattedMessage\n                                            id='Apis.Details.Endpoints.Endpoints.managed'\n                                            defaultMessage='Managed'\n                                        />}\n                                    />\n                                    <FormControlLabel\n                                        value='PROTOTYPED'\n                                        control={<Radio />}\n                                        label={<FormattedMessage\n                                            id='Apis.Details.Endpoints.Endpoints.prototyped'\n                                            defaultMessage='Prototyped'\n                                        />}\n                                    />\n                                </RadioGroup>\n                            </Grid> : <div />\n                        }\n                    </Grid>\n                    <div>\n                        <Grid container>\n                            <Grid item xs={12} className={classes.endpointsContainer}>\n                                {endpointImplementation === 'PROTOTYPED' ?\n                                    <PrototypeEndpoints\n                                        implementation_method={apiObject.endpointConfig.implementation_status}\n                                        api={apiObject}\n                                        modifyAPI={setModifiedAPI}\n                                        swaggerDef={swagger}\n                                        updateSwagger={changeSwagger}\n                                    /> :\n                                    <EndpointOverview api={apiObject} onChangeAPI={setModifiedAPI} />\n                                }\n                            </Grid>\n                        </Grid>\n                        {\n                            endpointValidity.isValid ?\n                                <div /> :\n                                <Grid item className={classes.errorMessageContainer}>\n                                    <Typography className={classes.endpointValidityMessage}>\n                                        {endpointValidity.message}\n                                    </Typography>\n                                </Grid>\n                        }\n                        <Grid\n                            container\n                            direction='row'\n                            alignItems='flex-start'\n                            spacing={4}\n                            className={classes.buttonSection}\n                        >\n                            <Grid item>\n                                <Button\n                                    disabled={!endpointValidity.isValid || isRestricted(['apim:api_create'], api)}\n                                    type='submit'\n                                    variant='contained'\n                                    color='primary'\n                                    onClick={() => saveAPI()}\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Details.Endpoints.Endpoints.save'\n                                        defaultMessage='Save'\n                                    />\n                                </Button>\n                            </Grid>\n                            <Grid item>\n                                <Link to={'/apis/' + api.id + '/overview'}>\n                                    <Button>\n                                        <FormattedMessage\n                                            id='Apis.Details.Endpoints.Endpoints.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            </Grid>\n                            {isRestricted(['apim:api_create'], api)\n                                && (\n                                    <Grid item>\n                                        <Typography variant='body2' color='primary'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Endpoints.Endpoints.update.not.allowed'\n                                                defaultMessage={'*You are not authorized to update Endpoints of' +\n                                                ' the API due to insufficient permissions'}\n                                            />\n                                        </Typography>\n                                    </Grid>\n                                )\n                            }\n                        </Grid>\n                    </div>\n                </div>\n            }\n        </React.Fragment>\n\n    );\n}\n\nEndpoints.propTypes = {\n    classes: PropTypes.shape({\n        root: PropTypes.shape({}),\n        buttonSection: PropTypes.shape({}),\n        endpointTypesWrapper: PropTypes.shape({}),\n        mainTitle: PropTypes.shape({}),\n    }).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Endpoints));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext, useState } from 'react';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\n\nimport 'react-tagsinput/react-tagsinput.css';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from 'react-router-dom';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Paper from '@material-ui/core/Paper';\nimport { isRestricted } from 'AppData/AuthManager';\n\n/**\n * Renders an Environments list\n * @class Environments\n * @extends {React.Component}\n */\nexport default function Environments() {\n    const { api, updateAPI } = useContext(APIContext);\n    const { settings } = useAppContext();\n    const [gatewayEnvironments, setGatewayEnvironments] = useState([...api.gatewayEnvironments]);\n\n\n    const [isUpdating, setUpdating] = useState(false);\n\n    /**\n     *\n     * Handle the Environments save button action\n     */\n    function addEnvironments() {\n        setUpdating(true);\n        updateAPI({ gatewayEnvironments })\n            .then(() => Alert.info('API Update Successfully'))\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while updating the environments');\n                }\n                console.error(error);\n            })\n            .finally(() => setUpdating(false));\n    }\n\n    return (\n        <div>\n            <Typography variant='h4' align='left' >\n                <FormattedMessage\n                    id='Apis.Details.Environments.Environments.APIGateways'\n                    defaultMessage='API Gateways'\n                />\n            </Typography>\n\n            <Paper>\n                <Table >\n                    <TableHead>\n                        <TableRow>\n                            <TableCell />\n                            <TableCell>Name</TableCell>\n                            <TableCell align='right'>Type</TableCell>\n                            <TableCell align='right'>ServerURL</TableCell>\n                            <TableCell align='right'>Http</TableCell>\n                            <TableCell align='right'>Https</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {settings.environment.map(row => (\n                            <TableRow key={row.name}>\n                                <TableCell padding='checkbox'>\n                                    <Checkbox\n                                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                        checked={gatewayEnvironments.includes(row.name)}\n                                        onChange={\n                                            (event) => {\n                                                const { checked, name } = event.target;\n                                                if (checked) {\n                                                    setGatewayEnvironments([...gatewayEnvironments, name]);\n                                                } else {\n                                                    setGatewayEnvironments(gatewayEnvironments.filter(env =>\n                                                        env !== name));\n                                                }\n                                            }\n                                        }\n                                        name={row.name}\n                                    />\n                                </TableCell>\n                                <TableCell component='th' scope='row'>\n                                    {row.name}\n                                </TableCell>\n                                <TableCell align='right'>{row.type}</TableCell>\n                                <TableCell align='right'>{row.serverUrl}</TableCell>\n                                <TableCell align='right'>{row.endpoints.http}</TableCell>\n                                <TableCell align='right'>{row.endpoints.https}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </Paper>\n            <Grid\n                container\n                direction='row'\n                alignItems='flex-start'\n                spacing={4}\n            >\n                <Grid item>\n                    <Button\n                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api) && isUpdating}\n                        type='submit'\n                        variant='contained'\n                        color='primary'\n                        onClick={addEnvironments}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Environments.Environments.save'\n                            defaultMessage='Save'\n                        />\n                        {isUpdating && <CircularProgress size={20} />}\n                    </Button>\n                </Grid>\n                <Grid item>\n                    <Link to={'/apis/' + api.id + '/overview'}>\n                        <Button>\n                            <FormattedMessage\n                                id='Apis.Details.Environments.Environments.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                    </Link>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nconst blockType = {\n    BLOCK_ALL: 'BLOCKED',\n    BLOCK_PRODUCTION: 'PROD_ONLY_BLOCKED',\n};\n\nclass SubscriptionsBlock extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            [blockType.BLOCK_ALL]: props.subscriptionStatus === blockType.BLOCK_ALL,\n            [blockType.BLOCK_PRODUCTION]: props.subscriptionStatus === blockType.BLOCK_PRODUCTION,\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    /**\n     * Handle onChange of subscription block\n     * @param event onChange event\n     */\n    handleChange(event) {\n        const { [blockType.BLOCK_ALL]: blockAll, [blockType.BLOCK_PRODUCTION]: blockProduction } = this.state;\n        const {\n            subscriptionId, blockAllSubs, blockProductionSubs, unblockSubs,\n        } = this.props;\n        const { value, checked } = event.target;\n\n        if (checked) {\n            let newBlockAll = blockAll;\n            let newBlockProduction = blockProduction;\n\n            if (value === blockType.BLOCK_ALL) {\n                newBlockAll = checked;\n                if (blockProduction === true) {\n                    newBlockProduction = false;\n                }\n                if (blockAllSubs) {\n                    blockAllSubs(subscriptionId);\n                }\n            }\n            if (value === blockType.BLOCK_PRODUCTION) {\n                newBlockProduction = checked;\n                if (blockAll === true) {\n                    newBlockAll = false;\n                }\n                if (blockProductionSubs) {\n                    blockProductionSubs(subscriptionId);\n                }\n            }\n            this.setState({ [blockType.BLOCK_ALL]: newBlockAll, [blockType.BLOCK_PRODUCTION]: newBlockProduction });\n        } else {\n            if (unblockSubs) {\n                unblockSubs(subscriptionId);\n            }\n            this.setState({ [value]: checked });\n        }\n    }\n\n    render() {\n        const { [blockType.BLOCK_ALL]: blockAll, [blockType.BLOCK_PRODUCTION]: blockProduction } = this.state;\n\n        return (\n            <FormGroup row>\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            id='block-all'\n                            checked={blockAll}\n                            onChange={event => this.handleChange(event)}\n                            value={blockType.BLOCK_ALL}\n                            color='primary'\n                        />\n                    }\n                    label={\n                        <FormattedMessage\n                            id='Apis.Details.Subscriptions.SubscriptionsBlock.production.and.sandbox'\n                            defaultMessage='Production and Sandbox'\n                        />\n                    }\n                />\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            id='block-production'\n                            checked={blockProduction}\n                            onChange={event => this.handleChange(event)}\n                            value={blockType.BLOCK_PRODUCTION}\n                            color='primary'\n                        />\n                    }\n                    label={\n                        <FormattedMessage\n                            id='Apis.Details.Subscriptions.SubscriptionsBlock.production.only'\n                            defaultMessage='Production only'\n                        />\n                    }\n                />\n            </FormGroup>\n        );\n    }\n}\n\nSubscriptionsBlock.propTypes = {\n    subscriptionId: PropTypes.string.isRequired,\n    subscriptionStatus: PropTypes.string.isRequired,\n    blockAllSubs: PropTypes.func.isRequired,\n    blockProductionSubs: PropTypes.func.isRequired,\n    unblockSubs: PropTypes.func.isRequired,\n};\n\nexport default SubscriptionsBlock;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl, defineMessages } from 'react-intl';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport Search from '@material-ui/icons/Search';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\n\nimport Alert from 'AppComponents/Shared/Alert';\nimport SubscriptionsBlock from 'AppComponents/Apis/Details/Subscriptions/SubscriptionsBlock';\nimport API from 'AppData/api';\nimport { ScopeValidation, resourceMethod, resourcePath } from 'AppData/ScopeValidation';\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    headline: { paddingTop: theme.spacing.unit * 1.25, paddingLeft: theme.spacing.unit * 2.5 },\n    table: {\n        '& td': {\n            fontSize: theme.typography.fontSize,\n        },\n        '& th': {\n            fontSize: theme.typography.fontSize * 1.2,\n        },\n    },\n    searchDiv: {\n        float: 'right',\n        paddingTop: theme.spacing.unit * 1.25,\n        paddingRight: theme.spacing.unit * 1.25,\n    },\n    searchRoot: {\n        paddingTop: theme.spacing.unit * 0.25,\n        paddingBottom: theme.spacing.unit * 0.25,\n        paddingRight: theme.spacing.unit * 0.5,\n        paddingLeft: theme.spacing.unit * 0.5,\n        display: 'flex',\n        alignItems: 'right',\n        width: theme.spacing.unit * 50,\n        borderBottom: '1px solid #E8E8E8',\n    },\n    searchInput: {\n        marginLeft: theme.spacing.unit,\n        flex: 1,\n    },\n    searchIconButton: {\n        padding: theme.spacing.unit * 1.25,\n    },\n    noDataMessage: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: '#888888',\n        width: '100%',\n    },\n    tableColumnSize: {\n        width: '15%',\n    },\n    tableColumnSize2: {\n        width: '40%',\n    },\n});\n\nconst tableHeaders = (\n    <TableRow>\n        <TableCell>\n            <FormattedMessage\n                id='Apis.Details.Subscriptions.SubscriptionsTable.subscriber'\n                defaultMessage='Subscriber'\n            />\n        </TableCell>\n        <TableCell>\n            <FormattedMessage\n                id='Apis.Details.Subscriptions.SubscriptionsTable.application'\n                defaultMessage='Application'\n            />\n        </TableCell>\n        <TableCell>\n            <FormattedMessage\n                id='Apis.Details.Subscriptions.SubscriptionsTable.tier'\n                defaultMessage='Tier'\n            />\n        </TableCell>\n        <TableCell>\n            <FormattedMessage\n                id='Apis.Details.Subscriptions.SubscriptionsTable.status'\n                defaultMessage='Status'\n            />\n        </TableCell>\n        <TableCell>\n            <ScopeValidation\n                resourceMethod={resourceMethod.POST}\n                resourcePath={resourcePath.BLOCK_SUBSCRIPTION}\n            >\n                <FormattedMessage\n                    id='Apis.Details.Subscriptions.SubscriptionsTable.actions'\n                    defaultMessage='Actions'\n                />\n            </ScopeValidation>\n        </TableCell>\n    </TableRow>\n);\n\nconst subscriptionStatus = {\n    BLOCKED: 'BLOCKED',\n    PROD_BLOCKED: 'PROD_ONLY_BLOCKED',\n};\n\n/**\n * Table pagination for subscriptions table\n *\n * @param props props used for SubscriptionTablePagination\n * @returns {*}\n */\nfunction SubscriptionTablePagination(props) {\n    const {\n        count, page, rowsPerPage, onChangePage,\n    } = props;\n\n    /**\n     * handleFirstPageButtonClick loads data of the first page\n     * */\n    function handleFirstPageButtonClick() {\n        if (onChangePage) {\n            onChangePage(0);\n        }\n    }\n\n    /**\n     * handleBackButtonClick load data of the prev page\n     * */\n    function handleBackButtonClick() {\n        if (onChangePage) {\n            onChangePage(page - 1);\n        }\n    }\n\n    /**\n     * handleNextButtonClick load data of the next page\n     * */\n    function handleNextButtonClick() {\n        if (onChangePage) {\n            onChangePage(page + 1);\n        }\n    }\n\n    /**\n     * handleLastPageButtonClick load data of the last page\n     * */\n    function handleLastPageButtonClick() {\n        if (onChangePage) {\n            onChangePage(Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n        }\n    }\n\n    return (\n        <div\n            style={{ display: 'flex' }}\n        >\n            <IconButton\n                onClick={handleFirstPageButtonClick}\n                disabled={page === 0}\n            >\n                <FirstPageIcon />\n            </IconButton>\n            <IconButton\n                onClick={handleBackButtonClick}\n                disabled={page === 0}\n            >\n                <KeyboardArrowLeft />\n            </IconButton>\n            <IconButton\n                onClick={handleNextButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n            >\n                <KeyboardArrowRight />\n            </IconButton>\n            <IconButton\n                onClick={handleLastPageButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n            >\n                <LastPageIcon />\n            </IconButton>\n        </div>\n    );\n}\n\nSubscriptionTablePagination.propTypes = {\n    count: PropTypes.number.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n};\n\n/**\n * Lists all subscriptions.\n *\n * @class SubscriptionsTable\n * @extends {React.Component}\n */\nclass SubscriptionsTable extends Component {\n    constructor(props) {\n        super(props);\n        this.api = props.api;\n        this.state = {\n            subscriptions: [],\n            totalSubscription: 0,\n            page: 0,\n            rowsPerPage: 5,\n            searchQuery: null,\n            rowsPerPageOptions: [5, 10, 25, 50, 100],\n            emptyColumnHeight: 60,\n        };\n        this.formatSubscriptionStateString = this.formatSubscriptionStateString.bind(this);\n        this.blockSubscription = this.blockSubscription.bind(this);\n        this.blockProductionOnly = this.blockProductionOnly.bind(this);\n        this.unblockSubscription = this.unblockSubscription.bind(this);\n        this.handleChangePage = this.handleChangePage.bind(this);\n        this.handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\n        this.filterSubscriptions = this.filterSubscriptions.bind(this);\n    }\n\n    componentDidMount() {\n        this.fetchSubscriptionData();\n    }\n\n    /**\n     * Returns subscription state string based on te current subscription state\n     *\n     * @param {*} state The current state of subscription\n     * @returns {JSX} Subscription state string\n     * @memberof SubscriptionsTable\n     */\n    formatSubscriptionStateString(state) {\n        if (state === subscriptionStatus.PROD_BLOCKED) {\n            return (<FormattedMessage\n                id='Apis.Details.Subscriptions.SubscriptionsTable.blocked.production.only.subs.state'\n                defaultMessage='Blocked Production Only'\n            />);\n        } else if (state === subscriptionStatus.BLOCKED) {\n            return (<FormattedMessage\n                id='Apis.Details.Subscriptions.SubscriptionsTable.blocked.subs.state'\n                defaultMessage='Blocked'\n            />);\n        } else {\n            return (<FormattedMessage\n                id='Apis.Details.Subscriptions.SubscriptionsTable.active.subs.state'\n                defaultMessage='Active'\n            />);\n        }\n    }\n\n    /**\n     * Blocks the given subscription\n     *\n     * @param {*} subscriptionId Subscription ID\n     * @memberof SubscriptionsTable\n     */\n    blockSubscription(subscriptionId) {\n        const { intl } = this.props;\n        const api = new API();\n        const promisedSubscriptionUpdate = api.blockSubscriptions(subscriptionId, subscriptionStatus.BLOCKED);\n        promisedSubscriptionUpdate\n            .then(() => {\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.Subscriptions.SubscriptionsTable.subscription.blocked',\n                    defaultMessage: 'Subscription was blocked.',\n                }));\n                this.fetchSubscriptionData();\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                const { message } = errorResponse.response.body;\n                const messages = defineMessages({\n                    errorMessage: {\n                        id: 'Apis.Details.Subscriptions.SubscriptionsTable.error.subscription.block',\n                        defaultMessage: 'Error: Unable to block subscription. (Reason: {message})',\n                    },\n                });\n                Alert.error(intl.formatMessage(messages.errorMessage, { message }));\n            });\n    }\n\n    /**\n     * Blocks production only for the given subscription\n     *\n     * @param {*} subscriptionId Subscription ID\n     * @memberof SubscriptionsTable\n     */\n    blockProductionOnly(subscriptionId) {\n        const { intl } = this.props;\n        const api = new API();\n        const promisedSubscriptionUpdate = api.blockSubscriptions(subscriptionId, subscriptionStatus.PROD_BLOCKED);\n        promisedSubscriptionUpdate\n            .then(() => {\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.Subscriptions.SubscriptionsTable.subscription.blocked.prod.only',\n                    defaultMessage: 'Subscription was blocked for production only.',\n                }));\n                this.fetchSubscriptionData();\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                const { message } = errorResponse.response.body;\n                const messages = defineMessages({\n                    errorMessage: {\n                        id: 'Apis.Details.Subscriptions.SubscriptionsTable.error.subscription.block.prod.only',\n                        defaultMessage: 'Error: Unable to block subscription. (Reason: {message})',\n                    },\n                });\n                Alert.error(intl.formatMessage(messages.errorMessage, { message }));\n            });\n    }\n\n    /**\n     * Unblocks the given subscription\n     *\n     * @param {*} subscriptionId Subscription ID\n     * @memberof SubscriptionsTable\n     */\n    unblockSubscription(subscriptionId) {\n        const { intl } = this.props;\n        const api = new API();\n        const promisedSubscriptionUpdate = api.unblockSubscriptions(subscriptionId);\n        promisedSubscriptionUpdate\n            .then(() => {\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.Subscriptions.SubscriptionsTable.subscription.unblocked',\n                    defaultMessage: 'Subscription was unblocked.',\n                }));\n                this.fetchSubscriptionData();\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                const { message } = errorResponse.response.body;\n                const messages = defineMessages({\n                    errorMessage: {\n                        id: 'Apis.Details.Subscriptions.SubscriptionsTable.error.subscription.unblock',\n                        defaultMessage: 'Error: Unable to unblock subscription. (Reason: {message})',\n                    },\n                });\n                Alert.error(intl.formatMessage(messages.errorMessage, { message }));\n            });\n    }\n\n    /**\n     * Fetches subscription data\n     *\n     * @memberof SubscriptionsTable\n     */\n    fetchSubscriptionData() {\n        const api = new API();\n        const { page, rowsPerPage, searchQuery } = this.state;\n        const promisedSubscriptions = api.subscriptions(this.api.id, page * rowsPerPage, rowsPerPage, searchQuery);\n        promisedSubscriptions\n            .then(response =>\n                this.setState({\n                    subscriptions: response.body.list,\n                    totalSubscription: response.body.pagination.total,\n                }))\n            .catch((errorMessage) => {\n                console.error(errorMessage);\n                Alert.error(JSON.stringify(errorMessage));\n            });\n    }\n\n    /**\n     * handleChangePage handle change in selected page\n     *\n     * @param page selected page\n     * */\n    handleChangePage(page) {\n        this.setState({ page }, this.fetchSubscriptionData);\n    }\n\n    /**\n     * handleChangeRowsPerPage handle change in rows per page\n     *\n     * @param event rows per page change event\n     * */\n    handleChangeRowsPerPage(event) {\n        this.setState({ rowsPerPage: event.target.value, page: 0 }, this.fetchSubscriptionData);\n    }\n\n    /**\n     * Filter subscriptions based on user search value\n     *\n     * @param event onChange event of user search\n     */\n    filterSubscriptions(event) {\n        this.setState({ searchQuery: event.target.value }, this.fetchSubscriptionData);\n    }\n\n    render() {\n        const {\n            subscriptions, page, rowsPerPage, totalSubscription, rowsPerPageOptions, emptyColumnHeight,\n        } = this.state;\n        const { classes, intl } = this.props;\n        const emptyRows = totalSubscription > 0 ?\n            (rowsPerPage - Math.min(rowsPerPage, totalSubscription - (page * rowsPerPage))) : 0;\n\n        return (\n            <div>\n                <Typography className={classes.headline} gutterBottom variant='headline' component='h2'>\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.SubscriptionsTable.manage.subscriptions'\n                        defaultMessage='Manage Subscriptions'\n                    />\n                </Typography>\n                <Paper>\n                    <Tooltip\n                        title={intl.formatMessage({\n                            id: 'Apis.Details.Subscriptions.SubscriptionsTable.search.tooltip',\n                            defaultMessage: 'Search subscriptions by Subscriber, Application and Tier',\n                        })}\n                        aria-label='Search tooltip'\n                    >\n                        <div className={classes.searchDiv}>\n                            <div className={classes.searchRoot}>\n                                <InputBase\n                                    className={classes.searchInput}\n                                    placeholder={intl.formatMessage({\n                                        id: 'Apis.Details.Subscriptions.SubscriptionsTable.search',\n                                        defaultMessage: 'Search',\n                                    })}\n                                    inputProps={{ 'aria-label': 'Search' }}\n                                    onChange={e => this.filterSubscriptions(e)}\n                                />\n                                <IconButton className={classes.searchIconButton} aria-label='Search' disabled>\n                                    <Search />\n                                </IconButton>\n                            </div>\n                        </div>\n                    </Tooltip>\n                    {subscriptions.length > 0 ? (\n                        <div>\n                            <Table className={classes.table}>\n                                <colgroup>\n                                    <col className={classes.tableColumnSize} />\n                                    <col className={classes.tableColumnSize} />\n                                    <col className={classes.tableColumnSize} />\n                                    <col className={classes.tableColumnSize} />\n                                    <col className={classes.tableColumnSize2} />\n                                </colgroup>\n                                <TableHead>\n                                    {tableHeaders}\n                                </TableHead>\n                                <TableBody>\n                                    {subscriptions\n                                        .map(sub => (\n                                            <TableRow key={sub.subscriptionId}>\n                                                <TableCell>{sub.applicationInfo.subscriber}</TableCell>\n                                                <TableCell>{sub.applicationInfo.name}</TableCell>\n                                                <TableCell>{sub.throttlingPolicy}</TableCell>\n                                                <TableCell>\n                                                    {this.formatSubscriptionStateString(sub.subscriptionStatus)}\n                                                </TableCell>\n                                                <TableCell>\n                                                    <ScopeValidation\n                                                        resourceMethod={resourceMethod.POST}\n                                                        resourcePath={resourcePath.BLOCK_SUBSCRIPTION}\n                                                    >\n                                                        <SubscriptionsBlock\n                                                            subscriptionId={sub.subscriptionId}\n                                                            subscriptionStatus={sub.subscriptionStatus}\n                                                            blockProductionSubs={this.blockProductionOnly}\n                                                            blockAllSubs={this.blockSubscription}\n                                                            unblockSubs={this.unblockSubscription}\n                                                        />\n                                                    </ScopeValidation>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))\n                                    }\n                                    {\n                                        emptyRows > 0 && (\n                                            <TableRow>\n                                                <TableCell\n                                                    colSpan={5}\n                                                    style={{ height: emptyRows * emptyColumnHeight }}\n                                                />\n                                            </TableRow>\n                                        )\n                                    }\n                                </TableBody>\n                                <TableFooter>\n                                    <TableRow>\n                                        <TablePagination\n                                            rowsPerPageOptions={rowsPerPageOptions}\n                                            colSpan={5}\n                                            count={totalSubscription}\n                                            rowsPerPage={rowsPerPage}\n                                            page={page}\n                                            onChangePage={this.handleChangePage}\n                                            onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                                            ActionsComponent={SubscriptionTablePagination}\n                                        />\n                                    </TableRow>\n                                </TableFooter>\n                            </Table>\n                        </div>) :\n                        (\n                            <div className={classes.noDataMessage} style={{ height: rowsPerPage * emptyColumnHeight }}>\n                                <FormattedMessage\n                                    id='Apis.Details.Subscriptions.SubscriptionsTable.no.subscriptions'\n                                    defaultMessage='No subscriptions data available'\n                                />\n                            </div>\n                        )\n                    }\n                </Paper>\n            </div>\n        );\n    }\n}\n\nSubscriptionsTable.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(SubscriptionsTable));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Progress from 'AppComponents/Shared/Progress';\nimport API from 'AppData/api';\n\nconst styles = theme => ({\n    subscriptionPoliciesPaper: {\n        marginTop: theme.spacing.unit * 2,\n        paddingLeft: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    },\n    grid: {\n        margin: theme.spacing.unit * 1.25,\n    },\n    gridLabel: {\n        marginTop: theme.spacing.unit * 1.5,\n    },\n});\n\n/**\n * Manage subscription policies of the API\n * */\nclass SubscriptionPoliciesManage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            subscriptionPolicies: {},\n            updateInProgress: false,\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        API.policies('subscription')\n            .then((res) => {\n                this.setState({ subscriptionPolicies: res.body.list });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n            });\n    }\n\n    /**\n     * Handle onChange of selected subsription policies\n     *\n     * @param event onChange event\n     */\n    handleChange(event) {\n        this.setState({ updateInProgress: true });\n        const { name, checked } = event.target;\n        const { intl, api, updateAPI } = this.props;\n        let updatedSelectedPolicies = [...api.policies];\n\n        if (checked) {\n            updatedSelectedPolicies.push(name);\n        } else {\n            updatedSelectedPolicies = updatedSelectedPolicies.filter(policy => policy !== name);\n        }\n\n        if (updateAPI) {\n            updateAPI({ policies: updatedSelectedPolicies })\n                .then(() => {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Subscriptions.SubscriptionPoliciesManage.policy.update.success',\n                        defaultMessage: 'API subscription policies updated successfully',\n                    }));\n                })\n                .catch((error) => {\n                    if (process.env.NODE_ENV !== 'production') {\n                        console.error(error);\n                    }\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Subscriptions.SubscriptionPoliciesManage.policy.update.error',\n                        defaultMessage: 'Error occurred while updating subscription policies',\n                    }));\n                })\n                .finally(() => {\n                    this.setState({ updateInProgress: false });\n                });\n        }\n    }\n\n    render() {\n        const { classes, api } = this.props;\n        const { subscriptionPolicies, updateInProgress } = this.state;\n\n        return (\n            <Paper className={classes.subscriptionPoliciesPaper}>\n                { updateInProgress && <Progress /> }\n                <FormControl className={classes.formControl}>\n                    <Grid container spacing={2} className={classes.grid}>\n                        <Grid item xs={4} className={classes.gridLabel}>\n                            <FormLabel>\n                                <FormattedMessage\n                                    id='Apis.Details.Subscriptions.SubscriptionPoliciesManage.subscription.policies'\n                                    defaultMessage='Subscription Policies'\n                                /> { ' : '}\n                            </FormLabel>\n                            <FormHelperText>\n                                <FormattedMessage\n                                    id='Apis.Details.Subscriptions.SubscriptionPoliciesManage.policies.update'\n                                    defaultMessage='Add/remove subscription policies'\n                                />\n                            </FormHelperText>\n                        </Grid>\n                        <Grid item xs={8}>\n                            <FormGroup>\n                                { subscriptionPolicies && Object.entries(subscriptionPolicies).map(value => (\n                                    <FormControlLabel\n                                        key={value[1].name}\n                                        control={<Checkbox\n                                            color='primary'\n                                            checked={api.policies.includes(value[1].name)}\n                                            onChange={e => this.handleChange(e)}\n                                            name={value[1].name}\n                                        />}\n                                        label={value[1].name + ' : ' + value[1].description}\n                                    />\n                                ))}\n                            </FormGroup>\n                        </Grid>\n                    </Grid>\n\n                </FormControl>\n            </Paper>\n        );\n    }\n}\n\nSubscriptionPoliciesManage.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    api: PropTypes.shape({ policies: PropTypes.array }).isRequired,\n    updateAPI: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(SubscriptionPoliciesManage));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Downshift from 'downshift';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\nimport API from 'AppData/api';\nimport CONSTS from 'AppData/Constants';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        height: 250,\n    },\n    container: {\n        flexGrow: 1,\n        position: 'relative',\n    },\n    paper: {\n        position: 'absolute',\n        zIndex: 1,\n        marginTop: theme.spacing(1),\n        left: 0,\n        right: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5, 0.25),\n    },\n    inputRoot: {\n        flexWrap: 'wrap',\n    },\n    inputInput: {\n        width: 'auto',\n        flexGrow: 1,\n    },\n    divider: {\n        height: theme.spacing(2),\n    },\n}));\n\n/**\n * Renders the input component\n */\nfunction renderInput(inputProps) {\n    const {\n        InputProps, classes, ref, ...other\n    } = inputProps;\n\n    return (\n        <TextField\n            InputProps={{\n                inputRef: ref,\n                classes: {\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                },\n                ...InputProps,\n            }}\n            {...other}\n        />\n    );\n}\n\nrenderInput.propTypes = {\n    classes: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    InputProps: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n};\n\n/**\n * Renders the suggestion component\n */\nfunction renderSuggestion(suggestionProps) {\n    const {\n        suggestion, index, itemProps, highlightedIndex, selectedItem,\n    } = suggestionProps;\n    const isHighlighted = highlightedIndex === index;\n    const isSelected = (selectedItem || '').indexOf(suggestion) > -1;\n\n    return (\n        <MenuItem\n            {...itemProps}\n            key={suggestion}\n            selected={isHighlighted}\n            component='div'\n            style={{\n                fontWeight: isSelected ? 500 : 400,\n            }}\n        >\n            {suggestion}\n        </MenuItem>\n    );\n}\n\nrenderSuggestion.propTypes = {\n    highlightedIndex: PropTypes.oneOfType([PropTypes.oneOf([null]), PropTypes.number]).isRequired,\n    index: PropTypes.number.isRequired,\n    itemProps: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    selectedItem: PropTypes.string.isRequired,\n    suggestion: PropTypes.string.isRequired,\n};\n\n/**\n * Gets suggestion list\n */\nfunction getSuggestions(value, suggestions, { showEmpty = false } = {}) {\n    const inputValue = deburr(value.trim()).toLowerCase();\n    const inputLength = inputValue.length;\n    let count = 0;\n\n    return inputLength === 0 && !showEmpty\n        ? []\n        : suggestions.filter((suggestion) => {\n            const keep =\n          count < 5 && suggestion.slice(0, inputLength).toLowerCase() === inputValue;\n            if (keep) {\n                count += 1;\n            }\n            return keep;\n        });\n}\n\n/**\n * Downshift selection component\n */\nfunction DownshiftMultiple(props) {\n    const { setTenantList } = props;\n    const { classes, suggestions } = props;\n    const [inputValue, setInputValue] = React.useState('');\n    const [selectedItem, setSelectedItem] = React.useState([]);\n\n\n    function handleKeyDown(event) {\n        if (selectedItem.length && !inputValue.length && event.key === 'Backspace') {\n            setSelectedItem(selectedItem.slice(0, selectedItem.length - 1));\n        }\n    }\n\n    function handleInputChange(event) {\n        setInputValue(event.target.value);\n    }\n\n    function handleChange(item) {\n        let newSelectedItem = [...selectedItem];\n        if (newSelectedItem.indexOf(item) === -1) {\n            newSelectedItem = [...newSelectedItem, item];\n        }\n        setInputValue('');\n        setSelectedItem(newSelectedItem);\n\n        setTenantList(newSelectedItem);\n    }\n\n    const handleDelete = item => () => {\n        const newSelectedItem = [...selectedItem];\n        newSelectedItem.splice(newSelectedItem.indexOf(item), 1);\n        setSelectedItem(newSelectedItem);\n    };\n\n\n    return (\n        <Downshift\n            id='downshift-multiple'\n            inputValue={inputValue}\n            onChange={handleChange}\n            selectedItem={selectedItem}\n        >\n            {({\n                getInputProps,\n                getItemProps,\n                getLabelProps,\n                isOpen,\n                inputValue: inputValue2,\n                selectedItem: selectedItem2,\n                highlightedIndex,\n            }) => {\n                const {\n                    onBlur, onChange, onFocus, ...inputProps\n                } = getInputProps({\n                    onKeyDown: handleKeyDown,\n                    placeholder: 'Select multiple tenants',\n                });\n\n                return (\n                    <div className={classes.container}>\n                        {renderInput({\n                            fullWidth: true,\n                            classes,\n                            label: 'Tenants',\n                            InputLabelProps: getLabelProps(),\n                            InputProps: {\n                                startAdornment: selectedItem.map(item => (\n                                    <Chip\n                                        key={item}\n                                        tabIndex={-1}\n                                        label={item}\n                                        className={classes.chip}\n                                        onDelete={handleDelete(item)}\n                                    />\n                                )),\n                                onBlur,\n                                onChange: (event) => {\n                                    handleInputChange(event);\n                                    onChange(event);\n                                },\n                                onFocus,\n                            },\n                            inputProps,\n                        })}\n\n                        {isOpen ? (\n                            <Paper className={classes.paper} square>\n                                {getSuggestions(inputValue2, suggestions).map((suggestion, index) =>\n                                    renderSuggestion({\n                                        suggestion,\n                                        index,\n                                        itemProps: getItemProps({ item: suggestion }),\n                                        highlightedIndex,\n                                        selectedItem: selectedItem2,\n                                    }))}\n                            </Paper>\n                        ) : null}\n                    </div>\n                );\n            }}\n        </Downshift>\n    );\n}\n\nDownshiftMultiple.propTypes = {\n    classes: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    setTenantList: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    suggestions: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n};\n\n/**\n * Gets tenant list in order to populate suggestions list\n */\nexport default function IntegrationDownshift(props) {\n    const classes = useStyles();\n    const [suggestions, setsuggestions] = useState({});\n    const { setTenantList } = props;\n\n    const restApi = new API();\n\n    useEffect(() => {\n        restApi.getTenantsByState(CONSTS.TENANT_STATE_ACTIVE)\n            .then((result) => {\n                const tenants = result.body.list;\n                const newSuggestions = tenants.map((tenant) => { return tenant.domain; });\n                setsuggestions(newSuggestions);\n            });\n    }, []);\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.divider} />\n            <DownshiftMultiple classes={classes} suggestions={suggestions} setTenantList={setTenantList} />\n            <div className={classes.divider} />\n        </div>\n    );\n}\n\nIntegrationDownshift.propTypes = {\n    setTenantList: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport Select from '@material-ui/core/Select';\nimport TenantAutocomplete from 'AppComponents/Apis/Details/Subscriptions/TenantAutocomplete';\nimport Alert from 'AppComponents/Shared/Alert';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing.unit * 1,\n        marginLeft: theme.spacing.unit * -30,\n        minWidth: 300,\n    },\n    textControl: {\n        margin: theme.spacing.unit * 1,\n        minWidth: 300,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    subscriptionAvailabilityPaper: {\n        marginTop: theme.spacing.unit * 2,\n        paddingLeft: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    },\n    grid: {\n        display: 'flex',\n        margin: theme.spacing.unit * 1.25,\n    },\n    gridLabel: {\n        marginTop: theme.spacing.unit * 3.5,\n    },\n    saveButton: {\n        marginLeft: theme.spacing.unit * 90,\n        marginTop: theme.spacing.unit * 2,\n    },\n}));\n\n/**\n * Allows user to select API availability for tenants\n * @export\n * @returns {React.Component} @inheritdoc\n */\nexport default function SimpleSelect(props) {\n    const classes = useStyles();\n    const { updateAPI } = props;\n    const [tenantList, setTenantList] = React.useState([]);\n    const [values, setValues] = React.useState({\n        availability: 'currentTenant',\n    });\n    const inputLabel = React.useRef(null);\n    const [labelWidth, setLabelWidth] = React.useState(0);\n    const isSpecificTenants = values.availability === 'specificTenants';\n\n    React.useEffect(() => {\n        setLabelWidth(inputLabel.current.offsetWidth);\n    }, []);\n\n    function subscriptionAvailableTenants() {\n        let availabilityValue;\n        let availableTenantsList = [];\n        if (updateAPI) {\n            if (values.availability === 'currentTenant') {\n                availabilityValue = 'CURRENT_TENANT';\n            } else if (values.availability === 'allTenants') {\n                availabilityValue = 'ALL_TENANTS';\n            } else if (values.availability === 'specificTenants') {\n                availabilityValue = 'SPECIFIC_TENANTS';\n                availableTenantsList = tenantList;\n            }\n            updateAPI({\n                subscriptionAvailability: availabilityValue,\n                subscriptionAvailableTenants: availableTenantsList,\n            })\n                .then(() => {\n                    Alert.info('Tenant availability updated successfully');\n                })\n                .catch((error) => {\n                    console.error(error);\n                    Alert.error('Error occurred while updating tenant availability');\n                });\n        }\n    }\n\n    /**\n     * Handles the availability that is selected\n     * @param {event} event Validation state object\n     */\n    function handleChange(event) {\n        setValues(oldValues => ({\n            ...oldValues,\n            [event.target.name]: event.target.value,\n        }));\n    }\n    return (\n        <Paper className={classes.subscriptionAvailabilityPaper}>\n            <form className={classes.root} autoComplete='off'>\n                <Grid container spacing={1} className={classes.grid}>\n                    <Grid item xs={4} className={classes.gridLabel}>\n                        <FormLabel>\n                            <FormattedMessage\n                                id='Apis.Details.Subscriptions.SubscriptionPoliciesManage.subscription.availability'\n                                defaultMessage='Subscription Availability'\n                            /> {' : '}\n                        </FormLabel>\n                    </Grid>\n                    <Grid item xs={8} justify='space-between' spacing={32}>\n                        <FormControl variant='outlined' className={classes.formControl}>\n                            <InputLabel ref={inputLabel} htmlFor='outlined-age-simple' />\n                            <Select\n                                value={values.availability}\n                                onChange={handleChange}\n                                labelWidth={labelWidth}\n                                displayEmpty\n                                name='availability'\n                                inputProps={{\n                                    name: 'availability',\n                                    id: 'outlined-availabi;ity-simple',\n                                }}\n                            >\n                                <MenuItem value='currentTenant'>Available to current tenant only</MenuItem>\n                                <MenuItem value='allTenants'>Available to all the tenants</MenuItem>\n                                <MenuItem value='specificTenants'>Available to specific tenants</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button\n                            variant='contained'\n                            color='primary'\n                            onClick={subscriptionAvailableTenants}\n                            className={classes.saveButton}\n                        >\n                            <FormattedMessage id='Apis.Details.Scopes.CreateScope.save' defaultMessage='Save' />\n                        </Button>\n                    </Grid>\n                    {isSpecificTenants ? (\n                        <Grid item xs={8} >\n                            <TenantAutocomplete setTenantList={setTenantList} />\n                        </Grid>\n                    ) : <Grid item xs={8} />}\n                </Grid>\n            </form>\n        </Paper >\n    );\n}\nSimpleSelect.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    api: PropTypes.shape({ policies: PropTypes.array }).isRequired,\n    updateAPI: PropTypes.func.isRequired,\n};\n\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport API from 'AppData/api';\nimport CONSTS from 'AppData/Constants';\nimport SubscriptionsTable from './SubscriptionsTable';\nimport SubscriptionPoliciesManage from './SubscriptionPoliciesManage';\nimport SubscriptionAvailability from './SubscriptionAvailability';\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n});\n\n/**\n * Subscriptions component\n *\n * @class Subscriptions\n * @extends {Component}\n */\nfunction Subscriptions(props) {\n    const { api, updateAPI } = props;\n    const restApi = new API();\n    const [tenants, setTenants] = useState([]);\n    useEffect(() => {\n        restApi.getTenantsByState(CONSTS.TENANT_STATE_ACTIVE)\n            .then((result) => {\n                setTenants(result.body.count);\n            });\n    }, []);\n\n    return (\n        <div>\n            <SubscriptionsTable api={api} />\n            <SubscriptionPoliciesManage api={api} updateAPI={updateAPI} />\n            {tenants !== 0 && (\n                <SubscriptionAvailability api={api} updateAPI={updateAPI} />\n            )}\n        </div>\n    );\n}\n\nSubscriptions.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    updateAPI: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(Subscriptions);\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { TextField, Button, Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\n\nconst styles = theme => ({\n    commentIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    commentText: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing.unit * 2,\n        paddingTop: theme.spacing.unig,\n        marginTop: theme.spacing.unit * 2,\n    },\n    textField: {\n        marginTop: 0,\n        width: '88%',\n    },\n    category: {\n        width: '12%',\n    },\n});\n\n/**\n   * Display a component to add a new comment\n   * @class CommmentAdd\n   * @extends {React.Component}\n   */\nclass CommentAdd extends React.Component {\n    /**\n     * Creates an instance of CommentAdd\n     * @param {*} props properies passed by the parent element\n     * @memberof CommentAdd\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            commentText: '',\n            category: 'General',\n            currentLength: 0,\n        };\n        this.inputChange = this.inputChange.bind(this);\n        this.handleClickAddComment = this.handleClickAddComment.bind(this);\n        this.handleClickCancel = this.handleClickCancel.bind(this);\n        this.handleCategoryChange = this.handleCategoryChange.bind(this);\n        this.filterCommentToAddReply = this.filterCommentToAddReply.bind(this);\n    }\n\n    /**\n     * Handles the comment text when input changes\n     * @param {Object} {target} target element\n     * @memberof CommentAdd\n     */\n    inputChange({ target }) {\n        this.setState({ commentText: target.value, currentLength: target.value.length });\n    }\n\n    /**\n     * Hides the component to add a new comment when cancelled\n     * @memberof CommentAdd\n     */\n    handleClickCancel() {\n        const { toggleShowReply } = this.props;\n        toggleShowReply();\n    }\n\n    /**\n     * Handles category when the category is changed\n     * @param {any} event Drop down select event\n     * @memberof CommentAdd\n     */\n    handleCategoryChange(event) {\n        this.setState({ category: event.target.value });\n    }\n\n    /**\n     * Filters the comment to add the reply\n     * @memberof CommentAdd\n     */\n    filterCommentToAddReply(commentToFilter) {\n        const { parentCommentId } = this.props;\n        return commentToFilter.commentId === parentCommentId;\n    }\n\n    /**\n     * Handles adding a new comment\n     * @memberof CommentAdd\n     */\n    handleClickAddComment() {\n        const {\n            api, parentCommentId, allComments, toggleShowReply, commentsUpdate,\n        } = this.props;\n        const { category, commentText } = this.state;\n        const Api = new API();\n        const apiId = api.id;\n        const comment = {\n            apiId: api.id,\n            category,\n            commentText: commentText.trim(),\n            parentCommentId,\n        };\n\n        // to check whether a string does not contain only white spaces\n        if (comment.commentText.replace(/\\s/g, '').length) {\n            Api.addComment(apiId, comment)\n                .then((newComment) => {\n                    this.setState({ commentText: '', category: 'General' });\n                    const addedComment = newComment.body;\n                    if (parentCommentId === null) {\n                        allComments.push(addedComment);\n                    } else {\n                        const index = allComments.findIndex(this.filterCommentToAddReply);\n                        allComments[index].replies.push(addedComment);\n                        toggleShowReply();\n                    }\n                    commentsUpdate(allComments);\n                })\n                .catch((error) => {\n                    console.error(error);\n                    if (error.response) {\n                        Alert.error(error.response.body.message);\n                    } else {\n                        Alert.error('Something went wrong while adding the comment');\n                    }\n                });\n        } else {\n            Alert.error('You cannot enter a blank comment');\n        }\n        this.setState({ currentLength: 0 });\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof CommentAdd\n     */\n    render() {\n        const { classes, cancelButton, theme } = this.props;\n        const { category, commentText, currentLength } = this.state;\n        return (\n            <Grid container spacing={7} className={classes.contentWrapper}>\n\n                <Grid item xs zeroMinWidth>\n                    <FormControl className={classes.category}>\n                        <Select\n                            value={category}\n                            onChange={this.handleCategoryChange}\n                        >\n                            <MenuItem value='General'>General</MenuItem>\n                            <MenuItem value='Feature Request'>Feature Request</MenuItem>\n                            <MenuItem value='Bug Report'>Bug Report</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <TextField\n                        id='standard-multiline-flexible'\n                        autoFocus\n                        multiline\n                        className={classes.textField}\n                        margin='normal'\n                        placeholder='Write a comment'\n                        inputProps={{ maxLength: theme.custom.maxCommentLength }}\n                        value={commentText}\n                        onChange={this.inputChange}\n                    />\n                    <Typography className={classes.commentText} align='right'>\n                        {currentLength + '/' + theme.custom.maxCommentLength }\n                    </Typography>\n                    <Grid container spacing={2}>\n                        <Grid item>\n                            <Button variant='contained' color='primary' onClick={() => this.handleClickAddComment()}>\n                  Add Comment\n                            </Button>\n                        </Grid>\n                        {cancelButton\n                && (\n                    <Grid item>\n                        <Button onClick={() => this.handleClickCancel()} className={classes.button}>Cancel</Button>\n                    </Grid>\n                )\n                        }\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nCommentAdd.defaultProps = {\n    api: null,\n    parentCommentId: null,\n    toggleShowReply: null,\n    commentsUpdate: null,\n};\n\nCommentAdd.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    cancelButton: PropTypes.bool.isRequired,\n    api: PropTypes.instanceOf(Object),\n    parentCommentId: PropTypes.string,\n    toggleShowReply: PropTypes.func,\n    commentsUpdate: PropTypes.func,\n    allComments: PropTypes.instanceOf(Array).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(CommentAdd);\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { TextField, Button, Typography } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\n\nconst styles = theme => ({\n    textField: {\n        marginTop: 0,\n        width: '87.5%',\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing.unit * 2,\n        paddingTop: theme.spacing.unig,\n        marginTop: theme.spacing.unit * 2,\n    },\n    category: {\n        width: '12%',\n        marginRight: '0.5%',\n    },\n});\n\n/**\n * Display a component to edit a comment\n * @class CommmentEdit\n * @extends {React.Component}\n */\nclass CommentEdit extends React.Component {\n    /**\n     * Creates an instance of CommentEdit\n     * @param {*} props properies passed by the parent element\n     * @memberof CommentEdit\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            commentText: '',\n            category: '',\n            currentLength: 0,\n        };\n        this.inputChange = this.inputChange.bind(this);\n        this.handleCategoryChange = this.handleCategoryChange.bind(this);\n        this.handleClickUpdateComment = this.handleClickUpdateComment.bind(this);\n        this.handleClickCancel = this.handleClickCancel.bind(this);\n        this.filterCommentToUpdate = this.filterCommentToUpdate.bind(this);\n        this.filterCommentToUpdateReply = this.filterCommentToUpdateReply.bind(this);\n    }\n\n    /**\n     * @memberof Comments\n     */\n    componentDidMount() {\n        const { comment } = this.props;\n        this.setState({\n            commentText: comment.commentText,\n            category: comment.category,\n            currentLength: comment.commentText.length,\n        });\n    }\n\n    /**\n     * Handles the comment text when input changes\n     * @param {Object} {target} target element\n     * @memberof CommentEdit\n     */\n    inputChange({ target }) {\n        this.setState({ commentText: target.value, currentLength: target.value.length });\n    }\n\n    /**\n     * Hides the component to edit a comment when cancelled\n     * @memberof CommentEdit\n     */\n    handleClickCancel() {\n        const { toggleShowEdit, commentsUpdate, allComments } = this.props;\n        toggleShowEdit();\n        commentsUpdate(allComments);\n    }\n\n    /**\n     * Handles category when the category is changed\n     * @param {any} event Drop down select event\n     * @memberof CommentEdit\n     */\n    handleCategoryChange(event) {\n        this.setState({ category: event.target.value });\n    }\n\n    /**\n     * Filters the comment to update\n     * @memberof CommentAdd\n     */\n    filterCommentToUpdate(commentToFilter) {\n        const { comment } = this.props;\n        return commentToFilter.commentId === comment.commentId;\n    }\n\n    /**\n     * Filters the comment to update\n     * @memberof CommentAdd\n     */\n    filterCommentToUpdateReply(commentToFilter) {\n        const { comment } = this.props;\n        return commentToFilter.commentId === comment.parentCommentId;\n    }\n\n    /**\n     * Handles updating a comment\n     * @memberof CommentEdit\n     */\n    handleClickUpdateComment() {\n        const {\n            api, comment, allComments, toggleShowEdit, commentsUpdate,\n        } = this.props;\n        const { category, commentText } = this.state;\n        const Api = new API();\n        const apiId = api.id;\n        const commentToEdit = comment;\n        commentToEdit.commentText = commentText.trim();\n        commentToEdit.category = category;\n\n        // to check whether a string does not contain only whitehis spaces\n        if (comment.commentText.replace(/\\s/g, '').length) {\n            Api.updateComment(apiId, commentToEdit.commentId, commentToEdit)\n                .then((result) => {\n                    const updatedComment = result.body;\n                    if (commentToEdit.parentCommentId === undefined) {\n                        const index = allComments.findIndex(this.filterCommentToUpdate);\n                        allComments[index].category = updatedComment.category;\n                        allComments[index].commentText = updatedComment.commentText;\n                    } else {\n                        const index = allComments.findIndex(this.filterCommentToUpdateReply);\n                        const replyIndex = allComments[index].replies.findIndex(this.filterCommentToUpdate);\n                        allComments[index].replies[replyIndex] = updatedComment;\n                    }\n                    toggleShowEdit();\n                    commentsUpdate(allComments);\n                })\n                .catch((error) => {\n                    console.error(error);\n                    if (error.response) {\n                        Alert.error(error.response.body.message);\n                    } else {\n                        Alert.error('Something went wrong while adding the comment');\n                    }\n                });\n        } else {\n            Alert.error('You cannot enter a blank comment');\n        }\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof CommentEdit\n     */\n    render() {\n        const { classes, theme } = this.props;\n        const { category, commentText, currentLength } = this.state;\n        return (\n            <div>\n                <FormControl className={classes.category}>\n                    <Select value={category} onChange={this.handleCategoryChange}>\n                        <MenuItem value='General'>General</MenuItem>\n                        <MenuItem value='Feature Request'>Feature Request</MenuItem>\n                        <MenuItem value='Bug Report'>Bug Report</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id='multiline-static'\n                    autoFocus\n                    multiline\n                    className={classes.textField}\n                    margin='normal'\n                    placeholder='Write a comment'\n                    inputProps={{ maxLength: theme.custom.maxCommentLength }}\n                    value={commentText}\n                    onChange={this.inputChange}\n                />\n                <Typography className={classes.commentText} align='right'>\n                    {currentLength + '/' + theme.custom.maxCommentLength}\n                </Typography>\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <Button variant='contained' color='primary' onClick={() => this.handleClickUpdateComment()}>\n                            Save\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button onClick={() => this.handleClickCancel()} className={classes.button}>\n                            Cancel\n                        </Button>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nCommentEdit.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    api: PropTypes.instanceOf(Object).isRequired,\n    allComments: PropTypes.instanceOf(Array).isRequired,\n    commentsUpdate: PropTypes.func.isRequired,\n    toggleShowEdit: PropTypes.func.isRequired,\n    comment: PropTypes.instanceOf(Object).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(CommentEdit);\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport { Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport AuthManager from 'AppData/AuthManager';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\n\nconst styles = theme => ({\n    link: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        cursor: 'pointer',\n    },\n    time: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        marginTop: theme.spacing.unit * 0.3,\n    },\n    verticalSpace: {\n        marginTop: theme.spacing.unit * 0.2,\n    },\n    disable: {\n        color: theme.custom.disableColor,\n    },\n    commentIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    commentText: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        marginTop: theme.spacing.unig,\n        width: '100%',\n        whiteSpace: 'pre-wrap',\n        overflowWrap: 'break-word',\n    },\n    root: {\n        marginTop: theme.spacing.unit * 2.5,\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing.unit * 2,\n        paddingTop: theme.spacing.unig,\n    },\n});\n\n/**\n * Component to display options of the comment\n * @class CommentOptions\n * @extends {React.Component}\n */\nclass CommentOptions extends React.Component {\n    /**\n     * Creates an instance of CommentAdd\n     * @param {*} props properies passed by the parent element\n     * @memberof CommentAdd\n     */\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.showAddComment = this.showAddComment.bind(this);\n        this.showEditComment = this.showEditComment.bind(this);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n    }\n\n    /**\n     * Shows the component to add a new comment\n     * @param {any} index Index of comment in the array\n     * @memberof CommentOptions\n     */\n    showAddComment(index) {\n        const { editIndex, showAddComment } = this.props;\n        if (editIndex === -1) {\n            showAddComment(index);\n        }\n    }\n\n    /**\n     * Shows the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    showEditComment(index) {\n        const { editIndex, showEditComment } = this.props;\n        if (editIndex === -1) {\n            showEditComment(index);\n        }\n    }\n\n    /**\n     * Shows the confimation dialog to delete a comment\n     * @param {Object} comment Comment that has to be deleted\n     * @memberof Comment\n     */\n    handleClickOpen(comment) {\n        const { editIndex, handleClickOpen } = this.props;\n        if (editIndex === -1) {\n            handleClickOpen(comment);\n        }\n    }\n\n    /**\n     * Returns the date and time in a particular format\n     * @param {any} timestamp Timestamp that has to be formatted\n     * @memberof CommentOptions\n     */\n    displayDate(timestamp) {\n        const localDate = new Date(timestamp);\n        const localDateString = localDate.toLocaleDateString(undefined, {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n        });\n        const localTimeString = localDate.toLocaleTimeString(undefined, {\n            hour: '2-digit',\n            minute: '2-digit',\n        });\n\n        return localDateString + ' ' + localTimeString;\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof CommentOptions\n     */\n    render() {\n        const {\n            classes, comment, editIndex, index, theme,\n        } = this.props;\n        const canDelete =\n            comment.createdBy === AuthManager.getUser().name || AuthManager.getUser().name === theme.custom.adminRole;\n        const canModify = comment.createdBy === AuthManager.getUser().name && comment.entryPoint === 'APIPublisher';\n        return (\n            <Grid container spacing={2} className={classes.verticalSpace} key={comment.commentId}>\n                {comment.parentCommentId == null && [\n                    <Grid item key='key-reply'>\n                        <Typography\n                            component='a'\n                            className={editIndex === -1 ? classes.link : classes.disable}\n                            onClick={() => this.showAddComment(index)}\n                        >\n                            Reply\n                        </Typography>\n                    </Grid>,\n                    <Grid item key='key-reply-vertical-divider'>\n                        <VerticalDivider height={15} />\n                    </Grid>,\n                ]}\n\n                {/* only the comment owner or admin can delete a comment */}\n                {canDelete && [\n                    <Grid item key='key-delete'>\n                        <Typography\n                            component='a'\n                            className={editIndex === -1 ? classes.link : classes.disable}\n                            onClick={() => this.handleClickOpen(comment)}\n                        >\n                            Delete\n                        </Typography>\n                    </Grid>,\n                    <Grid item key='key-delete-vertical-divider'>\n                        <VerticalDivider height={15} />\n                    </Grid>,\n                ]}\n\n                {/* only the comment owner can modify the comment from the exact entry point */}\n                {canModify && [\n                    <Grid item key='key-edit'>\n                        <Typography\n                            component='a'\n                            className={editIndex === -1 ? classes.link : classes.disable}\n                            onClick={() => this.showEditComment(index)}\n                        >\n                            Edit\n                        </Typography>\n                    </Grid>,\n                    <Grid item key='key-edit-verical-divider'>\n                        <VerticalDivider height={15} />\n                    </Grid>,\n                ]}\n                <Grid item className={classes.time}>\n                    <Typography component='a' variant='caption'>\n                        {this.displayDate(comment.createdTime)}\n                    </Typography>\n                </Grid>\n\n                {editIndex === index\n                    ? null\n                    : [\n                        <Grid item key='key-category-vertical-divider'>\n                            <VerticalDivider height={15} />\n                        </Grid>,\n                        <Grid item className={classes.time} key='key-category'>\n                            <Typography component='a' variant='caption'>\n                                {comment.category}\n                            </Typography>\n                        </Grid>,\n                    ]}\n            </Grid>\n        );\n    }\n}\n\nCommentOptions.defaultProps = {\n    showAddComment: null,\n};\n\nCommentOptions.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    editIndex: PropTypes.number.isRequired,\n    index: PropTypes.number.isRequired,\n    comment: PropTypes.instanceOf(Object).isRequired,\n    handleClickOpen: PropTypes.func.isRequired,\n    showEditComment: PropTypes.func.isRequired,\n    showAddComment: PropTypes.func,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(CommentOptions);\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core/';\nimport { withStyles } from '@material-ui/core/styles';\nimport AccountBox from '@material-ui/icons/AccountBox';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ConfirmDialog from 'AppComponents/Shared/ConfirmDialog';\nimport API from 'AppData/api';\nimport CommentEdit from './CommentEdit';\nimport CommentOptions from './CommentOptions';\n\nconst styles = theme => ({\n    link: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        cursor: 'pointer',\n    },\n    commentIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    commentText: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        marginTop: theme.spacing.unig,\n        width: '100%',\n        whiteSpace: 'pre-wrap',\n        overflowWrap: 'break-word',\n    },\n    root: {\n        marginTop: theme.spacing.unit * 2.5,\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing.unit * 2,\n        paddingTop: theme.spacing.unig,\n    },\n});\n\n/**\n * Display a particular comment and details\n * @class CommentReply\n * @extends {React.Component}\n */\nclass CommentReply extends React.Component {\n    /**\n     * Creates an instance of Comment\n     * @param {*} props properies passed by the parent element\n     * @memberof CommentReply\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            openDialog: false,\n            editIndex: -1,\n            deleteComment: null,\n        };\n        this.keyCount = 0;\n        this.getKey = this.getKey.bind(this);\n        this.handleClickDeleteComment = this.handleClickDeleteComment.bind(this);\n        this.handleShowEdit = this.handleShowEdit.bind(this);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n        this.showEditComment = this.showEditComment.bind(this);\n        this.handleConfirmDialog = this.handleConfirmDialog.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.filterRemainingComments = this.filterRemainingComments.bind(this);\n        this.filterCommentToDelete = this.filterCommentToDelete.bind(this);\n    }\n\n    /**\n     * Genereates unique keys for comments\n     * @memberof Comment\n     */\n    getKey() {\n        return this.keyCount++;\n    }\n\n    /**\n     * Filters the comments to be remained\n     * @memberof CommentReply\n     */\n    filterRemainingComments(commentToFilter) {\n        const { deleteComment } = this.state;\n        return commentToFilter.commentId !== deleteComment.commentId;\n    }\n\n    /**\n     * Filters the comments to be deleted\n     * @memberof CommentReply\n     */\n    filterCommentToDelete(commentToFilter) {\n        const { deleteComment } = this.state;\n        return commentToFilter.commentId === deleteComment.parentCommentId;\n    }\n\n    /**\n     * Shows the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof CommentReply\n     */\n    showEditComment(index) {\n        const { editIndex } = this.state;\n        if (editIndex === -1) {\n            this.setState({ editIndex: index });\n        }\n    }\n\n    /**\n     * Hides the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof CommentReply\n     */\n    handleShowEdit() {\n        this.setState({ editIndex: -1 });\n    }\n\n    /**\n     * Shows the confimation dialog to delete a comment\n     * @param {Object} comment Comment that has to be deleted\n     * @memberof CommentReply\n     */\n    handleClickOpen(comment) {\n        const { editIndex } = this.state;\n        if (editIndex === -1) {\n            this.setState({ deleteComment: comment, openDialog: true });\n        }\n    }\n\n    /**\n     * Hides the confimation dialog to delete a comment\n     * @memberof CommentReply\n     */\n    handleClose() {\n        this.setState({ openDialog: false });\n    }\n\n    /**\n     * Handles the Confirm Dialog\n     * @param {*} bool properies passed by the Confirm Dialog\n     * @memberof CommentReply\n     */\n    handleConfirmDialog(message) {\n        if (message) {\n            this.handleClickDeleteComment();\n        } else {\n            this.handleClose();\n        }\n    }\n\n    /**\n     * Handles deleting a comment\n     * @memberof CommentReply\n     */\n    handleClickDeleteComment() {\n        const Api = new API();\n        const { deleteComment } = this.state;\n        const { api, allComments, commentsUpdate } = this.props;\n        const commentIdOfCommentToDelete = deleteComment.commentId;\n        const parentCommentIdOfCommentToDelete = deleteComment.parentCommentId;\n        const apiId = api.id;\n        this.handleClose();\n\n        Api.deleteComment(apiId, commentIdOfCommentToDelete)\n            .then(() => {\n                if (parentCommentIdOfCommentToDelete === undefined) {\n                    const remainingComments = allComments.filter(this.filterRemainingComments);\n                    commentsUpdate(remainingComments);\n                } else {\n                    const index = allComments.findIndex(this.filterCommentToDelete);\n                    const remainingReplies = allComments[index].replies.filter(this.filterRemainingComments);\n                    allComments[index].replies = remainingReplies;\n                    commentsUpdate(allComments);\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    Alert.error(error.response.body.message);\n                } else {\n                    Alert.error(`Something went wrong while deleting comment - ${commentIdOfCommentToDelete}`);\n                }\n            });\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof CommentReply\n     */\n    render() {\n        const {\n            classes, comments, api, allComments, commentsUpdate,\n        } = this.props;\n        const { editIndex, openDialog } = this.state;\n        const props = { api, allComments, commentsUpdate };\n        return [\n            comments &&\n                comments.map((comment, index) => (\n                    <div key={this.getKey()} className={classes.contentWrapper}>\n                        <Grid container spacing={2} className={classes.root}>\n                            <Grid item>\n                                <AccountBox className={classes.commentIcon} />\n                            </Grid>\n                            <Grid item xs zeroMinWidth>\n                                <Typography noWrap className={classes.commentText} variant='body1'>\n                                    {comment.createdBy}\n                                </Typography>\n\n                                {index !== editIndex && (\n                                    <Typography className={classes.commentText}>{comment.commentText}</Typography>\n                                )}\n\n                                {index === editIndex && (\n                                    <CommentEdit {...props} comment={comment} toggleShowEdit={this.handleShowEdit} />\n                                )}\n                                <CommentOptions\n                                    classes={classes}\n                                    comment={comment}\n                                    editIndex={editIndex}\n                                    index={index}\n                                    showAddComment={this.showAddComment}\n                                    handleClickOpen={this.handleClickOpen}\n                                    showEditComment={this.showEditComment}\n                                />\n                            </Grid>\n                        </Grid>\n                    </div>\n                )),\n            <ConfirmDialog\n                key='key-dialog'\n                labelCancel='Cancel'\n                title='Confirm Delete'\n                message='Are you sure you want to delete this comment?'\n                labelOk='Yes'\n                callback={this.handleConfirmDialog}\n                open={openDialog}\n            />,\n        ];\n    }\n}\n\nCommentReply.defaultProps = {\n    api: null,\n};\n\nCommentReply.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    api: PropTypes.instanceOf(Object),\n    allComments: PropTypes.instanceOf(Array).isRequired,\n    commentsUpdate: PropTypes.func.isRequired,\n    comments: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default withStyles(styles)(CommentReply);\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core/';\nimport { withStyles } from '@material-ui/core/styles';\nimport AccountBox from '@material-ui/icons/AccountBox';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ConfirmDialog from 'AppComponents/Shared/ConfirmDialog';\nimport API from 'AppData/api';\nimport CommentAdd from './CommentAdd';\nimport CommentEdit from './CommentEdit';\nimport CommentOptions from './CommentOptions';\nimport CommentReply from './CommentReply';\n\nconst styles = theme => ({\n    link: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        cursor: 'pointer',\n    },\n    commentIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    commentText: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        marginTop: theme.spacing.unig,\n        width: '100%',\n        whiteSpace: 'pre-wrap',\n        overflowWrap: 'break-word',\n    },\n    root: {\n        marginTop: theme.spacing.unit * 2.5,\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing.unit * 2,\n        paddingTop: theme.spacing(2),\n    },\n});\n\n/**\n * Display a particular comment and details\n * @class Comment\n * @extends {React.Component}\n */\nclass Comment extends React.Component {\n    /**\n     * Creates an instance of Comment\n     * @param {*} props properies passed by the parent element\n     * @memberof Comment\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            openDialog: false,\n            replyIndex: -1,\n            editIndex: -1,\n            deleteComment: null,\n        };\n        this.keyCount = 0;\n        this.getKey = this.getKey.bind(this);\n        this.handleClickDeleteComment = this.handleClickDeleteComment.bind(this);\n        this.handleShowEdit = this.handleShowEdit.bind(this);\n        this.handleShowReply = this.handleShowReply.bind(this);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n        this.showAddComment = this.showAddComment.bind(this);\n        this.showEditComment = this.showEditComment.bind(this);\n        this.handleConfirmDialog = this.handleConfirmDialog.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.filterRemainingComments = this.filterRemainingComments.bind(this);\n        this.filterCommentToDelete = this.filterCommentToDelete.bind(this);\n    }\n\n    /**\n     * Genereates unique keys for comments\n     * @memberof Comment\n     */\n    getKey() {\n        return this.keyCount++;\n    }\n\n    /**\n     * Filters the comments to be remained\n     * @memberof Comment\n     */\n    filterRemainingComments(commentToFilter) {\n        const { deleteComment } = this.state;\n        return commentToFilter.commentId !== deleteComment.commentId;\n    }\n\n    /**\n     * Filters the comments to be deleted\n     * @memberof Comment\n     */\n    filterCommentToDelete(commentToFilter) {\n        const { deleteComment } = this.state;\n        return commentToFilter.commentId === deleteComment.parentCommentId;\n    }\n\n    /**\n     * Shows the component to add a new comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    showAddComment(index) {\n        const { editIndex } = this.state;\n        if (editIndex === -1) {\n            this.setState({ replyIndex: index });\n        }\n    }\n\n    /**\n     * Shows the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    showEditComment(index) {\n        const { editIndex } = this.state;\n        if (editIndex === -1) {\n            this.setState({ editIndex: index });\n        }\n    }\n\n    /**\n     * Hides the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    handleShowEdit() {\n        this.setState({ editIndex: -1 });\n    }\n\n    /**\n     * Hides the component to add a new comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    handleShowReply() {\n        this.setState({ replyIndex: -1 });\n    }\n\n    /**\n     * Shows the confimation dialog to delete a comment\n     * @param {Object} comment Comment that has to be deleted\n     * @memberof Comment\n     */\n    handleClickOpen(comment) {\n        const { editIndex } = this.state;\n        if (editIndex === -1) {\n            this.setState({ deleteComment: comment, openDialog: true });\n        }\n    }\n\n    /**\n     * Hides the confimation dialog to delete a comment\n     * @memberof Comment\n     */\n    handleClose() {\n        this.setState({ openDialog: false });\n    }\n\n    /**\n     * Handles the Confirm Dialog\n     * @param {*} bool properies passed by the Confirm Dialog\n     * @memberof Comment\n     */\n    handleConfirmDialog(message) {\n        if (message) {\n            this.handleClickDeleteComment();\n        } else {\n            this.handleClose();\n        }\n    }\n\n    /**\n     * Handles deleting a comment\n     * @memberof Comment\n     */\n    handleClickDeleteComment() {\n        const Api = new API();\n        const { deleteComment } = this.state;\n        const { api, allComments, commentsUpdate } = this.props;\n        const commentIdOfCommentToDelete = deleteComment.commentId;\n        const parentCommentIdOfCommentToDelete = deleteComment.parentCommentId;\n        const apiId = api.id;\n        this.handleClose();\n\n        Api.deleteComment(apiId, commentIdOfCommentToDelete)\n            .then(() => {\n                if (parentCommentIdOfCommentToDelete === undefined) {\n                    const remainingComments = allComments.filter(this.filterRemainingComments);\n                    commentsUpdate(remainingComments);\n                } else {\n                    const index = allComments.findIndex(this.filterCommentToDelete);\n                    const remainingReplies = allComments[index].replies.filter(this.filterRemainingComments);\n                    allComments[index].replies = remainingReplies;\n                    commentsUpdate(allComments);\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    Alert.error(error.response.body.message);\n                } else {\n                    Alert.error(`Something went wrong while deleting comment - ${commentIdOfCommentToDelete}`);\n                }\n            });\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof Comment\n     */\n    render() {\n        const {\n            classes, comments, api, allComments, commentsUpdate,\n        } = this.props;\n        const { editIndex, replyIndex, openDialog } = this.state;\n        const props = { api, allComments, commentsUpdate };\n        return [\n            comments &&\n                comments\n                    .slice(0)\n                    .reverse()\n                    .map((comment, index) => (\n                        <div key={this.getKey()} className={classes.contentWrapper}>\n                            <Grid container spacing={2} className={classes.root}>\n                                <Grid item>\n                                    <AccountBox className={classes.commentIcon} />\n                                </Grid>\n                                <Grid item xs zeroMinWidth>\n                                    <Typography noWrap className={classes.commentText} variant='body1'>\n                                        {comment.createdBy}\n                                    </Typography>\n\n                                    {index !== editIndex && (\n                                        <Typography className={classes.commentText}>{comment.commentText}</Typography>\n                                    )}\n\n                                    {index === editIndex && (\n                                        <CommentEdit\n                                            {...props}\n                                            comment={comment}\n                                            toggleShowEdit={this.handleShowEdit}\n                                        />\n                                    )}\n\n                                    <CommentOptions\n                                        classes={classes}\n                                        comment={comment}\n                                        editIndex={editIndex}\n                                        index={index}\n                                        showAddComment={this.showAddComment}\n                                        handleClickOpen={this.handleClickOpen}\n                                        showEditComment={this.showEditComment}\n                                    />\n\n                                    {index === replyIndex && (\n                                        <CommentAdd\n                                            {...props}\n                                            parentCommentId={comment.commentId}\n                                            toggleShowReply={this.handleShowReply}\n                                            cancelButton\n                                        />\n                                    )}\n                                    {comment.replies.length !== 0 && (\n                                        <CommentReply {...props} classes={classes} comments={comment.replies} />\n                                    )}\n                                </Grid>\n                            </Grid>\n                        </div>\n                    )),\n            <ConfirmDialog\n                key='key-dialog'\n                labelCancel='Cancel'\n                title='Confirm Delete'\n                message='Are you sure you want to delete this comment?'\n                labelOk='Yes'\n                callback={this.handleConfirmDialog}\n                open={openDialog}\n            />,\n        ];\n    }\n}\n\nComment.defaultProps = {\n    api: null,\n};\n\nComment.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    api: PropTypes.instanceOf(Object),\n    allComments: PropTypes.instanceOf(Array).isRequired,\n    commentsUpdate: PropTypes.func.isRequired,\n    comments: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default withStyles(styles)(Comment);\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport ArrowDropDownCircleOutlined from '@material-ui/icons/ArrowDropDownCircleOutlined';\nimport ArrowDropDown from '@material-ui/icons/ArrowDropDown';\nimport { Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport Comment from './Comment';\nimport CommentAdd from './CommentAdd';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing.unit * 2,\n        paddingTop: theme.spacing.unig,\n    },\n    titleSub: {\n        cursor: 'pointer',\n    },\n    link: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        cursor: 'pointer',\n    },\n    verticalSpace: {\n        marginTop: theme.spacing.unit * 0.2,\n    },\n    loadMoreLink: {\n        textDecoration: 'underline',\n    },\n});\n\n/**\n * Display a comment list\n * @class Comments\n * @extends {React.Component}\n */\nclass Comments extends Component {\n    /**\n     * Creates an instance of Comments\n     * @param {*} props properies passed by the parent element\n     * @memberof Comments\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            expanded: true,\n            allComments: [],\n            comments: [],\n            totalComments: 0,\n            startCommentsToDisplay: 0,\n        };\n        this.updateCommentList = this.updateCommentList.bind(this);\n        this.handleExpandClick = this.handleExpandClick.bind(this);\n        this.handleLoadMoreComments = this.handleLoadMoreComments.bind(this);\n    }\n\n    /**\n     * Gets all the comments for a particular API, when component mounts\n     * @memberof Comments\n     */\n    componentDidMount() {\n        const { api, theme } = this.props;\n        const Api = new API();\n        Api.getAllComments(api.id)\n            .then((result) => {\n                const commentList = result.body.list;\n                this.setState({ allComments: commentList, totalComments: commentList.length });\n                if (commentList.length < theme.custom.commentsLimit) {\n                    this.setState({ startCommentsToDisplay: 0, comments: commentList.slice(0, commentList.length) });\n                } else {\n                    this.setState({\n                        startCommentsToDisplay: commentList.length - theme.custom.commentsLimit,\n                        comments: commentList.slice(\n                            commentList.length - theme.custom.commentsLimit,\n                            commentList.length,\n                        ),\n                    });\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    Alert.error(error.response.body.message);\n                } else {\n                    Alert.error('Something went wrong while retrieving comments');\n                }\n            });\n    }\n\n    /**\n     * Handles loading the previous comments\n     * @memberof Comments\n     */\n    handleLoadMoreComments() {\n        const { totalComments, startCommentsToDisplay, allComments } = this.state;\n        const { theme } = this.props;\n        if (startCommentsToDisplay - theme.custom.commentsLimit <= 0) {\n            this.setState({ startCommentsToDisplay: 0, comments: allComments.slice(0, totalComments) });\n        } else {\n            this.setState({\n                startCommentsToDisplay: startCommentsToDisplay - theme.custom.commentsLimit,\n                comments: allComments.slice(startCommentsToDisplay - theme.custom.commentsLimit, totalComments),\n            });\n        }\n    }\n\n    /**\n     * Handles expanding the comment section\n     * @memberof Comments\n     */\n    handleExpandClick() {\n        const { expanded } = this.state;\n        this.setState({ expanded: !expanded });\n    }\n\n    /**\n     * Updates the comment list, This is passed through props to child component\n     * @param {any} comments Updated comment list\n     * @memberof Comments\n     */\n    updateCommentList(comments) {\n        const { startCommentsToDisplay, totalComments } = this.state;\n        const { theme } = this.props;\n        let newStart;\n        let difference;\n        let newTotal;\n        this.setState({ allComments: comments });\n        if (totalComments < theme.custom.commentsLimit) {\n            newTotal = comments.length;\n            this.setState({ startCommentsToDisplay: 0, totalComments: newTotal, comments });\n        } else if (totalComments <= comments.length) {\n            difference = comments.length - totalComments;\n            newStart = startCommentsToDisplay + difference;\n            newTotal = comments.length;\n            this.setState({\n                startCommentsToDisplay: newStart,\n                totalComments: newTotal,\n                comments: comments.slice(newStart, newTotal),\n            });\n        } else {\n            difference = totalComments - comments.length;\n            if (startCommentsToDisplay === 0) {\n                newStart = startCommentsToDisplay;\n            } else {\n                newStart = startCommentsToDisplay - difference;\n            }\n            newTotal = comments.length;\n            this.setState({\n                startCommentsToDisplay: newStart,\n                totalComments: newTotal,\n                comments: comments.slice(newStart, newTotal),\n            });\n        }\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof Comments\n     */\n    render() {\n        const { classes, api } = this.props;\n        const {\n            comments, expanded, allComments, startCommentsToDisplay, totalComments,\n        } = this.state;\n        return (\n            <div className={classes.contentWrapper}>\n                <div className={classes.root}>\n                    <ArrowDropDownCircleOutlined onClick={this.handleExpandClick} aria-expanded={expanded} />\n                    <Typography onClick={this.handleExpandClick} variant='h4' className={classes.titleSub}>\n                        Comments\n                    </Typography>\n                </div>\n                <Collapse in={expanded} timeout='auto' unmountOnExit>\n                    <CommentAdd\n                        api={api}\n                        commentsUpdate={this.updateCommentList}\n                        allComments={allComments}\n                        parentCommentId={null}\n                        cancelButton={false}\n                    />\n                    <Comment\n                        comments={comments}\n                        api={api}\n                        commentsUpdate={this.updateCommentList}\n                        allComments={allComments}\n                    />\n                    {startCommentsToDisplay !== 0 && (\n                        <div className={classes.contentWrapper}>\n                            <Grid container spacing={8} className={classes.root}>\n                                <Grid item>\n                                    <Typography\n                                        className={classes.verticalSpace}\n                                        variant='body1'\n                                        onClick={this.handleLoadMoreComments}\n                                    >\n                                        <a className={classes.link + ' ' + classes.loadMoreLink}>\n                                            Load Previous Comments\n                                        </a>\n                                    </Typography>\n                                </Grid>\n                                <Grid>\n                                    <ArrowDropDown\n                                        onClick={this.handleLoadMoreComments}\n                                        className={classes.link + ' ' + classes.verticalSpace}\n                                    />\n                                </Grid>\n                                <Grid item>\n                                    <Typography className={classes.verticalSpace} variant='body1'>\n                                        Showing comments\n                                        {totalComments + -startCommentsToDisplay + ' of ' + totalComments}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </div>\n                    )}\n                </Collapse>\n            </div>\n        );\n    }\n}\n\nComments.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    api: PropTypes.instanceOf(Object).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Comments);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\nimport ChipInput from 'material-ui-chip-input';\nimport APIValidation from 'AppData/APIValidation';\nimport base64url from 'base64url';\nimport Error from '@material-ui/icons/Error';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Chip from '@material-ui/core/Chip';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport { red } from '@material-ui/core/colors/';\nimport Divider from '@material-ui/core/Divider';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Api from 'AppData/api';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n        display: 'flex',\n        flexDirection: 'column',\n        padding: 20,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    titleLink: {\n        color: theme.palette.primary.main,\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    FormControl: {\n        padding: `0 0 0 ${theme.spacing.unit}px`,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormControlOdd: {\n        padding: `0 0 0 ${theme.spacing.unit}px`,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormControlLabel: {\n        marginBottom: theme.spacing.unit,\n        marginTop: theme.spacing.unit,\n        fontSize: theme.typography.caption.fontSize,\n    },\n    buttonSection: {\n        paddingTop: theme.spacing.unit * 3,\n    },\n    saveButton: {\n        marginRight: theme.spacing.unit * 2,\n    },\n    helpText: {\n        color: theme.palette.text.hint,\n        marginTop: theme.spacing.unit,\n    },\n    extraPadding: {\n        paddingLeft: theme.spacing.unit * 2,\n    },\n    addNewOther: {\n        paddingTop: 40,\n    },\n    titleGrid: {\n        ' & .MuiGrid-item': {\n            padding: 0,\n            margin: 0,\n        },\n    },\n});\n\n/**\n * Create new scopes for an API\n * @class CreateScope\n * @extends {Component}\n */\nclass CreateScope extends React.Component {\n    constructor(props) {\n        super(props);\n        this.api = new Api();\n        this.api_uuid = props.match.params.api_uuid;\n        const valid = [];\n        valid.name = {\n            invalid: false,\n            error: '',\n        };\n        valid.description = {\n            invalid: false,\n            error: '',\n        };\n        this.state = {\n            apiScopes: null,\n            apiScope: {},\n            validRoles: [],\n            valid,\n            roleValidity: true,\n            invalidRoles: [],\n        };\n        this.addScope = this.addScope.bind(this);\n        this.validateScopeName = this.validateScopeName.bind(this);\n        this.handleScopeNameInput = this.handleScopeNameInput.bind(this);\n        this.validateScopeDescription = this.validateScopeDescription.bind(this);\n        this.handleRoleAddition = this.handleRoleAddition.bind(this);\n        this.handleRoleDeletion = this.handleRoleDeletion.bind(this);\n    }\n\n    /**\n     * Add new scope\n     * @memberof Scopes\n     */\n    addScope() {\n        const {\n            intl, api, history, isAPIProduct,\n        } = this.props;\n        const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n        if (this.validateScopeName('name', this.state.apiScope.name)) {\n            // return status of the validation\n            return;\n        }\n        const scope = this.state.apiScope;\n        scope.bindings = {\n            type: 'role',\n            values: this.state.validRoles,\n        };\n        const scopes = api.scopes.map((aScope) => {\n            return aScope;\n        });\n        scopes.push(scope);\n        const updateProperties = { scopes };\n        const promisedApiUpdate = api.update(updateProperties);\n        promisedApiUpdate.then(() => {\n            Alert.info(intl.formatMessage({\n                id: 'Apis.Details.Scopes.CreateScope.scope.added.successfully',\n                defaultMessage: 'Scope added successfully',\n            }));\n            const { apiScopes } = this.state;\n            const redirectURL = '/' + urlPrefix + '/' + api.id + '/scopes/';\n            history.push(redirectURL);\n            this.setState({\n                apiScopes,\n                apiScope: {},\n                validRoles: [],\n            });\n        });\n        promisedApiUpdate.catch((error) => {\n            const { response } = error;\n            if (response.body) {\n                const { description } = response.body;\n                Alert.error(description);\n            }\n        });\n    }\n\n    handleScopeNameInput({ target: { id, value } }) {\n        this.validateScopeName(id, value);\n    }\n\n    validateScopeName(id, value) {\n        const { valid, apiScope } = this.state;\n        const {\n            api: { scopes },\n        } = this.props;\n\n        apiScope[id] = value;\n        valid[id].invalid = !(value && value.length > 0);\n        if (valid[id].invalid) {\n            valid[id].error = 'Scope name cannot be empty';\n        }\n        const exist = scopes.find((scope) => {\n            return scope.name === value;\n        });\n        if (!valid[id].invalid && exist) {\n            valid[id].invalid = true;\n            valid[id].error = 'Scope name already exist';\n        }\n        if (!valid[id].invalid && /[!@#$%^&*(),.?\":{}[\\]|<>\\t\\n]/i.test(value)) {\n            valid[id].invalid = true;\n            valid[id].error = 'Field contains special characters';\n        }\n        if (!valid[id].invalid) {\n            valid[id].error = '';\n        }\n        this.setState({\n            valid,\n            apiScope,\n        });\n        return valid[id].invalid;\n    }\n\n    validateScopeDescription({ target: { id, value } }) {\n        const { valid, apiScope } = this.state;\n        apiScope[id] = value;\n        valid[id].invalid = false;\n        valid[id].error = '';\n        this.setState({\n            valid,\n            apiScope,\n        });\n    }\n\n    handleRoleAddition(role) {\n        const { validRoles, invalidRoles } = this.state;\n        const promise = APIValidation.role.validate(base64url.encode(role));\n        promise\n            .then(() => {\n                this.setState({\n                    roleValidity: true,\n                    validRoles: [...validRoles, role],\n                });\n            })\n            .catch((error) => {\n                if (error.status === 404) {\n                    this.setState({\n                        roleValidity: false,\n                        invalidRoles: [...invalidRoles, role],\n                    });\n                } else {\n                    Alert.error('Error when validating role: ' + role);\n                    console.error('Error when validating role ' + error);\n                }\n            });\n    }\n\n    handleRoleDeletion = (role) => {\n        const { validRoles, invalidRoles } = this.state;\n        if (invalidRoles.includes(role)) {\n            const invalidRolesArray = invalidRoles.filter(existingRole => existingRole !== role);\n            this.setState({ invalidRoles: invalidRolesArray });\n            if (invalidRolesArray.length === 0) {\n                this.setState({ roleValidity: true });\n            }\n        } else {\n            this.setState({ validRoles: validRoles.filter(existingRole => existingRole !== role) });\n        }\n    };\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof CreateScope\n     */\n    render() {\n        const { classes, isAPIProduct, api } = this.props;\n        const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n        const url = `/${urlPrefix}/${api.id}/scopes`;\n        const { roleValidity, validRoles, invalidRoles } = this.state;\n\n        return (\n            <Grid container spacing={3}>\n                <Grid item sm={12} md={12} />\n                {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n                <Grid item sm={0} md={0} lg={2} />\n                <Grid item sm={12} md={12} lg={8}>\n                    <Grid container spacing={5} className={classes.titleGrid}>\n                        <Grid item md={12}>\n                            <div className={classes.titleWrapper}>\n                                <Link to={url} className={classes.titleLink}>\n                                    <Typography variant='h4' align='left' className={classes.mainTitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Scopes.Scopes.heading.scope.heading'\n                                            defaultMessage='Scopes'\n                                        />\n                                    </Typography>\n                                </Link>\n                                <Icon>keyboard_arrow_right</Icon>\n                                <Typography variant='h4' align='left' className={classes.mainTitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Scopes.CreateScope.create.new.scope'\n                                        defaultMessage='Create New Scope'\n                                    />\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item md={12}>\n                            <Paper elevation={0} className={classes.root}>\n                                <FormControl margin='normal'>\n                                    <TextField\n                                        id='name'\n                                        label='Name'\n                                        placeholder='Scope Name'\n                                        error={this.state.valid.name.invalid}\n                                        helperText={\n                                            this.state.valid.name.invalid ? (\n                                                this.state.valid.name.error\n                                            ) : (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.CreateScope.short.description.name'\n                                                    defaultMessage='Enter Scope Name ( Ex: creator )'\n                                                />\n                                            )\n                                        }\n                                        fullWidth\n                                        margin='normal'\n                                        variant='outlined'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        value={this.state.apiScope.name || ''}\n                                        onChange={this.handleScopeNameInput}\n                                    />\n                                </FormControl>\n                                <FormControl margin='normal'>\n                                    <TextField\n                                        id='description'\n                                        label='Description'\n                                        variant='outlined'\n                                        placeholder='Short description about the scope'\n                                        helperText={\n                                            <FormattedMessage\n                                                id='Apis.Details.Scopes.CreateScope.short.description.about.the.scope'\n                                                defaultMessage='Short description about the scope'\n                                            />\n                                        }\n                                        margin='normal'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        onChange={this.validateScopeDescription}\n                                        value={this.state.apiScope.description || ''}\n                                        multiline\n                                    />\n                                </FormControl>\n                                <FormControl margin='normal'>\n                                    <FormLabel component='legend' className={classes.FormControlLabel}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Scopes.CreateScope.roles'\n                                            defaultMessage='Roles'\n                                        />\n                                    </FormLabel>\n                                    <ChipInput\n                                        variant='outlined'\n                                        value={validRoles.concat(invalidRoles)}\n                                        alwaysShowPlaceholder={false}\n                                        placeholder='Enter roles and press Enter'\n                                        blurBehavior='clear'\n                                        InputProps={{\n                                            endAdornment: !roleValidity && (\n                                                <InputAdornment position='end'>\n                                                    <Error color='error' />\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        onAdd={this.handleRoleAddition}\n                                        error={!roleValidity}\n                                        helperText={\n                                            !roleValidity ? (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.Roles.Invalid'\n                                                    defaultMessage='Role is invalid'\n                                                />\n                                            ) : (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.CreateScope.roles.help'\n                                                    defaultMessage='Enter valid role and press enter'\n                                                />\n                                            )\n                                        }\n                                        chipRenderer={({ value }, key) => (\n                                            <Chip\n                                                key={key}\n                                                label={value}\n                                                onDelete={() => {\n                                                    this.handleRoleDeletion(value);\n                                                }}\n                                                style={{\n                                                    backgroundColor: invalidRoles.includes(value) ? red[300] : null,\n                                                    margin: '8px 8px 8px 0',\n                                                    float: 'left',\n                                                }}\n                                            />\n                                        )}\n                                    />\n                                </FormControl>\n                                <Divider />\n                                <div className={classes.addNewOther}>\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        onClick={this.addScope}\n                                        disabled={this.state.valid.name.invalid || invalidRoles.length !== 0}\n                                        className={classes.saveButton}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Scopes.CreateScope.save'\n                                            defaultMessage='Save'\n                                        />\n                                    </Button>\n                                    <Link to={url}>\n                                        <Button variant='contained'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Scopes.CreateScope.cancel'\n                                                defaultMessage='Cancel'\n                                            />\n                                        </Button>\n                                    </Link>\n                                </div>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nCreateScope.propTypes = {\n    match: PropTypes.shape({\n        params: PropTypes.object,\n    }),\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n};\n\nCreateScope.defaultProps = {\n    match: { params: {} },\n};\n\nexport default withAPI(injectIntl(withRouter(withStyles(styles)(CreateScope))));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst APIPropertyField = (props) => {\n    const { name, children } = props;\n\n    return (\n        <Grid item>\n            <Grid container spacing={4} direction='row' alignItems='center'>\n                <Grid item style={{ flexGrow: 1 }}>\n                    <Grid container direction='row' justify='space-between'>\n                        <Grid item>\n                            <Typography variant='subtitle1'>{name}</Typography>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant='subtitle1'>:</Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item lg={10} md={10} sm={10} xs={10}>\n                    {children}\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nAPIPropertyField.propTypes = {\n    name: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]).isRequired,\n};\n\nexport default APIPropertyField;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport React from 'react';\nimport APIPropertyField from 'AppComponents/Apis/Details/Overview/APIPropertyField';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport TagsInput from 'react-tagsinput';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst styles = theme => ({\n    buttonSave: {\n        marginTop: theme.spacing.unit * 10,\n    },\n    buttonCancel: {\n        marginTop: theme.spacing.unit * 10,\n        marginLeft: theme.spacing.unit * 5,\n    },\n    topics: {\n        marginTop: theme.spacing.unit * 10,\n    },\n    headline: {\n        paddingTop: theme.spacing.unit * 1.5,\n        paddingLeft: theme.spacing.unit * 2.5,\n    },\n});\n\n/**\n * Create new scopes for an API\n * @class CreateScope\n * @extends {Component}\n */\nclass EditScope extends React.Component {\n    constructor(props) {\n        super(props);\n        // this.api = new Api();\n        this.api_uuid = props.match.params.api_uuid;\n        const { api, location } = this.props;\n        const thisScope = api.scopes.find((scope) => {\n            return scope.name === location.state.scopeName;\n        });\n        this.state = {\n            apiScope: { ...thisScope },\n        };\n        this.updateScope = this.updateScope.bind(this);\n        this.handleInputs = this.handleInputs.bind(this);\n    }\n\n    /**\n     * Add new scope\n     * @memberof Scopes\n     */\n    updateScope() {\n        const { apiScope } = this.state;\n        const {\n            intl, api, history, isAPIProduct,\n        } = this.props;\n        const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n        const scopes = api.scopes.map((scope) => {\n            if (scope.name === apiScope.name) {\n                return apiScope;\n            } else {\n                return scope;\n            }\n        });\n        const updateProperties = { scopes };\n        const promisedApiUpdate = api.update(updateProperties);\n        promisedApiUpdate.then(() => {\n            Alert.info(intl.formatMessage({\n                id: 'Apis.Details.Scopes.CreateScope.scope.updated.successfully',\n                defaultMessage: 'Scope updated successfully',\n            }));\n            const redirectURL = '/' + urlPrefix + '/' + api.id + '/scopes/';\n            history.push(redirectURL);\n        });\n        promisedApiUpdate.catch((error) => {\n            const { response } = error;\n            if (response.body) {\n                const { description } = response.body;\n                Alert.error(description);\n            }\n        });\n    }\n\n    /**\n     * Handle api scope addition event\n     * @param {any} event Button Click event\n     * @memberof Scopes\n     */\n    handleInputs(event) {\n        if (Array.isArray(event)) {\n            const { apiScope } = this.state;\n            apiScope.bindings.values = event;\n            this.setState({\n                apiScope,\n            });\n        } else {\n            const input = event.target;\n            const { apiScope } = this.state;\n            apiScope[input.id] = input.value;\n            this.setState({\n                apiScope,\n            });\n        }\n    }\n\n    render() {\n        const { classes, api, isAPIProduct } = this.props;\n        const { apiScope } = this.state;\n        const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n        const url = `/${urlPrefix}/${api.id}/scopes`;\n        return (\n            <Grid container>\n                <Typography className={classes.headline} gutterBottom variant='h5' component='h2'>\n                    <FormattedMessage id='Apis.Details.Scopes.EditScope.update.scope' defaultMessage='Update Scope' />\n                </Typography>\n                <Grid item lg={5} className={classes.topics}>\n                    <APIPropertyField name='Name'>\n                        <TextField\n                            disabled\n                            fullWidth\n                            id='name'\n                            type='text'\n                            name='name'\n                            margin='normal'\n                            value={apiScope.name}\n                        />\n                    </APIPropertyField>\n                    <APIPropertyField name='Description'>\n                        <TextField\n                            style={{\n                                width: '100%',\n                            }}\n                            id='description'\n                            name='description'\n                            helperText={\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.CreateScope.short.description.about.the.scope'\n                                    defaultMessage='Short description about the scope'\n                                />\n                            }\n                            margin='normal'\n                            type='text'\n                            onChange={this.handleInputs}\n                            value={this.state.apiScope.description}\n                        />\n                    </APIPropertyField>\n                    <APIPropertyField name='Roles'>\n                        <TagsInput\n                            value={this.state.apiScope.bindings.values}\n                            onChange={this.handleInputs}\n                            onlyUnique\n                        />\n                    </APIPropertyField>\n                    <Button\n                        variant='contained'\n                        color='primary'\n                        onClick={this.updateScope}\n                        className={classes.buttonSave}\n                    >\n                        <FormattedMessage id='Apis.Details.Scopes.CreateScope.save' defaultMessage='Save' />\n                    </Button>\n                    <Link to={url}>\n                        <Button variant='contained' color='primary' className={classes.buttonCancel}>\n                            <FormattedMessage id='Apis.Details.Scopes.CreateScope.cancel' defaultMessage='Cancel' />\n                        </Button>\n                    </Link>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nEditScope.propTypes = {\n    match: PropTypes.shape({\n        params: PropTypes.object,\n    }),\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    location: PropTypes.shape({\n        state: PropTypes.shape({\n            scopeName: PropTypes.string,\n        }),\n    }).isRequired,\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n};\n\nEditScope.defaultProps = {\n    match: { params: {} },\n};\n\nexport default injectIntl(withAPI(withRouter(withStyles(styles)(EditScope))));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ConfirmDialog from 'AppComponents/Shared/ConfirmDialog';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst styles = {\n    appBar: {\n        position: 'relative',\n    },\n    flex: {\n        flex: 1,\n    },\n    popupHeader: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    splitWrapper: {\n        padding: 0,\n    },\n    docName: {\n        alignItems: 'center',\n        display: 'flex',\n    },\n    button: {\n        height: 30,\n        marginLeft: 30,\n    },\n};\n\nfunction Delete(props) {\n    // const { api } = useContext(APIContext);\n    const { intl, api } = props;\n    const [open, setOpen] = useState(false);\n    const toggleOpen = () => {\n        setOpen(!open);\n    };\n    const deleteScope = () => {\n        const { scopeName } = props;\n        const ops = JSON.parse(JSON.stringify(api.operations));\n        const operations = ops.map((op) => {\n            // eslint-disable-next-line no-param-reassign\n            op.scopes = op.scopes.filter((scope) => {\n                return scope !== scopeName;\n            });\n            return op;\n        });\n        const scopes = api.scopes.filter((scope) => {\n            return scope.name !== scopeName;\n        });\n        const updateProperties = { scopes, operations };\n        const setOpenLocal = setOpen; // Need to copy this to access inside the promise.then\n        const promisedUpdate = api.update(updateProperties);\n        promisedUpdate\n            .then(() => {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Resources.Resources.api.scope.deleted.successfully',\n                    defaultMessage: 'API Scope Deleted successfully!',\n                }));\n                setOpenLocal(!open);\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Resources.Resources.something.went.wrong.while.updating.the.api',\n                    defaultMessage: 'Error occurred while updating API',\n                }));\n            });\n    };\n\n    const runAction = (confirm) => {\n        if (confirm) {\n            deleteScope();\n        } else {\n            setOpen(!open);\n        }\n    };\n    const { scopeName } = props;\n\n    return (\n        <div>\n            <Button onClick={toggleOpen} disabled={isRestricted(['apim:api_create'], api)}>\n                <Icon>delete_forever</Icon>\n                <FormattedMessage\n                    id='Apis.Details.Documents.Delete.document.delete'\n                    defaultMessage='Delete'\n                />\n            </Button>\n            <ConfirmDialog\n                key='key-dialog'\n                labelCancel={<FormattedMessage\n                    id='Apis.Details.Documents.Delete.document.listing.label.cancel'\n                    defaultMessage='Cancel'\n                />}\n                title={<FormattedMessage\n                    id='Apis.Details.Documents.Delete.document.listing.delete.confirm'\n                    defaultMessage='Confirm Delete'\n                />}\n                message={<FormattedMessage\n                    id='Apis.Details.Documents.Delete.document.listing.label.ok.confirm'\n                    defaultMessage='Are you sure you want to delete scope {scope} ?'\n                    values={{ scope: scopeName }}\n                />}\n                labelOk={<FormattedMessage\n                    id='Apis.Details.Documents.Delete.document.listing.label.ok.yes'\n                    defaultMessage='Yes'\n                />}\n                callback={runAction}\n                open={open}\n            />\n        </div>\n    );\n}\nDelete.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    scopeName: PropTypes.string.isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    api: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Delete));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport 'react-tagsinput/react-tagsinput.css';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Api from 'AppData/api';\nimport { Progress } from 'AppComponents/Shared';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport { List, ListItem, ListItemText } from '@material-ui/core';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport MUIDataTable from 'mui-datatables';\nimport Icon from '@material-ui/core/Icon';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport Grid from '@material-ui/core/Grid';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport Delete from './Delete';\n\nconst styles = theme => ({\n    root: {\n        paddingTop: 0,\n        paddingLeft: 0,\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    buttonProgress: {\n        position: 'relative',\n        margin: theme.spacing.unit,\n    },\n    headline: { paddingTop: theme.spacing.unit * 1.25, paddingLeft: theme.spacing.unit * 2.5 },\n    heading: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing.unit * 2,\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    button: {\n        textTransform: theme.custom.leftMenuTextStyle,\n        textDecoration: 'none',\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    content: {\n        margin: `${theme.spacing.unit * 2}px 0 ${theme.spacing.unit * 2}px 0`,\n    },\n    head: {\n        fontWeight: 200,\n    },\n});\n/**\n * Generate the scopes UI in API details page.\n * @class Scopes\n * @extends {React.Component}\n */\nclass Scopes extends React.Component {\n    /**\n     * Creates an instance of Scopes.\n     * @param {any} props Generic props\n     * @memberof Scopes\n     */\n    constructor(props) {\n        super(props);\n        this.api = new Api();\n        this.api_uuid = props.match.params.api_uuid;\n        this.api_data = props.api;\n    }\n\n    /**\n     * Render Scopes section\n     * @returns {React.Component} React Component\n     * @memberof Scopes\n     */\n    render() {\n        const {\n            intl, classes, isAPIProduct, api,\n        } = this.props;\n        const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n        const { scopes } = api;\n        const url = `/${urlPrefix}/${api.id}/scopes/create`;\n        const editUrl = `/${urlPrefix}/${api.id}/scopes/edit`;\n        const columns = [\n            intl.formatMessage({\n                id: 'Apis.Details.Scopes.Scopes.table.header.name',\n                defaultMessage: 'Name',\n            }),\n            intl.formatMessage({\n                id: 'Apis.Details.Scopes.Scopes.table.header.description',\n                defaultMessage: 'Description',\n            }),\n            {\n                options: {\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const roles = value || [];\n                            return roles.join(',');\n                        }\n                        return false;\n                    },\n                    filter: false,\n                    label: (\n                        <FormattedMessage\n                            id='Apis.Details.Scopes.Scopes.table.header.roles'\n                            defaultMessage='Applying Roles'\n                        />\n                    ),\n                },\n            },\n            {\n                options: {\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            return (\n                                <List component='nav' className={classes.root}>\n                                    {value.map(resource => (\n                                        <ListItem button>\n                                            <ListItemText primary={resource} />\n                                        </ListItem>\n                                    ))}\n                                </List>\n                            );\n                        }\n                        return false;\n                    },\n                    filter: false,\n                    label: (\n                        <FormattedMessage\n                            id='Apis.Details.Scopes.Scopes.table.header.usages'\n                            defaultMessage='Used In'\n                        />\n                    ),\n                },\n            },\n            {\n                options: {\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const scopeName = tableMeta.rowData[0];\n                            return (\n                                <table className={classes.actionTable}>\n                                    <tr>\n                                        <td>\n                                            <Link\n                                                to={\n                                                    !isRestricted(['apim:api_create'], api) && {\n                                                        pathname: editUrl,\n                                                        state: {\n                                                            scopeName,\n                                                        },\n                                                    }\n                                                }\n                                            >\n                                                <Button\n                                                    disabled={isRestricted(\n                                                        ['apim:api_create'],\n                                                        api,\n                                                    )}\n                                                >\n                                                    <Icon>edit</Icon>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.Documents.Edit.documents.text.editor.edit'\n                                                        defaultMessage='Edit'\n                                                    />\n                                                </Button>\n                                            </Link>\n                                        </td>\n                                        <td>\n                                            <Delete scopeName={scopeName} apiId={this.apiId} api={api} />\n                                        </td>\n                                    </tr>\n                                </table>\n                            );\n                        }\n                        return false;\n                    },\n                    filter: false,\n                    label: (\n                        <FormattedMessage\n                            id='Apis.Details.Scopes.Scopes.table.header.actions'\n                            defaultMessage='Actions'\n                        />\n                    ),\n                },\n            },\n        ];\n        const options = {\n            filterType: 'multiselect',\n            selectableRows: false,\n            title: false,\n            filter: false,\n            print: false,\n            download: false,\n            viewColumns: false,\n            customToolbar: false,\n        };\n        const scopesList = api.scopes.map((scope) => {\n            const aScope = [];\n            aScope.push(scope.name);\n            aScope.push(scope.description);\n            aScope.push(scope.bindings.values);\n            const resources = api.operations\n                .filter((op) => {\n                    return op.scopes.includes(scope.name);\n                })\n                .map((op) => {\n                    return op.target + ' ' + op.verb;\n                });\n            aScope.push(resources);\n            return aScope;\n        });\n\n        if (!scopes) {\n            return <Progress />;\n        }\n\n        if (scopes.length === 0) {\n            return (\n                <div className={classes.root}>\n                    <div className={classes.titleWrapper}>\n                        <Typography variant='h4' align='left' className={classes.mainTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.Scopes.Scopes.heading.scope.heading'\n                                defaultMessage='Scopes'\n                            />\n                        </Typography>\n                        <Link to={!isRestricted(['apim:api_create'], api) && url}>\n                            <Button\n                                size='small'\n                                className={classes.button}\n                                disabled={isRestricted(['apim:api_create'], api)}\n                            >\n                                <AddCircle className={classes.buttonIcon} />\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.Scopes.heading.scope.add_new'\n                                    defaultMessage='Add New Scope'\n                                />\n                            </Button>\n                        </Link>\n                    </div>\n                    <InlineMessage type='info' height={140}>\n                        <div className={classes.contentWrapper}>\n                            <Typography variant='h5' component='h3' className={classes.head}>\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.Scopes.create.scopes.title'\n                                    defaultMessage='Create Scopes'\n                                />\n                            </Typography>\n                            <Typography component='p' className={classes.content}>\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.Scopes.scopes.enable.fine.gained.access.control'\n                                    defaultMessage={\n                                        'Scopes enable fine-grained access control to API resources'\n                                        + ' based on user roles.'\n                                    }\n                                />\n                            </Typography>\n                            <div className={classes.actions}>\n                                <Link to={!isRestricted(['apim:api_create'], api) && url}>\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        className={classes.button}\n                                        disabled={isRestricted(['apim:api_create'], api)}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Scopes.Scopes.create.scopes.button'\n                                            defaultMessage='Create Scopes'\n                                        />\n                                    </Button>\n                                </Link>\n                            </div>\n                        </div>\n                    </InlineMessage>\n                </div>\n            );\n        }\n\n        return (\n            <div className={classes.heading}>\n                <div className={classes.titleWrapper}>\n                    <Typography variant='h4' align='left' className={classes.mainTitle}>\n                        <FormattedMessage\n                            id='Apis.Details.Scopes.Scopes.heading.scope.heading'\n                            defaultMessage='Scopes'\n                        />\n                    </Typography>\n                    <Link to={!isRestricted(['apim:api_create'], api) && url}>\n                        <Button\n                            size='small'\n                            className={classes.button}\n                            disabled={isRestricted(['apim:api_create'], api)}\n                        >\n                            <AddCircle className={classes.buttonIcon} />\n                            <FormattedMessage\n                                id='Apis.Details.Scopes.Scopes.heading.scope.add_new'\n                                defaultMessage='Add New Scope'\n                            />\n                        </Button>\n                    </Link>\n                    {isRestricted(['apim:api_create'], api) && (\n                        <Grid item>\n                            <Typography variant='body2' color='primary'>\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.Scopes.update.not.allowed'\n                                    defaultMessage={\n                                        '*You are not authorized to update Scopes of'\n                                        + ' the API due to insufficient permissions'\n                                    }\n                                />\n                            </Typography>\n                        </Grid>\n                    )}\n                </div>\n\n                <MUIDataTable title={false} data={scopesList} columns={columns} options={options} />\n            </div>\n        );\n    }\n}\n\nScopes.propTypes = {\n    match: PropTypes.shape({\n        params: PropTypes.object,\n    }),\n    api: PropTypes.instanceOf(Object).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n};\n\nScopes.defaultProps = {\n    match: { params: {} },\n};\n\nexport default injectIntl(withAPI(withStyles(styles)(Scopes)));\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useContext } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport CreateScope from './CreateScope';\nimport EditScope from './EditScope';\nimport Scopes from './Scopes';\nimport { PageNotFound } from '../../../Base/Errors';\n\nconst Scope = () => {\n    const { isAPIProduct } = useContext(APIContext);\n    const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n    return (\n        <Switch>\n            <Route exact path={'/' + urlPrefix + '/:api_uuid/scopes/'} component={() => <Scopes />} />\n            <Route exact path={'/' + urlPrefix + '/:api_uuid/scopes/create'} component={() => <CreateScope />} />\n            <Route exact path={'/' + urlPrefix + '/:api_uuid/scopes/edit'} component={() => <EditScope />} />\n            <Route component={PageNotFound} />\n        </Switch>\n    );\n};\n\nScope.propTypes = {\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        additionalProperties: PropTypes.shape({\n            key: PropTypes.string,\n            value: PropTypes.string,\n        }).isRequired,\n    }).isRequired,\n};\n\nexport default Scope;\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\n\nconst styles = theme => ({\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing.unit * 2,\n    },\n    addNewHeader: {\n        padding: theme.spacing.unit * 2,\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing.unit * 2,\n    },\n    button: {\n        marginLeft: theme.spacing.unit * 2,\n        textTransform: theme.custom.leftMenuTextStyle,\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addJsonContent: {\n        whiteSpace: 'pre',\n    },\n});\n\nclass AddPolicy extends Component {\n    state = {\n        selectedPolicy: {\n            uuid: '',\n            name: 'Select',\n            policy: '',\n            type: '',\n        },\n        policies: [],\n    };\n\n    componentDidMount() {\n        const api = new API();\n        const promisedPolicies = api.getThreatProtectionPolicies();\n        promisedPolicies.then((response) => {\n            this.setState({ policies: response.obj.list });\n        });\n        const promisedApi = api.get(this.props.id);\n        promisedApi.then((response) => {\n            this.setState({ currentApi: response.obj });\n        });\n    }\n\n    handlePolicyAdd() {\n        const { intl } = this.props;\n        const policy = this.state.selectedPolicy;\n        if (policy.uuid === '' || policy.name === '') {\n            Alert.error(intl.formatMessage({\n                id: 'Apis.Details.Security.AddPolicy.select.policy',\n                defaultMessage: 'Please select a policy',\n            }));\n            return;\n        }\n\n        if (this.state.currentApi) {\n            const { currentApi } = this.state;\n            const api = new API();\n            const promisedPolicyAdd = api.addThreatProtectionPolicyToApi(currentApi.id, this.state.selectedPolicy.uuid);\n            promisedPolicyAdd.then((response) => {\n                if (response.status === 200) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Security.AddPolicy.threat.protection.policy.add.success',\n                        defaultMessage: 'Threat protection policy added successfully.',\n                    }));\n                    this.props.updateData();\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Security.AddPolicy.threat.protection.policy.add.failure',\n                        defaultMessage: 'Failed to add threat protection policy.',\n                    }));\n                }\n            });\n        }\n    }\n\n    handleChange = () => (event) => {\n        const policyId = event.target.value;\n        const api = new API();\n        const promisedPolicy = api.getThreatProtectionPolicy(policyId);\n        promisedPolicy.then((response) => {\n            this.setState({ selectedPolicy: response.obj });\n        });\n    }\n\n    formatPolicy = (policy) => {\n        let formattedPolicy = policy;\n        formattedPolicy = formattedPolicy.replace(':', ' : ');\n        formattedPolicy = formattedPolicy.split(',').join(',\\n');\n        return formattedPolicy;\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.contentWrapper}>\n                <div className={classes.addNewWrapper}>\n                    <Typography className={classes.addNewHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Security.AddPolicy.add.threat.protection.policy'\n                            defaultMessage='Add New Threat Protection Policy'\n                        />\n                    </Typography>\n                    <Divider className={classes.divider} />\n                    <div className={classes.addNewOther}>\n                        <InputLabel htmlFor='selectedPolicy'>\n                            <FormattedMessage\n                                id='Apis.Details.Security.AddPolicy.policy'\n                                defaultMessage='Policy'\n                            />\n                        </InputLabel>\n                        &nbsp;&nbsp;\n                        <Select\n                            value={this.state.selectedPolicy.uuid}\n                            onChange={this.handleChange('selectedPolicy')}\n                            input={<Input name='selectedPolicy' id='selectedPolicy' />}\n                        >\n                            {this.state.policies.map((n) => {\n                                return (\n                                    <MenuItem key={n.uuid} value={n.uuid}>{n.name}</MenuItem>\n                                );\n                            })};\n                        </Select>\n                        <br />\n                        <br />\n                        <p>\n                            <FormattedMessage\n                                id='Apis.Details.Security.AddPolicy.policy.type.label'\n                                defaultMessage='Policy Type: '\n                            />\n                            {this.state.selectedPolicy.type}\n                        </p>\n                        <div>\n                            <p>\n                                <FormattedMessage\n                                    id='Apis.Details.Security.AddPolicy.policy.label'\n                                    defaultMessage='Policy: '\n                                />\n                            </p>\n                            <div className={classes.addJsonContent}>\n                                {this.formatPolicy(this.state.selectedPolicy.policy)}\n                            </div>\n                        </div>\n                    </div>\n                    <Divider className={classes.divider} />\n                    <div className={classes.addNewOther}>\n                        <Button variant='contained' color='primary' onClick={() => this.handlePolicyAdd()}>\n                            <FormattedMessage\n                                id='Apis.Details.Security.AddPolicy.add.policy.to.api'\n                                defaultMessage='Add Policy to API'\n                            />\n                        </Button>\n                        <Button className={classes.button} onClick={this.props.toggleShowAddPolicy}>\n                            <FormattedMessage\n                                id='Apis.Details.Security.AddPolicy.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAddPolicy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    toggleShowAddPolicy: PropTypes.func.isRequired,\n    id: PropTypes.string.isRequired,\n    updateData: PropTypes.func.isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\n\nexport default injectIntl(withStyles(styles)(AddPolicy));\n\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\n\nimport Api from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport PropTypes from 'prop-types';\n\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport Divider from '@material-ui/core/Divider';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport AddPolicy from './AddPolicy';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    button: {\n        marginLeft: theme.spacing.unit * 2,\n        textTransform: theme.custom.leftMenuTextStyle,\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    table: {\n        '& td': {\n            fontSize: theme.typography.fontSize,\n        },\n        '& th': {\n            fontSize: theme.typography.fontSize * 1.2,\n        },\n        tableLayout: 'fixed',\n    },\n    addNewHeader: {\n        padding: theme.spacing.unit * 2,\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing.unit * 2,\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addJsonContent: {\n        whiteSpace: 'pre',\n    },\n});\n\nclass SecurityOverview extends Component {\n    constructor(props) {\n        super(props);\n        this.api = new Api();\n        this.state = {\n            api: {\n                name: '',\n            },\n            policies: [],\n            showAddPolicy: false,\n        };\n        this.updateData = this.updateData.bind(this);\n        this.toggleShowAddPolicy = this.toggleShowAddPolicy.bind(this);\n        this.updateData = this.updateData.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateData();\n    }\n\n    updateData() {\n        const promisedApi = this.api.get(this.props.match.params.api_uuid);\n        promisedApi.then((response) => {\n            this.setState({ api: response.obj });\n            this.updatePolicyData();\n        });\n    }\n\n    updatePolicyData() {\n        this.setState({ policies: [] });\n        const policyIds = this.state.api.threatProtectionPolicies.list;\n        for (let i = 0; i < policyIds.length; i++) {\n            const id = policyIds[i].policyId;\n            const promisedPolicies = this.api.getThreatProtectionPolicy(id);\n            promisedPolicies.then((response) => {\n                const updatedPolicies = this.state.policies;\n                updatedPolicies.push(response.obj);\n                this.setState({ policies: updatedPolicies });\n            });\n        }\n    }\n\n    deletePolicy(id) {\n        const { intl } = this.props;\n        const associatedApi = this.state.api;\n        const promisedPolicyDelete = this.api.deleteThreatProtectionPolicyFromApi(associatedApi.id, id);\n        promisedPolicyDelete.then((response) => {\n            if (response.status === 200) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Security.SecurityOverview.policy.remove.success',\n                    defaultMessage: 'Policy removed successfully.',\n                }));\n\n                //   remove policy from local api\n                const index = associatedApi.threatProtectionPolicies.list.indexOf({ policyId: id });\n                associatedApi.threatProtectionPolicies.list.splice(index, 1);\n                this.setState({ api: associatedApi });\n                this.updatePolicyData();\n            } else {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Security.SecurityOverview.policy.remove.failure',\n                    defaultMessage: 'Failed to remove policy.',\n                }));\n            }\n        });\n    }\n\n    toggleShowAddPolicy = () => {\n        this.setState({ showAddPolicy: !this.state.showAddPolicy });\n    }\n\n    formatPolicy = (policy) => {\n        let formattedPolicy = policy;\n        formattedPolicy = formattedPolicy.replace(':', ' : ');\n        formattedPolicy = formattedPolicy.split(',').join(',\\n');\n        return formattedPolicy;\n    }\n\n    render() {\n        let data = [];\n        if (this.state.policies) {\n            data = this.state.policies;\n        }\n        const { classes } = this.props;\n        const { showAddPolicy } = this.state;\n\n        return (\n            <div className={classes.root}>\n                <div className={classes.contentWrapper}>\n                    <div className={classes.titleWrapper}>\n                        <Typography variant='h4' align='left' className={classes.mainTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.Security.SecurityOverview.threat.protection.policies'\n                                defaultMessage='Threat Protection Policies'\n                            />\n                        </Typography>\n                        <Button size='small' className={classes.button} onClick={this.toggleShowAddPolicy}>\n                            <AddCircle className={classes.buttonIcon} />\n                            <FormattedMessage\n                                id='Apis.Details.Security.SecurityOverview.add.threat.protection.policy'\n                                defaultMessage='Add New Threat Protection Policy'\n                            />\n                        </Button>\n                    </div>\n                </div>\n                <div className={classes.contentWrapper}>\n                    {showAddPolicy &&\n                    <AddPolicy\n                        id={this.state.api.id}\n                        toggleShowAddPolicy={this.toggleShowAddPolicy}\n                        updateData={this.updateData}\n                    />\n                    }\n                </div>\n                <br />\n                <div className={classes.contentWrapper}>\n                    <div className={classes.addNewWrapper}>\n                        <Typography className={classes.addNewHeader}>\n                            <FormattedMessage\n                                id='Apis.Details.Security.SecurityOverview.manage.threat.protection.policies'\n                                defaultMessage='Manage Threat Protection Policies'\n                            />\n                        </Typography>\n                        <Divider className={classes.divider} />\n                        <Table className={classes.table}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>\n                                        <FormattedMessage\n                                            id='Apis.Details.Security.SecurityOverview.policy.name'\n                                            defaultMessage='Policy Name'\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <FormattedMessage\n                                            id='Apis.Details.Security.SecurityOverview.policy.type'\n                                            defaultMessage='Policy Type'\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <FormattedMessage\n                                            id='Apis.Details.Security.SecurityOverview.policy'\n                                            defaultMessage='Policy'\n                                        />\n                                    </TableCell>\n                                    <TableCell />\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {data.map((n) => {\n                                    return (\n                                        <TableRow key={n.uuid}>\n                                            <TableCell>{n.name + (n.uuid === 'GLOBAL-JSON' ? ' (GLOBAL)' : '')}</TableCell>\n                                            <TableCell>{n.type}</TableCell>\n                                            <TableCell>\n                                                <div className={classes.addJsonContent}>\n                                                    {this.formatPolicy(n.policy)}\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>\n                                                <span>\n                                                    <Button color='accent' onClick={() => this.deletePolicy(n.uuid)} >\n                                                        <FormattedMessage\n                                                            id='Apis.Details.Security.SecurityOverview.delete'\n                                                            defaultMessage='Delete'\n                                                        />\n                                                    </Button>\n                                                </span>\n                                            </TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            </TableBody>\n                        </Table>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nSecurityOverview.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    match: PropTypes.shape({\n        params: PropTypes.shape({\n            api_uuid: PropTypes.string,\n        }),\n    }).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\n\nexport default injectIntl(withStyles(styles)(SecurityOverview));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport SecurityOverview from './SecurityOverview';\n\nconst Security = () => {\n    return (\n        <Switch>\n            <Route path='/apis/:api_uuid/security' component={SecurityOverview} />\n        </Switch>\n    );\n};\n\nexport default Security;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport EditRounded from '@material-ui/icons/EditRounded';\nimport CloudUploadRounded from '@material-ui/icons/CloudUploadRounded';\nimport CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Progress } from 'AppComponents/Shared';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MonacoEditor from 'react-monaco-editor';\nimport yaml from 'js-yaml';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api.js';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\n\nimport Dropzone from 'react-dropzone';\nimport json2yaml from 'json2yaml';\nimport SwaggerParser from 'swagger-parser';\nimport { isRestricted } from 'AppData/AuthManager';\nimport ResourceNotFound from '../../../Base/Errors/ResourceNotFound';\n\nconst EditorDialog = React.lazy(() => import('./SwaggerEditorDrawer'));\n\nconst styles = () => ({\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    swaggerEditorWrapper: {\n        height: '100vh',\n        overflowY: 'auto',\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    topBar: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    converterWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        flex: '1',\n        fontSize: '0.6964285714285714rem',\n    },\n    downloadLink: {\n        color: 'black',\n    },\n});\n/**\n * This component holds the functionality of viewing the api definition content of an api. The initial view is a\n * read-only representation of the api definition file.\n * Users can either edit the content by clicking the 'Edit' button or upload a new api definition file by clicking\n * 'Import API Definition'.\n * */\nclass APIDefinition extends React.Component {\n    /**\n     * @inheritDoc\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            openEditor: false,\n            swagger: null,\n            graphQL: null,\n            format: null,\n            convertTo: null,\n        };\n        this.onDrop = this.onDrop.bind(this);\n        this.handleNo = this.handleNo.bind(this);\n        this.handleOk = this.handleOk.bind(this);\n        this.openEditor = this.openEditor.bind(this);\n        this.transition = this.transition.bind(this);\n        this.closeEditor = this.closeEditor.bind(this);\n        this.hasJsonStructure = this.hasJsonStructure.bind(this);\n        this.getConvertToFormat = this.getConvertToFormat.bind(this);\n        this.onChangeFormatClick = this.onChangeFormatClick.bind(this);\n        this.openUpdateConfirmation = this.openUpdateConfirmation.bind(this);\n        this.updateSwaggerDefinition = this.updateSwaggerDefinition.bind(this);\n        this.validateAndUpdateApiDefinition = this.validateAndUpdateApiDefinition.bind(this);\n        this.validateAndImportSchema = this.validateAndImportSchema.bind(this);\n        this.updateGraphQLAPIDefinition = this.updateGraphQLAPIDefinition.bind(this);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        let promisedApi;\n        if (api.type === 'GRAPHQL') {\n            promisedApi = api.getSchema(api.id);\n        } else {\n            promisedApi = api.getSwagger(api.id);\n        }\n\n        promisedApi\n            .then((response) => {\n                if (api.type === 'GRAPHQL') {\n                    this.setState({\n                        graphQL: response.obj.schemaDefinition,\n                        format: 'txt',\n                    });\n                } else {\n                    this.setState({\n                        swagger: json2yaml.stringify(response.obj),\n                        format: 'yaml',\n                        convertTo: this.getConvertToFormat('yaml'),\n                    });\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    }\n\n    /**\n     * Handles the file upload.\n     * @param {object[]} files The uploaded file object array\n     * */\n    onDrop(files) {\n        const file = files[0];\n        const { intl } = this.props;\n        const { graphQL } = this.state;\n        if (file) {\n            const reader = new FileReader();\n            reader.onload = (e) => {\n                const { result } = e.target;\n                if (graphQL != null) {\n                    this.validateAndImportSchema(file);\n                } else {\n                    this.validateAndUpdateApiDefinition(result);\n                }\n            };\n            reader.readAsText(file);\n        } else {\n            Alert.error(intl.formatMessage({\n                id: 'Apis.Details.APIDefinition.APIDefinition.unsupported.file.type',\n                defaultMessage: 'Unsupported File Type.',\n            }));\n        }\n    }\n\n    /**\n     * Toggle the format of the api definition.\n     * JSON -> YAML, YAML -> JSON\n     */\n    onChangeFormatClick() {\n        const { format, swagger, convertTo } = this.state;\n        let formattedString = '';\n        if (convertTo === 'json') {\n            formattedString = JSON.stringify(yaml.load(swagger), null, 1);\n        } else {\n            formattedString = json2yaml.stringify(JSON.parse(swagger));\n        }\n        this.setState({ swagger: formattedString, format: convertTo, convertTo: format });\n    }\n\n    /**\n     * Util function to get the format which the definition can be converted to.\n     * @param {*} format : The current format of definition.\n     * @returns {string} The possible conversion format.\n     */\n    getConvertToFormat(format) {\n        return format === 'json' ? 'yaml' : 'json';\n    }\n\n    /**\n     * Validates the given graphQL api schema.\n     * @param {*}  file graphQL schema.\n     */\n    validateAndImportSchema(file) {\n        const { api, intl } = this.props;\n        const promisedValidation = api.validateGraphQLFile(file);\n        promisedValidation\n            .then((response) => {\n                const { isValid, graphQLInfo } = response.obj;\n                if (isValid === true) {\n                    api.operations = graphQLInfo.operations;\n                    this.updateGraphQLAPIDefinition(api, graphQLInfo.graphQLSchema.schemaDefinition);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                Alert.error(intl.formatMessage({\n                    id: 'Error.while.validating.the.imported.graphQLSchema',\n                    defaultMessage: 'Error while validating imported schema',\n                }));\n            });\n    }\n\n    /**\n     * Update the graphQL api with its operation\n     * @param {*}  api\n     * @param {*}  graphQLInfo\n     */\n    updateGraphQLAPIDefinition(api, graphQLSchema) {\n        const { intl } = this.props;\n        const promisedAPI = api.updateGraphQLAPIDefinition(api.id, graphQLSchema);\n        promisedAPI\n            .then((response) => {\n                this.setState({ graphQL: response.data });\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.graphQLDefinition.updated.successfully',\n                    defaultMessage: 'Schema Definition Updated Successfully',\n                }));\n            })\n            .catch((err) => {\n                console.log(err);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.error.updating.graphQL.schema',\n                    defaultMessage: 'Error while updating graphQL schema',\n                }));\n            });\n    }\n\n    /**\n     * Validates the given api definition.\n     * @param {*} apiDefinition JSON/ YAML api definition.\n     */\n    validateAndUpdateApiDefinition(apiDefinition) {\n        const { intl } = this.props;\n        let swaggerObj = {};\n        let specFormat = null;\n        if (this.hasJsonStructure(apiDefinition)) {\n            swaggerObj = JSON.parse(apiDefinition);\n            specFormat = 'json';\n        } else {\n            swaggerObj = yaml.safeLoad(apiDefinition);\n            specFormat = 'yaml';\n        }\n        SwaggerParser.validate(swaggerObj, (err, api) => {\n            if (api) {\n                this.updateSwaggerDefinition(apiDefinition, specFormat, this.getConvertToFormat(specFormat));\n            } else {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.file.validation.failed',\n                    defaultMessage: 'API Definition file validation failed.',\n                }));\n            }\n        });\n    }\n\n    /**\n     * Checks whether the swagger content is json type.\n     * @param {string} definition The swagger string.\n     * @return {boolean} Whether the content is a json or not.\n     * */\n    hasJsonStructure(definition) {\n        if (typeof definition !== 'string') return false;\n        try {\n            const result = JSON.parse(definition);\n            return result && typeof result === 'object';\n        } catch (err) {\n            return false;\n        }\n    }\n\n    /**\n     * Handles the yes button action of the save api definition confirmation dialog box.\n     */\n    handleOk() {\n        const updatedContent = window.localStorage.getItem('swagger-editor-content');\n        this.setState({ openDialog: false }, () => this.updateSwaggerDefinition(updatedContent, '', ''));\n    }\n\n    /**\n     * Handles the No button action of the save api definition confirmation dialog box.\n     */\n    handleNo() {\n        this.setState({ openDialog: false });\n    }\n\n    /**\n     * Method to set the state for opening the swagger editor drawer.\n     * Swagger editor loads the definition content from the local storage. Hence we set the swagger content to the\n     * local storage.\n     * */\n    openEditor() {\n        window.localStorage.setItem('swagger-editor-content', this.state.swagger);\n        this.setState({ openEditor: true });\n    }\n\n    /**\n     * Sets the state to close the swagger-editor drawer.\n     * */\n    closeEditor() {\n        window.localStorage.setItem('swagger-editor-content', '');\n        this.setState({ openEditor: false });\n    }\n\n    /**\n     * Handles the transition of the drawer.\n     * @param {object} props list of props\n     * @return {object} The Slide transition component\n     * */\n    transition(props) {\n        return <Slide direction='up' {...props} />;\n    }\n\n    /**\n     * Updates swagger content in the local storage.\n     * */\n    openUpdateConfirmation() {\n        this.setState({ openDialog: true });\n    }\n\n    /**\n     * Updates swagger definition of the api.\n     * @param {string} swaggerContent The swagger file that needs to be updated.\n     * @param {string} specFormat The current format of the definition\n     * @param {string} toFormat The format it can be converted to.\n     * */\n    updateSwaggerDefinition(swaggerContent, specFormat, toFormat) {\n        const { api, intl } = this.props;\n        let parsedContent = {};\n        if (this.hasJsonStructure(swaggerContent)) {\n            parsedContent = JSON.parse(swaggerContent);\n        } else {\n            try {\n                parsedContent = yaml.load(swaggerContent);\n            } catch (err) {\n                console.log(err);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.error.while.updating.api.definition',\n                    defaultMessage: 'Error while updating the API Definition',\n                }));\n                return;\n            }\n        }\n        const promise = api.updateSwagger(parsedContent);\n        promise\n            .then((response) => {\n                if (response) {\n                    Alert.success(intl.formatMessage({\n                        id: 'Apis.Details.APIDefinition.APIDefinition.api.definition.updated.successfully',\n                        defaultMessage: 'API Definition Updated Successfully',\n                    }));\n                    if (specFormat && toFormat) {\n                        this.setState({ swagger: swaggerContent, format: specFormat, convertTo: toFormat });\n                    } else {\n                        this.setState({ swagger: swaggerContent });\n                    }\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.error.while.updating.api.definition',\n                    defaultMessage: 'Error while updating the API Definition',\n                }));\n            });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const {\n            swagger, graphQL, openEditor, openDialog, format, convertTo, notFound,\n        } = this.state;\n        const { classes, resourceNotFountMessage, api } = this.props;\n        let downloadLink;\n        let fileName;\n        let isGraphQL = 0;\n\n        if (graphQL !== null) {\n            downloadLink = 'data:text/' + format + ';charset=utf-8,' + encodeURIComponent(graphQL);\n            fileName = api.provider + '-' + api.name + '-' + api.version + '.graphql';\n            isGraphQL = 1;\n        } else {\n            downloadLink = 'data:text/' + format + ';charset=utf-8,' + encodeURIComponent(swagger);\n            fileName = 'swagger.' + format;\n        }\n        const editorOptions = {\n            selectOnLineNumbers: true,\n            readOnly: true,\n            smoothScrolling: true,\n            wordWrap: 'on',\n        };\n\n        if (notFound) {\n            return <ResourceNotFound message={resourceNotFountMessage} />;\n        }\n        if (!swagger && !graphQL) {\n            return <Progress />;\n        }\n\n        return (\n            <div className={classes.root}>\n                <div className={classes.topBar}>\n                    <div className={classes.titleWrapper}>\n                        <Typography variant='h4' align='left' className={classes.mainTitle}>\n                            {graphQL ? (\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.schema.definition'\n                                    defaultMessage='Schema Definition'\n                                />\n                            ) : (\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.api.definition'\n                                    defaultMessage='API Definition'\n                                />\n                            )}\n                        </Typography>\n                        {!graphQL && (\n                            <Button\n                                size='small'\n                                className={classes.button}\n                                onClick={this.openEditor}\n                                disabled={isRestricted(['apim:api_create'], api)}\n                            >\n                                <EditRounded className={classes.buttonIcon} />\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.edit'\n                                    defaultMessage='Edit'\n                                />\n                            </Button>\n                        )}\n                        <Dropzone\n                            multiple={false}\n                            className={classes.dropzone}\n                            onDrop={(files) => {\n                                this.onDrop(files);\n                            }}\n                        >\n                            {({ getRootProps, getInputProps }) => (\n                                <div {...getRootProps()}>\n                                    <input {...getInputProps()} />\n                                    <Button\n                                        size='small'\n                                        className={classes.button}\n                                        disabled={isRestricted(['apim:api_create'], api)}\n                                    >\n                                        <CloudUploadRounded className={classes.buttonIcon} />\n                                        <FormattedMessage\n                                            id='Apis.Details.APIDefinition.APIDefinition.import.definition'\n                                            defaultMessage='Import Definition'\n                                        />\n                                    </Button>\n                                </div>\n                            )}\n                        </Dropzone>\n\n                        <a className={classes.downloadLink} href={downloadLink} download={fileName}>\n                            <Button size='small' className={classes.button}>\n                                <CloudDownloadRounded className={classes.buttonIcon} />\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.download.definition'\n                                    defaultMessage='Download Definition'\n                                />\n                            </Button>\n                        </a>\n                        {isRestricted(['apim:api_create'], api)\n                            && (\n                                <Typography variant='body2' color='primary'>\n                                    <FormattedMessage\n                                        id='Apis.Details.APIDefinition.APIDefinition.update.not.allowed'\n                                        defaultMessage={'*You are not authorized to update API Definition due to' +\n                                        ' insufficient permissions'}\n                                    />\n                                </Typography>\n                            )\n                        }\n                    </div>\n                    {isGraphQL === 0 && (\n                        <div className={classes.converterWrapper}>\n                            <Button size='small' className={classes.button} onClick={this.onChangeFormatClick}>\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.convert.to'\n                                    defaultMessage='Convert to:'\n                                />\n                                {convertTo}\n                            </Button>\n                        </div>\n                    )}\n                </div>\n                <div>\n                    <MonacoEditor\n                        width='100%'\n                        height='calc(100vh - 51px)'\n                        theme='vs-dark'\n                        value={swagger !== null ? swagger : graphQL}\n                        options={editorOptions}\n                    />\n                </div>\n                <Dialog fullScreen open={openEditor} onClose={this.closeEditor} TransitionComponent={this.transition}>\n                    <Paper square className={classes.popupHeader}>\n                        <IconButton\n                            className={classes.button}\n                            color='inherit'\n                            onClick={this.closeEditor}\n                            aria-label={(\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.btn.close'\n                                    defaultMessage='Close'\n                                />\n                            )}\n                        >\n                            <Icon>close</Icon>\n                        </IconButton>\n\n                        <Button\n                            className={classes.button}\n                            variant='contained'\n                            color='primary'\n                            onClick={this.openUpdateConfirmation}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.APIDefinition.documents.swagger.editor.update.content'\n                                defaultMessage='Update Content'\n                            />\n                        </Button>\n                    </Paper>\n                    <Suspense\n                        fallback={(\n                            <div>\n                                (\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.loading'\n                                    defaultMessage='Loading...'\n                                />\n                                )\n                            </div>\n                        )}\n                    >\n                        <EditorDialog />\n                    </Suspense>\n                </Dialog>\n                <Dialog\n                    open={openDialog}\n                    onClose={this.handleNo}\n                    aria-labelledby='alert-dialog-title'\n                    aria-describedby='alert-dialog-description'\n                >\n                    <DialogTitle id='alert-dialog-title'>\n                        <Typography align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.APIDefinition.save.api.definition'\n                                defaultMessage='Save API Definition'\n                            />\n                        </Typography>\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id='alert-dialog-description'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.APIDefinition.api.definition.save.confirmation'\n                                defaultMessage={\n                                    'Do you want to save the API Definition? This will affect the'\n                                    + ' existing resources.'\n                                }\n                            />\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleNo} color='secondary'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.APIDefinition.btn.no'\n                                defaultMessage='No'\n                            />\n                        </Button>\n                        <Button onClick={this.handleOk} color='primary' autoFocus>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.APIDefinition.btn.yes'\n                                defaultMessage='Yes'\n                            />\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nAPIDefinition.propTypes = {\n    classes: PropTypes.shape({\n        button: PropTypes.shape({}),\n        popupHeader: PropTypes.shape({}),\n        buttonIcon: PropTypes.shape({}),\n        root: PropTypes.shape({}),\n        topBar: PropTypes.shape({}),\n        titleWrapper: PropTypes.shape({}),\n        mainTitle: PropTypes.shape({}),\n        converterWrapper: PropTypes.shape({}),\n        dropzone: PropTypes.shape({}),\n        downloadLink: PropTypes.shape({}),\n    }).isRequired,\n    api: PropTypes.shape({\n        updateSwagger: PropTypes.func,\n        getSwagger: PropTypes.func,\n        id: PropTypes.string,\n        apiType: PropTypes.oneOf([API.CONSTS.API, API.CONSTS.APIProduct]),\n    }).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.object,\n    }).isRequired,\n    resourceNotFountMessage: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\nexport default injectIntl(withStyles(styles, { withTheme: true })(APIDefinition));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\n\nimport LibraryAdd from '@material-ui/icons/LibraryAdd';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { resourceMethod, resourcePath, ScopeValidation } from 'AppData/ScopeValidation';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\n\nconst styles = theme => ({\n    root: {\n        height: 70,\n        background: theme.palette.background.paper,\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    backLink: {\n        alignItems: 'center',\n        textDecoration: 'none',\n        display: 'flex',\n    },\n    backIcon: {\n        color: theme.palette.primary.main,\n        fontSize: 56,\n        cursor: 'pointer',\n    },\n    backText: {\n        color: theme.palette.primary.main,\n        cursor: 'pointer',\n        fontFamily: theme.typography.fontFamily,\n    },\n    createNewVersionWrapper: {\n        flex: 1,\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: theme.spacing.unit * 2,\n    },\n    createNewVersion: {\n        display: 'flex',\n        flexDirection: 'column',\n        textAlign: 'center',\n        justifyContent: 'center',\n        cursor: 'pointer',\n        color: theme.custom.createNewVersionButtonColor || 'inherit',\n    },\n    linkText: {\n        fontSize: theme.typography.fontSize,\n    },\n});\n\n/**\n *\n * Function to create a 'CreateNewVersion' button\n *\n * @param {any} props props\n * @returns {*} React CreateNewVersion function component\n * @constructor\n */\nfunction CreateNewVersionButton(props) {\n    const { api, classes } = props;\n    return (\n        <React.Fragment>\n            {/* allowing create new version based on scopes */}\n            <ScopeValidation resourceMethod={resourceMethod.POST} resourcePath={resourcePath.API_COPY}>\n                <div className={classes.createNewVersionWrapper}>\n                    <VerticalDivider height={70} />\n                    <Link\n                        className={classes.createNewVersion}\n                        to={'/apis/' + api.id + '/new_version'}\n                    >\n\n                        <div>\n                            <LibraryAdd />\n                        </div>\n                        <div className={classes.linkText}>Create New Version</div>\n                    </Link>\n                </div>\n            </ScopeValidation>\n        </React.Fragment>\n    );\n}\n\nCreateNewVersionButton.propTypes = {\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nexport default withRouter(withStyles(styles, { withTheme: true })(CreateNewVersionButton));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Configuration from 'Config';\nimport { FormattedMessage } from 'react-intl';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\n\nimport ThumbnailView from 'AppComponents/Apis/Listing/components/ImageGenerator/ThumbnailView';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport DeleteApiButton from './DeleteApiButton';\nimport CreateNewVersionButton from './CreateNewVersionButton';\n\nconst styles = theme => ({\n    root: {\n        height: 70,\n        background: theme.palette.background.paper,\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    backLink: {\n        alignItems: 'center',\n        textDecoration: 'none',\n        display: 'flex',\n    },\n    backIcon: {\n        color: theme.palette.primary.main,\n        fontSize: 56,\n        cursor: 'pointer',\n    },\n    backText: {\n        color: theme.palette.primary.main,\n        cursor: 'pointer',\n        fontFamily: theme.typography.fontFamily,\n    },\n    viewInStoreLauncher: {\n        display: 'flex',\n        flexDirection: 'column',\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        textAlign: 'center',\n    },\n    linkText: {\n        fontSize: theme.typography.fontSize,\n    },\n});\n\nconst APIDetailsTopMenu = (props) => {\n    const {\n        classes, theme, api, isAPIProduct,\n    } = props;\n    const isVisibleInStore = ['PROTOTYPED', 'PUBLISHED'].includes(api.lifeCycleStatus);\n    // todo: need to support rev proxy ~tmkb\n    return (\n        <div className={classes.root}>\n            <Link to={isAPIProduct ? '/api-products' : '/apis'} className={classes.backLink}>\n                <KeyboardArrowLeft className={classes.backIcon} />\n                <div className={classes.backText}>\n                    <FormattedMessage\n                        id='Apis.Details.components.APIDetailsTopMenu.back.to.listing'\n                        defaultMessage='BACK TO {break} LISTING'\n                        values={{ break: <br /> }}\n                    />\n                </div>\n            </Link>\n            <VerticalDivider height={70} />\n            <ThumbnailView api={api} width={70} height={50} />\n            <div style={{ marginLeft: theme.spacing.unit }}>\n                <Typography variant='h4'>\n                    {api.name} {isAPIProduct ? '' : ':' + api.version}\n                </Typography>\n                <Typography variant='caption' gutterBottom align='left'>\n                    Created by: {api.provider}\n                </Typography>\n            </div>\n            <VerticalDivider height={70} />\n            <div className={classes.infoItem}>\n                <Typography variant='subtitle1' gutterBottom>\n                    {isAPIProduct ? api.state : api.lifeCycleStatus}\n                </Typography>\n                <Typography variant='caption' gutterBottom align='left'>\n                    State\n                </Typography>\n            </div>\n            <VerticalDivider height={70} />\n            {isVisibleInStore &&\n                <a\n                    target='_blank'\n                    rel='noopener noreferrer'\n                    href={`${window.location.origin}${Configuration.app.storeContext}/apis/${api.id}/overview`}\n                    className={classes.viewInStoreLauncher}\n                >\n                    <div>\n                        <LaunchIcon />\n                    </div>\n                    <div className={classes.linkText}>View In store</div>\n                </a>\n            }\n            {isVisibleInStore && <VerticalDivider height={70} />}\n            <Tooltip title={moment(api.lastUpdatedTime).calendar()} aria-label='add'>\n                <Typography variant='caption' display='block'>\n                    <FormattedMessage\n                        id='Apis.Details.components.APIDetailsTopMenu.last.updated.time'\n                        defaultMessage='Last updated:'\n                    />{' '}\n                    {moment(api.lastUpdatedTime).fromNow()}\n                </Typography>\n            </Tooltip>\n            {isAPIProduct ? null : <CreateNewVersionButton buttonClass={classes.viewInStoreLauncher} api={api} />}\n            <DeleteApiButton buttonClass={classes.viewInStoreLauncher} api={api} isAPIProduct={isAPIProduct} />\n        </div>\n    );\n};\n\nAPIDetailsTopMenu.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(APIDetailsTopMenu);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage } from 'react-intl';\n\nconst styles = theme => ({\n    FormControl: {\n        padding: 10,\n        width: '100%',\n        marginTop: 0,\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    buttonWrapper: {\n        paddingTop: 20,\n    },\n    paperRoot: {\n        padding: 20,\n        marginTop: 20,\n    },\n    formControl: {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: `${theme.spacing.unit * 2}px 2px`,\n    },\n    itemWrapper: {\n        width: 500,\n    },\n});\n/**\n * The base component of the engaged mediation policy  view.\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nfunction EngagedInMediationPolicy(props) {\n    const { handleInputChange, classes, engagedPolicyFile } = props;\n\n    return (\n        <div className={classes.itemWrapper}>\n            <TextField\n                style={{\n                    width: '100%',\n                }}\n                id='inFlow'\n                name='In Flow'\n                helperText={<FormattedMessage\n                    id='Apis.Details.MediationPolicies.MediationPolicies.in.flow.helper.text'\n                    defaultMessage='mediation policy that is engaged in Request Flow'\n                />}\n                margin='normal'\n                type='text'\n                onChange={handleInputChange}\n                value={engagedPolicyFile.name}\n            />\n        </div>\n    );\n}\nEngagedInMediationPolicy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    engagedPlicyFile: PropTypes.shape({}).isRequired,\n    handleInputChange: PropTypes.func.isRequired,\n    engagedPolicyFile: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(EngagedInMediationPolicy);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dropzone from 'react-dropzone';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Download from 'AppComponents/Shared/Download.js';\nimport API from 'AppData/api.js';\n\nconst dropzoneStyles = {\n    border: '1px dashed ',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    height: 75,\n    padding: '8px 0px',\n    position: 'relative',\n    textAlign: 'center',\n    width: '100%',\n    margin: '10px 0',\n};\nconst styles = theme => ({\n    formControl: {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: `${theme.spacing.unit * 2}px 2px`,\n    },\n    dropzone: {\n        border: '1px dashed ' + theme.palette.primary.main,\n        borderRadius: '5px',\n        cursor: 'pointer',\n        height: 'calc(100vh - 50em)',\n        padding: `${theme.spacing.unit * 2}px 0px`,\n        position: 'relative',\n        textAlign: 'center',\n        width: '80%',\n        margin: '10px 0',\n    },\n    dropZoneWrapper: {\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& span': {\n            fontSize: 16,\n            color: theme.palette.primary.main,\n        },\n    },\n});\n/**\n * The component to manage IN mediation policies.\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nfunction EditInMediationPolicy(props) {\n    const {\n        classes, api, updateMediationPolicy,\n    } = props;\n    const [globalInMediationPolicies, setGlobalInMediationPolicies] = useState([]);\n    // user uploaded api specific mediation policies\n    const [inSeqCustom, setInSeqCustom] = useState([]);\n    const { id } = api;\n    const type = 'IN';\n    const NONE = 'none';\n    const selectedPolicy = api.mediationPolicies.filter(seq => seq.type === type)[0];\n    const [selectedPolicyFile, setSelectedPolicyFile] = useState({\n        id: selectedPolicy ? selectedPolicy.id : '',\n        name: selectedPolicy ? selectedPolicy.name : '',\n        type: selectedPolicy ? selectedPolicy.type : '',\n        content: {},\n    });\n    useEffect(() => {\n        if (globalInMediationPolicies.length <= 0) {\n            API.getGlobalMediationPolicies()\n                .then((response) => {\n                    setGlobalInMediationPolicies([...response.obj.list.filter(seq => seq.type === type)]);\n                })\n                .catch((error) => {\n                    if (process.env.NODE_ENV !== 'production') {\n                        console.log(error);\n                        Alert.error(<FormattedMessage\n                            id='Apis.Details.MediationPolicies.Edit.EditInMediationPolicy.global.error'\n                            defaultMessage='Error retrieving Global mediation policies'\n                        />);\n                    }\n                });\n        }\n\n        API.getMediationPolicies(id)\n            .then((response) => {\n                setInSeqCustom([...response.obj.list.filter(seq => seq.type === type)]);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(<FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditInMediationPolicy.custom.error'\n                        defaultMessage='Error retrieving mediation policies'\n                    />);\n                }\n            });\n    }, [selectedPolicyFile]);\n    const saveMediationPolicy = (newPolicy) => {\n        const promisedApi = API.addMediationPolicy(newPolicy, api.id, type);\n        promisedApi.then(() => {\n            Alert.info(FormattedMessage({\n                id: 'Apis.Details.MediationPolicies.Edit.EditInMediationPolicy.success',\n                defaultMessage: 'Mediation policy added successfully',\n            }));\n        }).catch((errorResponse) => {\n            console.log(errorResponse);\n            Alert.error(JSON.stringify(errorResponse));\n        });\n    };\n    /**\n     * Handled the file upload action of the dropzone.\n     * @param {file} policy The accepted file list by the dropzone.\n     * */\n    const onDrop = (policy) => {\n        const policyFile = policy[0];\n        if (policyFile) {\n            saveMediationPolicy(policyFile);\n            setSelectedPolicyFile({ name: policyFile.name, content: policyFile });\n        }\n    };\n    /**\n    * Handles the mediation policy select event.\n    * @param {any} event The event pass to the layout\n    */\n    function handleChange(event) {\n        const policy = event.target;\n        if (policy.name !== NONE) {\n            setSelectedPolicyFile({\n                id: policy.name, name: policy.value, type, content: '',\n            });\n            updateMediationPolicy({\n                id: policy.name, name: policy.value, type, content: '',\n            });\n        } else {\n            setSelectedPolicyFile({\n                id: NONE, name: policy.value, type, content: '',\n            });\n            updateMediationPolicy({\n                id: NONE, name: policy.value, type, content: '',\n            });\n        }\n    }\n    /**\n    * Handles the Global mediation policy download.\n    * @param {any} policyToDownload policy file id that is to be downloaded.\n    */\n    function downloadGlobalMediationPolicyContent(policyToDownload) {\n        const promisedGetContent = API.getGlobalMediationPolicyContent(policyToDownload, api.id);\n        promisedGetContent\n            .then((done) => {\n                Download.downloadFile(done, document);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(<FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditInMediationPolicy.download.error'\n                        defaultMessage='Error downloading the file'\n                    />);\n                }\n            });\n    }\n\n    /**\n    * Handles the custom mediation policy download.\n    * @param {any} policyToDownload policy file id that is to be downloaded.\n    */\n    function downloadCustomMediationPolicyContent(policyToDownload) {\n        const promisedGetContent = API.getMediationPolicyContent(policyToDownload, api.id);\n        promisedGetContent\n            .then((done) => {\n                Download.downloadFile(done, document);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(<FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditInMediationPolicy.download.error'\n                        defaultMessage='Error downloading the file'\n                    />);\n                }\n            });\n    }\n    /**\n    * Handles the custom mediation policy delete.\n    * @param {any} policyToDelete policy file id that is to be deleted.\n    */\n    function deleteCustomMediationPolicy(policyToDelete) {\n        const promisedGetContent = API.deleteMediationPolicy(policyToDelete, api.id);\n        promisedGetContent\n            .then(() => {\n                setInSeqCustom(inSeqCustom.filter(seq => seq.id !== policyToDelete));\n                Alert.info(<FormattedMessage\n                    id='Apis.Details.MediationPolicies.Edit.EditInMediationPolicy.delete.success'\n                    defaultMessage='Mediation policy deleted successfully.'\n                />);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(<FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditInMediationPolicy.delete.error'\n                        defaultMessage='Error deleting the file'\n                    />);\n                }\n            });\n    }\n    const handleDownload = (policyToDownload) => {\n        const isGlobalMediationPolicy = globalInMediationPolicies.filter(policy => policy.id === policyToDownload)\n            .length > 0;\n        if (isGlobalMediationPolicy) {\n            downloadGlobalMediationPolicyContent(policyToDownload);\n        } else {\n            downloadCustomMediationPolicyContent(policyToDownload);\n        }\n    };\n    const handleDelete = (policyToDelete) => {\n        const isGlobalMediationPolicy = globalInMediationPolicies.filter(policy => policy.id === policyToDelete)\n            .length > 0;\n        if (isGlobalMediationPolicy) {\n            Alert.error(<FormattedMessage\n                id='Apis.Details.MediationPolicies.Edit.EditInMediationPolicy.global.delete'\n                defaultMessage='Cannot delete Global mediation policies.'\n            />);\n        } else {\n            deleteCustomMediationPolicy(policyToDelete);\n        }\n    };\n    return (\n        <FormControl className={classes.formControl}>\n            <div className={classes.titleWrapper}>\n                <Dropzone\n                    multiple={false}\n                    className={classes.dropzone}\n                    activeClassName={classes.acceptDrop}\n                    rejectClassName={classes.rejectDrop}\n                    onDrop={(dropFile) => {\n                        onDrop(dropFile);\n                    }}\n                >\n                    {({ getRootProps, getInputProps }) => (\n                        <div {...getRootProps({ style: dropzoneStyles })}>\n                            <input {...getInputProps()} />\n                            <div className={classes.dropZoneWrapper}>\n                                <Icon className={classes.dropIcon}>cloud_upload</Icon>\n                                <Typography>\n                                    <FormattedMessage\n                                        id={'Apis.Details.MediationPolicies.Edit.EditInMediationPolicy.'\n                                            + 'click.or.drop.to.upload.file'}\n                                        defaultMessage='Click or drag the mediation file to upload.'\n                                    />\n                                </Typography>\n                            </div>\n                        </div>\n                    )}\n                </Dropzone>\n                <RadioGroup\n                    aria-label='inflow'\n                    name='inflow'\n                    className={classes.radioGroup}\n                    value={selectedPolicyFile.name}\n                    onChange={handleChange}\n                >\n                    <FormLabel component='customPolicies'>\n                        <FormattedMessage\n                            id='Apis.Details.Edit.MediationPolicies.EditInMediationPolicies.custom.in.policies'\n                            defaultMessage='Custom IN Mediation Policies'\n                        />\n                    </FormLabel>\n                    {inSeqCustom.map(seq => (\n                        <div>\n                            <IconButton onClick={() => handleDelete(seq.id)}>\n                                <Icon>delete</Icon>\n                            </IconButton>\n                            <Button onClick={() => handleDownload(seq.id)}>\n                                <Icon>arrow_downward</Icon>\n                            </Button>\n                            <FormControlLabel\n                                name={seq.id}\n                                type={seq.type}\n                                control={<Radio />}\n                                label={<FormattedMessage\n                                    id='Apis.Details.Edit.MediationPolicies.EditInMediationPolicies.custom.in.policy'\n                                    defaultMessage={seq.name}\n                                />}\n                                value={seq.name}\n                                checked={selectedPolicyFile.name === seq.name}\n                            />\n                        </div>\n                    ))}\n                    <FormControlLabel\n                        name={NONE}\n                        type={type}\n                        control={<Radio />}\n                        label={<FormattedMessage\n                            id='Apis.Details.Edit.MediationPolicies.EditInMediationPolicies.none'\n                            defaultMessage='No Mediation'\n                        />}\n                        value={NONE}\n                        checked={selectedPolicyFile.name === NONE || selectedPolicyFile.name === ''}\n\n                    />\n                    <FormLabel component='globalPolicies'>\n                        <FormattedMessage\n                            id='Apis.Details.Edit.MediationPolicies.EditInMediationPolicies.global.in.policies'\n                            defaultMessage='Global IN Mediation Policies'\n                        />\n                    </FormLabel>\n                    {globalInMediationPolicies.map(seq => (\n                        <div>\n                            <Button onClick={() => handleDownload(seq.id)}>\n                                <Icon>arrow_downward</Icon>\n                            </Button>\n                            <FormControlLabel\n                                name={seq.id}\n                                type={seq.type}\n                                control={<Radio />}\n                                label={<FormattedMessage\n                                    id='Apis.Details.Edit.MediationPolicies.EditInMediationPolicies.global.in.policy'\n                                    defaultMessage={seq.name}\n                                />}\n                                value={seq.name}\n                                checked={selectedPolicyFile.name === seq.name}\n                            />\n                        </div>\n                    ))}\n                </RadioGroup>\n            </div>\n        </FormControl>\n    );\n}\nEditInMediationPolicy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    engagedPolicyFile: PropTypes.shape({}).isRequired,\n    type: PropTypes.shape({}).isRequired,\n    updateMediationPolicy: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(EditInMediationPolicy);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport { FormattedMessage } from 'react-intl';\nimport { withStyles, Switch, FormControlLabel } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport API from 'AppData/api.js';\nimport Alert from 'AppComponents/Shared/Alert';\nimport EngagedInMediationPolicy from './Engaged/EngagedInMediationPolicy';\nimport EditInMediationPolicy from './Edit/EditInMediationPolicy';\n\nconst styles = {\n    content: {\n        flexGrow: 1,\n    },\n    itemWrapper: {\n        width: 500,\n        display: 'flex',\n    },\n    FormControl: {\n        padding: 10,\n        width: '100%',\n        marginTop: 0,\n        display: 'flex',\n        flexDirection: 'row',\n    },\n};\n\n/**\n * The base component of the IN mediation policy.\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nfunction InFlow(props) {\n    const { api, classes, updateMediationPolicy } = props;\n    const { mediationPolicies } = api;\n    const type = 'IN';\n    const inMediationPolicy = mediationPolicies.filter(seq => seq.type === type)[0];\n    const [engagedPolicyFile, setEngagedPolicyFile] = useState({\n        id: inMediationPolicy !== (null || undefined) ? inMediationPolicy.id : '',\n        name: inMediationPolicy !== (null || undefined) ? inMediationPolicy.name : '',\n        type: inMediationPolicy !== (null || undefined) ? inMediationPolicy.type : '',\n        content: {},\n    });\n    const [editable, setEditable] = useState(false);\n    const handleInputChange = (event) => {\n        const policy = event.target.value;\n        setEngagedPolicyFile(policy);\n    };\n    const handleToggleInFlowEdit = (event) => {\n        const isEditable = event.target.checked;\n        setEditable(isEditable);\n    };\n    useEffect(() => {\n        if (!editable) {\n            API.get(api.id).then((response) => {\n                const inPolicy = response.mediationPolicies.filter(seq => seq.type === type)[0];\n                setEngagedPolicyFile({\n                    id: inPolicy !== (null || undefined) ? inPolicy.id : '',\n                    name: inPolicy !== (null || undefined) ? inPolicy.name : '',\n                    type: inPolicy !== (null || undefined) ? inPolicy.type : '',\n                    content: {},\n                });\n            }).catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(<FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditOutMediationPolicy.global.error'\n                        defaultMessage='Error retrieving API mediation policies'\n                    />);\n                }\n            });\n        }\n    }, [editable]);\n\n    return (\n        <FormControl className={classes.formControl}>\n            <FormControlLabel\n                value='start'\n                checked={editable}\n                control={<Switch color='primary' />}\n                label={<FormattedMessage\n                    id='Apis.Details.MediationPolicies.MediationPolicies.in.flow.desc'\n                    defaultMessage='In Flow'\n                />}\n                labelPlacement='start'\n                onChange={handleToggleInFlowEdit}\n            />\n            {!editable ? (\n                <EngagedInMediationPolicy\n                    engagedPolicyFile={engagedPolicyFile}\n                    handleInputChange={handleInputChange}\n                    api={api}\n                />\n            )\n                : (\n                    <div className={classes.itemWrapper}>\n                        <EditInMediationPolicy\n                            handleInputChange={handleInputChange}\n                            engagedPolicyFile={engagedPolicyFile}\n                            api={api}\n                            updateMediationPolicy={updateMediationPolicy}\n                        />\n                    </div>\n                )}\n        </FormControl>\n    );\n}\n\nInFlow.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    updateMediationPolicy: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(InFlow);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dropzone from 'react-dropzone';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Download from 'AppComponents/Shared/Download.js';\nimport API from 'AppData/api.js';\n\nconst dropzoneStyles = {\n    border: '1px dashed ',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    height: 75,\n    padding: '8px 0px',\n    position: 'relative',\n    textAlign: 'center',\n    width: '100%',\n    margin: '10px 0',\n};\nconst styles = theme => ({\n    formControl: {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: `${theme.spacing.unit * 2}px 2px`,\n    },\n    dropzone: {\n        border: '1px dashed ' + theme.palette.primary.main,\n        borderRadius: '5px',\n        cursor: 'pointer',\n        height: 'calc(100vh - 50em)',\n        padding: `${theme.spacing.unit * 2}px 0px`,\n        position: 'relative',\n        textAlign: 'center',\n        width: '80%',\n        margin: '10px 0',\n    },\n    dropZoneWrapper: {\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& span': {\n            fontSize: 16,\n            color: theme.palette.primary.main,\n        },\n    },\n});\n/**\n * The component to manage IN mediation policies.\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nfunction EditOutMediationPolicy(props) {\n    const {\n        classes, api, updateMediationPolicy,\n    } = props;\n    const [globalOutMediationPolicies, setGlobalOutMediationPolicies] = useState([]);\n    // user uploaded api specific mediation policies\n    const [outSeqCustom, setOutSeqCustom] = useState([]);\n    const { id } = api;\n    const type = 'OUT';\n    const NONE = 'none';\n    const selectedPolicy = api.mediationPolicies.filter(seq => seq.type === type)[0];\n    const [selectedPolicyFile, setSelectedPolicyFile] = useState({\n        id: selectedPolicy !== (null || undefined) ? selectedPolicy.id : '',\n        name: selectedPolicy !== (null || undefined) ? selectedPolicy.name : '',\n        type: selectedPolicy !== (null || undefined) ? selectedPolicy.type : '',\n        content: {},\n    });\n    useEffect(() => {\n        if (globalOutMediationPolicies.length <= 0) {\n            API.getGlobalMediationPolicies()\n                .then((response) => {\n                    setGlobalOutMediationPolicies([...response.obj.list.filter(seq => seq.type === type)]);\n                })\n                .catch((error) => {\n                    if (process.env.NODE_ENV !== 'production') {\n                        console.log(error);\n                        Alert.error(<FormattedMessage\n                            id='Apis.Details.MediationPolicies.Edit.EditOutMediationPolicy.global.error'\n                            defaultMessage='Error retrieving Global mediation policies'\n                        />);\n                    }\n                });\n        }\n        API.getMediationPolicies(id)\n            .then((response) => {\n                setOutSeqCustom([...response.obj.list.filter(seq => seq.type === type)]);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(<FormattedMessage\n                        id='Apis.Details.MediationPolicies..Edit.EditOutMediationPolicy.custom.error'\n                        defaultMessage='Error retrieving mediation policies'\n                    />);\n                }\n            });\n    }, [selectedPolicyFile]);\n    const saveMediationPolicy = (newPolicy) => {\n        const promisedApi = API.addMediationPolicy(newPolicy, api.id, type);\n        promisedApi.then(() => {\n            Alert.info(FormattedMessage({\n                id: 'Apis.Details.MediationPolicies.MediationPoliciesComponente.success',\n                defaultMessage: 'Mediation policy added successfully',\n            }));\n        }).catch((errorResponse) => {\n            console.log(errorResponse);\n            Alert.error(JSON.stringify(errorResponse));\n        });\n    };\n    /**\n     * Handled the file upload action of the dropzone.\n     * @param {file} policy The accepted file list by the dropzone.\n     * */\n    const onDrop = (policy) => {\n        const policyFile = policy[0];\n        if (policyFile) {\n            saveMediationPolicy(policyFile);\n            setSelectedPolicyFile({ name: policyFile.name, content: policyFile });\n        }\n    };\n\n    /**\n    * Handles the mediatio n policy select event.\n    * @param {any} event The event pass to the layout\n    */\n    function handleChange(event) {\n        const policy = event.target;\n        if (policy.name !== NONE) {\n            setSelectedPolicyFile({\n                id: policy.name, name: policy.value, type, content: '',\n            });\n            updateMediationPolicy({\n                id: policy.name, name: policy.value, type, content: '',\n            });\n        } else {\n            setSelectedPolicyFile({\n                id: NONE, name: policy.value, type, content: '',\n            });\n            updateMediationPolicy({\n                id: NONE, name: policy.value, type, content: '',\n            });\n        }\n    }\n    /**\n    * Handles the Global mediation policy download.\n    * @param {any} policyToDownload policy file id that is to be downloaded.\n    */\n    function downloadGlobalMediationPolicyContent(policyToDownload) {\n        const promisedGetContent = API.getGlobalMediationPolicyContent(policyToDownload, api.id);\n        promisedGetContent\n            .then((done) => {\n                Download.downloadFile(done, document);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(<FormattedMessage\n                        id='Apis.Details.MediationPolicies.MediationPoliciesComponent.download.error'\n                        defaultMessage='Error downloading the file'\n                    />);\n                }\n            });\n    }\n\n    /**\n    * Handles the custom mediation policy download.\n    * @param {any} policyToDownload policy file id that is to be downloaded.\n    */\n    function downloadCustomMediationPolicyContent(policyToDownload) {\n        const promisedGetContent = API.getMediationPolicyContent(policyToDownload, api.id);\n        promisedGetContent\n            .then((done) => {\n                Download.downloadFile(done, document);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(<FormattedMessage\n                        id='Apis.Details.MediationPolicies.MediationPoliciesComponent.download.error'\n                        defaultMessage='Error downloading the file'\n                    />);\n                }\n            });\n    }\n    /**\n    * Handles the custom mediation policy delete.\n    * @param {any} policyToDelete policy file id that is to be deleted.\n    */\n    function deleteCustomMediationPolicy(policyToDelete) {\n        const promisedGetContent = API.deleteMediationPolicy(policyToDelete, api.id);\n        promisedGetContent\n            .then(() => {\n                Alert.info(<FormattedMessage\n                    id='Apis.Details.MediationPolicies.Edit.EditOutMediationPolicy.delete.success'\n                    defaultMessage='Mediation policy deleted successfully.'\n                />);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(<FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditOutMediationPolicy.delete.error'\n                        defaultMessage='Error deleting the file'\n                    />);\n                }\n            });\n    }\n    const handleDownload = (policyToDownload) => {\n        const isGlobalMediationPolicy = globalOutMediationPolicies.filter(policy => policy.id === policyToDownload)\n            .length > 0;\n        if (isGlobalMediationPolicy) {\n            downloadGlobalMediationPolicyContent(policyToDownload);\n        } else {\n            downloadCustomMediationPolicyContent(policyToDownload);\n        }\n    };\n    const handleDelete = (policyToDelete) => {\n        const isGlobalMediationPolicy = globalOutMediationPolicies.filter(policy => policy.id === policyToDelete)\n            .length > 0;\n        if (isGlobalMediationPolicy) {\n            setOutSeqCustom(outSeqCustom.filter(seq => seq.id !== policyToDelete));\n            Alert.error(<FormattedMessage\n                id='Apis.Details.MediationPolicies.Edit.EditOutMediationPolicy.global.delete'\n                defaultMessage='Cannot delete Global mediation policies.'\n            />);\n        } else {\n            deleteCustomMediationPolicy(policyToDelete);\n        }\n    };\n    return (\n        <FormControl className={classes.formControl}>\n            <div className={classes.titleWrapper}>\n                <Dropzone\n                    multiple={false}\n                    className={classes.dropzone}\n                    activeClassName={classes.acceptDrop}\n                    rejectClassName={classes.rejectDrop}\n                    onDrop={(dropFile) => {\n                        onDrop(dropFile);\n                    }}\n                >\n                    {({ getRootProps, getInputProps }) => (\n                        <div {...getRootProps({ style: dropzoneStyles })}>\n                            <input {...getInputProps()} />\n                            <div className={classes.dropZoneWrapper}>\n                                <Icon className={classes.dropIcon}>cloud_upload</Icon>\n                                <Typography>\n                                    <FormattedMessage\n                                        id={'Apis.Details.MediationPolicies.Edit.EditOutMediationPolicy.'\n                                            + 'click.or.drop.to.upload.file'}\n                                        defaultMessage='Click or drag the mediation file to upload.'\n                                    />\n                                </Typography>\n                            </div>\n                        </div>\n                    )}\n                </Dropzone>\n                <RadioGroup\n                    aria-label='outflow'\n                    name='outflow'\n                    className={classes.radioGroup}\n                    value={selectedPolicyFile.name}\n                    onChange={handleChange}\n                >\n                    <FormLabel component='customPolicies'>\n                        <FormattedMessage\n                            id='Apis.Details.Edit.MediationPolicies.EditOutMediationPolicies.custom.out.policies'\n                            defaultMessage='Custom OUT Mediation Policies'\n                        />\n                    </FormLabel>\n                    {outSeqCustom.map(seq => (\n                        <div>\n                            <IconButton onClick={() => handleDelete(seq.id)}>\n                                <Icon>delete</Icon>\n                            </IconButton>\n                            <Button onClick={() => handleDownload(seq.id)}>\n                                <Icon>arrow_downward</Icon>\n                            </Button>\n                            <FormControlLabel\n                                name={seq.id}\n                                type={seq.type}\n                                control={<Radio />}\n                                label={<FormattedMessage\n                                    id='Apis.Details.Edit.MediationPolicies.EditOutMediationPolicies.custom.out.policy'\n                                    defaultMessage={seq.name}\n                                />}\n                                value={seq.name}\n                                checked={selectedPolicyFile.name === seq.name}\n                            />\n                        </div>\n                    ))}\n                    <FormControlLabel\n                        name={NONE}\n                        type='out'\n                        control={<Radio />}\n                        label={<FormattedMessage\n                            id='Apis.Details.MediationPolicies.Edit.EditOutMediationPolicies.none'\n                            defaultMessage='No Mediation'\n                        />}\n                        value={NONE}\n                        checked={selectedPolicyFile.name === NONE || selectedPolicyFile.name === ''}\n                    />\n                    <FormLabel component='globalPolicies'>\n                        <FormattedMessage\n                            id='Apis.Details.Edit.MediationPolicies.EditOutMediationPolicies.global.out.policies'\n                            defaultMessage='Global OUT Mediation Policies'\n                        />\n                    </FormLabel>\n                    {globalOutMediationPolicies.map(seq => (\n                        <div>\n                            <Button onClick={() => handleDownload(seq.id)}>\n                                <Icon>arrow_downward</Icon>\n                            </Button>\n                            <FormControlLabel\n                                name={seq.id}\n                                type={seq.type}\n                                control={<Radio />}\n                                label={<FormattedMessage\n                                    id='Apis.Details.Edit.MediationPolicies.EditOutMediationPolicies.global.out.policy'\n                                    defaultMessage={seq.name}\n                                />}\n                                value={seq.name}\n                                checked={selectedPolicyFile.name === seq.name}\n                            />\n                        </div>\n                    ))}\n                </RadioGroup>\n            </div>\n        </FormControl>\n    );\n}\nEditOutMediationPolicy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    engagedPolicyFile: PropTypes.shape({}).isRequired,\n    type: PropTypes.shape({}).isRequired,\n    updateMediationPolicy: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(EditOutMediationPolicy);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage } from 'react-intl';\n\nconst styles = theme => ({\n    FormControl: {\n        padding: 10,\n        width: '100%',\n        marginTop: 0,\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    buttonWrapper: {\n        paddingTop: 20,\n    },\n    paperRoot: {\n        padding: 20,\n        marginTop: 20,\n    },\n    formControl: {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: `${theme.spacing.unit * 2}px 2px`,\n    },\n    itemWrapper: {\n        width: 500,\n    },\n});\n/**\n * The base component of the engaged mediation policy  view.\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nfunction EngagedOutMediationPolicy(props) {\n    const { handleInputChange, classes, engagedPolicyFile } = props;\n\n    return (\n        <div className={classes.itemWrapper}>\n            <TextField\n                style={{\n                    width: '100%',\n                }}\n                id='outFlow'\n                name='Out Flow'\n                helperText={<FormattedMessage\n                    id='Apis.Details.MediationPolicies.Engaged.EngagedMediationPolicies.out.flow.helper.text'\n                    defaultMessage='mediation policy that is engaged in Response Flow'\n                />}\n                margin='normal'\n                type='text'\n                onChange={handleInputChange}\n                value={engagedPolicyFile.name}\n            />\n        </div>\n    );\n}\nEngagedOutMediationPolicy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    engagedPlicyFile: PropTypes.shape({}).isRequired,\n    handleInputChange: PropTypes.func.isRequired,\n    engagedPolicyFile: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(EngagedOutMediationPolicy);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\n// import TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { FormattedMessage } from 'react-intl';\nimport { withStyles, Switch, FormControlLabel } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport API from 'AppData/api.js';\nimport Alert from 'AppComponents/Shared/Alert';\nimport EditOutMediationPolicy from './Edit/EditOutMediationPolicy';\nimport EngagedOutMediationPolicy from './Engaged/EngagedOutMediationPolicy';\n\nconst styles = {\n    content: {\n        flexGrow: 1,\n    },\n    itemWrapper: {\n        width: 500,\n    },\n};\n/**\n * The base component of the mediation policy view.\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nfunction OutFlow(props) {\n    const { api, classes, updateMediationPolicy } = props;\n    const { mediationPolicies } = api;\n    const type = 'OUT';\n    const outMediationPolicy = mediationPolicies.filter(seq => seq.type === type)[0];\n    const [engagedPolicyFile, setEngagedPolicyFile] = useState({\n        id: outMediationPolicy !== (null || undefined) ? outMediationPolicy.id : '',\n        name: outMediationPolicy !== (null || undefined) ? outMediationPolicy.name : '',\n        type: outMediationPolicy !== (null || undefined) ? outMediationPolicy.type : '',\n        content: {},\n    });\n    const [editable, setEditable] = useState(false);\n    const handleInputChange = (event) => {\n        const policy = event.target.value;\n        setEngagedPolicyFile(policy);\n    };\n    const handleToggleOutFlowEdit = (event) => {\n        const isEditable = event.target.checked;\n        setEditable(isEditable);\n    };\n    useEffect(() => {\n        if (!editable) {\n            API.get(api.id).then((response) => {\n                const outPolicy = response.mediationPolicies.filter(seq => seq.type === type)[0];\n                setEngagedPolicyFile({\n                    id: outPolicy !== (null || undefined) ? outPolicy.id : '',\n                    name: outPolicy !== (null || undefined) ? outPolicy.name : '',\n                    type: outPolicy !== (null || undefined) ? outPolicy.type : '',\n                    content: {},\n                });\n            }).catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(<FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditOutMediationPolicy.global.error'\n                        defaultMessage='Error retrieving API mediation policies'\n                    />);\n                }\n            });\n        }\n    }, [editable]);\n    return (\n        <FormControl className={classes.formControl}>\n            <FormControlLabel\n                value='start'\n                checked={editable}\n                control={<Switch color='primary' />}\n                label={<FormattedMessage\n                    id='Apis.Details.MediationPolicies.out.flow.desc'\n                    defaultMessage='Out Flow'\n                />}\n                labelPlacement='start'\n                onChange={handleToggleOutFlowEdit}\n            />\n            {!editable ? (\n                <EngagedOutMediationPolicy\n                    engagedPolicyFile={engagedPolicyFile}\n                    handleInputChange={handleInputChange}\n                    api={api}\n                />\n            )\n                : (\n                    <div className={classes.itemWrapper}>\n                        <EditOutMediationPolicy\n                            handleInputChange={handleInputChange}\n                            engagedPolicyFile={engagedPolicyFile}\n                            api={api}\n                            updateMediationPolicy={updateMediationPolicy}\n                        />\n                    </div>\n                )}\n        </FormControl>\n    );\n}\nOutFlow.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    updateMediationPolicy: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(OutFlow);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage } from 'react-intl';\n\nconst styles = theme => ({\n    FormControl: {\n        padding: 10,\n        width: '100%',\n        marginTop: 0,\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    buttonWrapper: {\n        paddingTop: 20,\n    },\n    paperRoot: {\n        padding: 20,\n        marginTop: 20,\n    },\n    formControl: {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: `${theme.spacing.unit * 2}px 2px`,\n    },\n    itemWrapper: {\n        width: 500,\n    },\n});\n/**\n * The base component of the engaged mediation policy  view.\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nfunction EngagedFaultMediationPolicy(props) {\n    const { handleInputChange, classes, engagedPolicyFile } = props;\n\n    return (\n        <div className={classes.itemWrapper}>\n            <TextField\n                style={{\n                    width: '100%',\n                }}\n                id='faultFlow'\n                name='Fault Flow'\n                helperText={<FormattedMessage\n                    id='Apis.Details.MediationPolicies.Engaged.EngagedFaultMediationPolicies.fault.flow.helper.text'\n                    defaultMessage='mediation policy that is engaged in Fault Flow'\n                />}\n                margin='normal'\n                type='text'\n                onChange={handleInputChange}\n                value={engagedPolicyFile.name}\n            />\n        </div>\n    );\n}\nEngagedFaultMediationPolicy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    engagedPlicyFile: PropTypes.shape({}).isRequired,\n    handleInputChange: PropTypes.func.isRequired,\n    engagedPolicyFile: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(EngagedFaultMediationPolicy);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dropzone from 'react-dropzone';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Download from 'AppComponents/Shared/Download.js';\nimport API from 'AppData/api.js';\n\nconst dropzoneStyles = {\n    border: '1px dashed ',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    height: 75,\n    padding: '8px 0px',\n    position: 'relative',\n    textAlign: 'center',\n    width: '100%',\n    margin: '10px 0',\n};\nconst styles = theme => ({\n    formControl: {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: `${theme.spacing.unit * 2}px 2px`,\n    },\n    dropzone: {\n        border: '1px dashed ' + theme.palette.primary.main,\n        borderRadius: '5px',\n        cursor: 'pointer',\n        height: 'calc(100vh - 50em)',\n        padding: `${theme.spacing.unit * 2}px 0px`,\n        position: 'relative',\n        textAlign: 'center',\n        width: '80%',\n        margin: '10px 0',\n    },\n    dropZoneWrapper: {\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& span': {\n            fontSize: 16,\n            color: theme.palette.primary.main,\n        },\n    },\n});\n/**\n * The component to manage IN mediation policies.\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nfunction EditFaultMediationPolicy(props) {\n    const {\n        classes, api, updateMediationPolicy,\n    } = props;\n    const [globalFaultMediationPolicies, setGlobalFaultMediationPolicies] = useState([]);\n    // user uploaded api specific mediation policies\n    const [faultSeqCustom, setFaultSeqCustom] = useState([]);\n    const { id } = api;\n    const type = 'FAULT';\n    const NONE = 'none';\n    const selectedPolicy = api.mediationPolicies.filter(seq => seq.type === type)[0];\n    const [selectedPolicyFile, setSelectedPolicyFile] = useState({\n        id: selectedPolicy ? selectedPolicy.id : '',\n        name: selectedPolicy ? selectedPolicy.name : '',\n        type: selectedPolicy ? selectedPolicy.type : '',\n        content: {},\n    });\n    useEffect(() => {\n        if (globalFaultMediationPolicies.length <= 0) {\n            API.getGlobalMediationPolicies()\n                .then((response) => {\n                    setGlobalFaultMediationPolicies([...response.obj.list.filter(seq => seq.type === type)]);\n                })\n                .catch((error) => {\n                    if (process.env.NODE_ENV !== 'production') {\n                        console.log(error);\n                        Alert.error(<FormattedMessage\n                            id='Apis.Details.MediationPolicies.Edit.EditFaultMediationPolicy.global.error'\n                            defaultMessage='Error retrieving Global mediation policies'\n                        />);\n                    }\n                });\n        }\n        API.getMediationPolicies(id)\n            .then((response) => {\n                setFaultSeqCustom([...response.obj.list.filter(seq => seq.type === type)]);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(<FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditFaultMediationPolicy.custom.error'\n                        defaultMessage='Error retrieving mediation policies'\n                    />);\n                }\n            });\n    }, [selectedPolicyFile]);\n    const saveMediationPolicy = (newPolicy) => {\n        const promisedApi = API.addMediationPolicy(newPolicy, api.id, type);\n        promisedApi.then(() => {\n            Alert.info(FormattedMessage({\n                id: 'Apis.Details.MediationPolicies.Edit.EditFaultMediationPolicy.success',\n                defaultMessage: 'Mediation policy added successfully',\n            }));\n        }).catch((errorResponse) => {\n            console.log(errorResponse);\n            Alert.error(JSON.stringify(errorResponse));\n        });\n    };\n    /**\n     * Handled the file upload action of the dropzone.\n     * @param {file} policy The accepted file list by the dropzone.\n     * */\n    const onDrop = (policy) => {\n        const policyFile = policy[0];\n        if (policyFile) {\n            saveMediationPolicy(policyFile);\n            setSelectedPolicyFile({ name: policyFile.name, content: policyFile });\n        }\n    };\n\n    /**\n    * Handles the mediatio n policy select event.\n    * @param {any} event The event pass to the layout\n    */\n    function handleChange(event) {\n        const policy = event.target;\n        if (policy.name !== NONE) {\n            setSelectedPolicyFile({\n                id: policy.name, name: policy.value, type, content: '',\n            });\n            updateMediationPolicy({\n                id: policy.name, name: policy.value, type, content: '',\n            });\n        } else {\n            setSelectedPolicyFile({\n                id: NONE, name: policy.value, type, content: '',\n            });\n            updateMediationPolicy({\n                id: NONE, name: policy.value, type, content: '',\n            });\n        }\n    }\n    /**\n    * Handles the Global mediation policy download.\n    * @param {any} policyToDownload policy file id that is to be downloaded.\n    */\n    function downloadGlobalMediationPolicyContent(policyToDownload) {\n        const promisedGetContent = API.getGlobalMediationPolicyContent(policyToDownload, api.id);\n        promisedGetContent\n            .then((done) => {\n                Download.downloadFile(done, document);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(<FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditFaultMediationPolicy.download.error'\n                        defaultMessage='Error downloading the file'\n                    />);\n                }\n            });\n    }\n\n    /**\n    * Handles the custom mediation policy download.\n    * @param {any} policyToDownload policy file id that is to be downloaded.\n    */\n    function downloadCustomMediationPolicyContent(policyToDownload) {\n        const promisedGetContent = API.getMediationPolicyContent(policyToDownload, api.id);\n        promisedGetContent\n            .then((done) => {\n                Download.downloadFile(done, document);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(<FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditFaultMediationPolicy.download.error'\n                        defaultMessage='Error downloading the file'\n                    />);\n                }\n            });\n    }\n    /**\n    * Handles the custom mediation policy delete.\n    * @param {any} policyToDelete policy file id that is to be deleted.\n    */\n    function deleteCustomMediationPolicy(policyToDelete) {\n        const promisedGetContent = API.deleteMediationPolicy(policyToDelete, api.id);\n        promisedGetContent\n            .then(() => {\n                setFaultSeqCustom(faultSeqCustom.filter(seq => seq.id !== policyToDelete));\n                Alert.info(<FormattedMessage\n                    id='Apis.Details.MediationPolicies.Edit.EditFaultMediationPolicy.delete.success'\n                    defaultMessage='Mediation policy deleted successfully.'\n                />);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(<FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditFaultMediationPolicy.delete.error'\n                        defaultMessage='Error deleting the file'\n                    />);\n                }\n            });\n    }\n    const handleDownload = (policyToDownload) => {\n        const isGlobalMediationPolicy =\n        globalFaultMediationPolicies.filter(policy => policy.id === policyToDownload).length > 0;\n        if (isGlobalMediationPolicy) {\n            downloadGlobalMediationPolicyContent(policyToDownload);\n        } else {\n            downloadCustomMediationPolicyContent(policyToDownload);\n        }\n    };\n    const handleDelete = (policyToDelete) => {\n        const isGlobalMediationPolicy = globalFaultMediationPolicies.filter(policy => policy.id === policyToDelete)\n            .length > 0;\n        if (isGlobalMediationPolicy) {\n            Alert.error(<FormattedMessage\n                id='Apis.Details.MediationPolicies.Edit.EditFaultMediationPolicy.global.delete'\n                defaultMessage='Cannot delete Global mediation policies.'\n            />);\n        } else {\n            deleteCustomMediationPolicy(policyToDelete);\n        }\n    };\n    return (\n        <FormControl className={classes.formControl}>\n            <div className={classes.titleWrapper}>\n                <Dropzone\n                    multiple={false}\n                    className={classes.dropzone}\n                    activeClassName={classes.acceptDrop}\n                    rejectClassName={classes.rejectDrop}\n                    onDrop={(dropFile) => {\n                        onDrop(dropFile);\n                    }}\n                >\n                    {({ getRootProps, getInputProps }) => (\n                        <div {...getRootProps({ style: dropzoneStyles })}>\n                            <input {...getInputProps()} />\n                            <div className={classes.dropZoneWrapper}>\n                                <Icon className={classes.dropIcon}>cloud_upload</Icon>\n                                <Typography>\n                                    <FormattedMessage\n                                        id={'Apis.Details.MediationPolicies.Edit.EditFaultMediationPolicy.'\n                                            + 'click.or.drop.to.upload.file'}\n                                        defaultMessage='Click or drag the mediation file to upload.'\n                                    />\n                                </Typography>\n                            </div>\n                        </div>\n                    )}\n                </Dropzone>\n                <RadioGroup\n                    aria-label='faultflow'\n                    name='faultflow'\n                    className={classes.radioGroup}\n                    value={selectedPolicyFile.name}\n                    onChange={handleChange}\n                >\n                    <FormLabel component='customPolicies'>\n                        <FormattedMessage\n                            id='Apis.Details.Edit.MediationPolicies.EditFaultMediationPolicies.custom.fault.policies'\n                            defaultMessage='Custom Fault Mediation Policies'\n                        />\n                    </FormLabel>\n                    {faultSeqCustom.map(seq => (\n                        <div>\n                            <IconButton onClick={() => handleDelete(seq.id)}>\n                                <Icon>delete</Icon>\n                            </IconButton>\n                            <Button onClick={() => handleDownload(seq.id)}>\n                                <Icon>arrow_downward</Icon>\n                            </Button>\n                            <FormControlLabel\n                                name={seq.id}\n                                type={seq.type}\n                                control={<Radio />}\n                                label={<FormattedMessage\n                                    id={'Apis.Details.Edit.MediationPolicies.EditFaultMediationPolicies.custom' +\n                                    '.fault.policy'}\n                                    defaultMessage={seq.name}\n                                />}\n                                value={seq.name}\n                                checked={selectedPolicyFile.name === seq.name}\n                            />\n                        </div>\n                    ))}\n                    <FormControlLabel\n                        name={NONE}\n                        type={type}\n                        control={<Radio />}\n                        label={<FormattedMessage\n                            id='Apis.Details.Edit.MediationPolicies.EditFaultMediationPolicies.none'\n                            defaultMessage='No Mediation'\n                        />}\n                        value={NONE}\n                        checked={selectedPolicyFile.name === NONE || selectedPolicyFile.name === ''}\n                    />\n                    <FormLabel component='globalPolicies'>\n                        <FormattedMessage\n                            id='Apis.Details.Edit.MediationPolicies.EditFaultMediationPolicies.global.fault.policies'\n                            defaultMessage='Global FAULT Mediation Policies'\n                        />\n                    </FormLabel>\n                    {globalFaultMediationPolicies.map(seq => (\n                        <div>\n                            <Button onClick={() => handleDownload(seq.id)}>\n                                <Icon>arrow_downward</Icon>\n                            </Button>\n                            <FormControlLabel\n                                name={seq.id}\n                                type={seq.type}\n                                control={<Radio />}\n                                label={<FormattedMessage\n                                    id={'Apis.Details.Edit.MediationPolicies.EditFaultMediationPolicies.global' +\n                                        '.fault.policy'}\n                                    defaultMessage={seq.name}\n                                />}\n                                value={seq.name}\n                                checked={selectedPolicyFile.name === seq.name}\n                            />\n                        </div>\n                    ))}\n                </RadioGroup>\n            </div>\n        </FormControl>\n    );\n}\nEditFaultMediationPolicy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    engagedPolicyFile: PropTypes.shape({}).isRequired,\n    type: PropTypes.shape({}).isRequired,\n    updateMediationPolicy: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(EditFaultMediationPolicy);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport { FormattedMessage } from 'react-intl';\nimport { withStyles, Switch, FormControlLabel } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport API from 'AppData/api.js';\nimport Alert from 'AppComponents/Shared/Alert';\nimport EngagedFaultMediationPolicy from './Engaged/EngagedFaultMediationPolicy';\nimport EditFaultMediationPolicy from './Edit/EditFaultMediationPolicy';\n\nconst styles = {\n    content: {\n        flexGrow: 1,\n    },\n    itemWrapper: {\n        width: 500,\n    },\n};\n\n/**\n * The base component of the mediation policy view.\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nfunction FaultFlow(props) {\n    const { api, classes, updateMediationPolicy } = props;\n    const { mediationPolicies } = api;\n    const type = 'FAULT';\n    const faultMediationPolicy = mediationPolicies.filter(seq => seq.type === type)[0];\n    const [engagedPolicyFile, setEngagedPolicyFile] = useState({\n        id: faultMediationPolicy !== (null || undefined) ? faultMediationPolicy.id : '',\n        name: faultMediationPolicy !== (null || undefined) ? faultMediationPolicy.name : '',\n        type: faultMediationPolicy !== (null || undefined) ? faultMediationPolicy.type : '',\n        content: {},\n    });\n    const [editable, setEditable] = useState(false);\n\n    const handleInputChange = (event) => {\n        const policy = event.target.value;\n        setEngagedPolicyFile(policy);\n    };\n    const handleToggleFaultFlowEdit = (event) => {\n        const isEditable = event.target.checked;\n        setEditable(isEditable);\n    };\n    useEffect(() => {\n        if (!editable) {\n            API.get(api.id).then((response) => {\n                const faultPolicy = response.mediationPolicies.filter(seq => seq.type === type)[0];\n                setEngagedPolicyFile({\n                    id: faultPolicy !== (null || undefined) ? faultPolicy.id : '',\n                    name: faultPolicy !== (null || undefined) ? faultPolicy.name : '',\n                    type: faultPolicy !== (null || undefined) ? faultPolicy.type : '',\n                    content: {},\n                });\n            }).catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(<FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditOutMediationPolicy.global.error'\n                        defaultMessage='Error retrieving API mediation policies'\n                    />);\n                }\n            });\n        }\n    }, [editable]);\n    return (\n        <FormControl className={classes.formControl}>\n            <FormControlLabel\n                value='start'\n                checked={editable}\n                control={<Switch color='primary' />}\n                label={<FormattedMessage\n                    id='Apis.Details.MediationPolicies.MediationPolicies.fault.flow.desc'\n                    defaultMessage='Fault Flow'\n                />}\n                labelPlacement='start'\n                onChange={handleToggleFaultFlowEdit}\n            />\n            {!editable ? (\n                <EngagedFaultMediationPolicy\n                    engagedPolicyFile={engagedPolicyFile}\n                    handleInputChange={handleInputChange}\n                    api={api}\n                />\n            )\n                : (\n                    <div className={classes.itemWrapper}>\n                        <EditFaultMediationPolicy\n                            handleInputChange={handleInputChange}\n                            engagedPolicyFile={engagedPolicyFile}\n                            api={api}\n                            updateMediationPolicy={updateMediationPolicy}\n                        />\n                    </div>\n                )}\n        </FormControl>\n    );\n}\nFaultFlow.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    updateMediationPolicy: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(FaultFlow);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n * The base component of the endpoints view.\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nimport React, { useState } from 'react';\nimport { Grid } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport Alert from 'AppComponents/Shared/Alert';\nimport isEmpty from 'lodash/isEmpty';\nimport InFlow from './InFlow';\nimport OutFlow from './OutFlow';\nimport FaultFlow from './FaultFlow';\n\nconst styles = theme => ({\n\n    buttonWrapper: {\n        paddingTop: 20,\n    },\n    paperRoot: {\n        padding: 20,\n        marginTop: 20,\n        display: 'flex',\n    },\n    formControl: {\n        flexDirection: 'row',\n        padding: `${theme.spacing.unit * 2}px 2px`,\n    },\n    itemWrapper: {\n        width: 500,\n    },\n});\n/**\n * The base component of the mediation policy view.\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nfunction Overview(props) {\n    const { classes, api } = props;\n    const inFlowMediationPolicy = (api.mediationPolicies.filter(seq => seq.type === 'IN')[0]);\n    const outFlowMediationPolicy = (api.mediationPolicies.filter(seq => seq.type === 'OUT')[0]);\n    const faultFlowMediationPolicy = (api.mediationPolicies.filter(seq => seq.type === 'FAULT')[0]);\n    const [inPolicyName, setInPolicyName] = useState(inFlowMediationPolicy !== (null || undefined) ?\n        { id: inFlowMediationPolicy.id, name: inFlowMediationPolicy.name, type: inFlowMediationPolicy.type } : {});\n    const [outPolicyName, setOutPolicyName] = useState(outFlowMediationPolicy !== (null || undefined) ?\n        { id: outFlowMediationPolicy.id, name: outFlowMediationPolicy.name, type: outFlowMediationPolicy.type } : {});\n    const [faultPolicyName, setFaultPolicyName] = useState(faultFlowMediationPolicy !== (null || undefined) ?\n        { id: faultFlowMediationPolicy.id, name: faultFlowMediationPolicy.name, type: faultFlowMediationPolicy.type } :\n        {});\n    const NONE = 'none';\n    const mediationPolicies = [];\n    if (!(isEmpty(inPolicyName) || inPolicyName.name === NONE)) {\n        mediationPolicies.push(inPolicyName);\n    }\n    if (!(isEmpty(outPolicyName) || outPolicyName.name === NONE)) {\n        mediationPolicies.push(outPolicyName);\n    }\n    if (!(isEmpty(faultPolicyName) || faultPolicyName.name === NONE)) {\n        mediationPolicies.push(faultPolicyName);\n    }\n\n    /**\n     * Method to update the api.\n     *\n     * @param {function} updateAPI The api update function.\n     */\n    const saveAPI = (updateAPI) => {\n        const promisedApi = api.get(api.id);\n        promisedApi\n            .then((getResponse) => {\n                const apiData = getResponse.body;\n                apiData.mediationPolicies = mediationPolicies;\n                updateAPI(apiData);\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                Alert.error('Error occurred while retrieving API to save mediation policies');\n            });\n    };\n    const updateInMediationPolicy = (policies) => {\n        setInPolicyName({ id: policies.id, name: policies.name, type: policies.type });\n    };\n    const updateOutMediationPolicy = (policies) => {\n        setOutPolicyName({ id: policies.id, name: policies.name, type: policies.type });\n    };\n    const updateFaultMediationPolicy = (policies) => {\n        setFaultPolicyName({ id: policies.id, name: policies.name, type: policies.type });\n    };\n    return (\n        <div >\n            <div className={classes.titleWrapper}>\n                <Typography variant='h4' align='left' className={classes.mainTitle}>\n                    <FormattedMessage\n                        id='Apis.Details.MediationPolicies.MediationPolicies'\n                        defaultMessage='Message Mediation Policies'\n                    />\n                </Typography>\n            </div>\n            <ApiContext.Consumer>\n                {({ updateAPI }) => (\n                    <div className={classes.formControl}>\n                        <Grid\n                            container\n                            spacing={12}\n                        >\n                            <Grid item xs={12}>\n                                <Paper className={classes.paperRoot} elevation={1}>\n                                    <InFlow api={api} updateMediationPolicy={updateInMediationPolicy} />\n                                    <OutFlow api={api} updateMediationPolicy={updateOutMediationPolicy} />\n                                    <FaultFlow api={api} updateMediationPolicy={updateFaultMediationPolicy} />\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                        <Grid\n                            container\n                            direction='row'\n                            alignItems='flex-start'\n                            spacing={16}\n                            className={classes.buttonSection}\n                        >\n                            <Grid item>\n                                <div>\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        onClick={() => saveAPI(updateAPI)}\n                                    >\n                                        <FormattedMessage id='save' defaultMessage='Save' />\n                                    </Button>\n                                </div>\n                            </Grid>\n                            <Grid item>\n                                <Link to={'/apis/' + api.id + '/overview'}>\n                                    <Button>\n                                        <FormattedMessage id='cancel' defaultMessage='Cancel' />\n                                    </Button>\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </div>\n\n                )}\n            </ApiContext.Consumer>\n        </div>\n    );\n}\nOverview.propTypes = {\n    classes: PropTypes.shape({\n        root: PropTypes.shape({}),\n        buttonSection: PropTypes.shape({}),\n        endpointTypesWrapper: PropTypes.shape({}),\n        mainTitle: PropTypes.shape({}),\n    }).isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(Overview);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage } from 'react-intl';\nimport FormControl from '@material-ui/core/FormControl';\nimport API from 'AppData/api.js';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst styles = theme => ({\n    FormControl: {\n        padding: 0,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormControlOdd: {\n        padding: 0,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    buttonWrapper: {\n        paddingTop: 20,\n    },\n    paperRoot: {\n        padding: 20,\n        marginTop: 20,\n    },\n});\n\n/**\n *\n *\n * @class BusinessInformation\n * @extends {React.Component}\n */\nclass BusinessInformation extends React.Component {\n    /**\n     *Creates an instance of BusinessInformation.\n     * @param {*} props\n     * @memberof BusinessInformation\n     */\n    constructor(props) {\n        super(props);\n        const {\n            businessOwner,\n            businessOwnerEmail,\n            technicalOwner,\n            technicalOwnerEmail,\n        } = this.props.api.businessInformation;\n        this.state = {\n            businessOwner,\n            businessOwnerEmail,\n            technicalOwner,\n            technicalOwnerEmail,\n        };\n    }\n\n    handleChange = name => (event) => {\n        let { value } = event.target;\n        const { checked } = event.target;\n        if (name === 'accessControlRoles' || name === 'visibleRoles') {\n            value = value.split(',');\n        } else if (name === 'isDefaultVersion') {\n            value = value === 'yes';\n        } else if (name === 'responseCaching') {\n            value = checked ? 'Enabled' : 'Disabled';\n        }\n        this.setState({\n            [name]: value,\n        });\n    };\n\n    /**\n     *\n     *\n     * @param {*} oldAPI\n     * @param {*} updateAPI\n     * @memberof BusinessInformation\n     */\n    handleSubmit(updateAPI) {\n        const {\n            businessOwner, businessOwnerEmail, technicalOwner, technicalOwnerEmail,\n        } = this.state;\n        const businessInformation = {\n            businessOwner, businessOwnerEmail, technicalOwner, technicalOwnerEmail,\n        };\n        updateAPI({ businessInformation });\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @returns\n     * @memberof BusinessInformation\n     */\n    render() {\n        const { classes, api, updateAPI } = this.props;\n        const {\n            businessOwner, businessOwnerEmail, technicalOwner, technicalOwnerEmail,\n        } = this.state;\n\n        return (\n            <div className={classes.root}>\n                <div className={classes.titleWrapper}>\n                    <Typography variant='h4' align='left' className={classes.mainTitle}>\n                        <FormattedMessage\n                            id='Apis.Details.BusinessInformation.BusinessInformation.business.info'\n                            defaultMessage='Business Information'\n                        />\n                    </Typography>\n                </div>\n                <Grid container spacing={7}>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paperRoot} elevation={1}>\n                            <FormControl margin='normal' className={classes.FormControlOdd}>\n                                <TextField\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                    fullWidth\n                                    id='name'\n                                    label={\n                                        <FormattedMessage\n                                            id={\n                                                'Apis.Details.BusinessInformation.BusinessInformation' +\n                                                '.business.owner.name'\n                                            }\n                                            defaultMessage='Business Owner'\n                                        />\n                                    }\n                                    helperText={\n                                        <FormattedMessage\n                                            id={\n                                                'Apis.Details.BusinessInformation.BusinessInformation' +\n                                                '.business.owner.name.helper.text'\n                                            }\n                                            defaultMessage='Provide the name of the business owner'\n                                        />\n                                    }\n                                    type='text'\n                                    name='name'\n                                    margin='normal'\n                                    value={businessOwner || api.businessInformation.businessOwner}\n                                    onChange={this.handleChange('businessOwner')}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    autoFocus\n                                />\n                            </FormControl>\n                            <FormControl margin='normal' className={classes.FormControl}>\n                                <TextField\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                    fullWidth\n                                    id='name'\n                                    label={\n                                        <FormattedMessage\n                                            id={\n                                                'Apis.Details.BusinessInformation.BusinessInformation.' +\n                                                'business.owner.email'\n                                            }\n                                            defaultMessage='Business Owner Email'\n                                        />\n                                    }\n                                    helperText={\n                                        <FormattedMessage\n                                            id={\n                                                'Apis.Details.BusinessInformation.BusinessInformation' +\n                                                '.business.owner.email.helper.text'\n                                            }\n                                            defaultMessage='Provide the email of the business owner'\n                                        />\n                                    }\n                                    type='text'\n                                    name='name'\n                                    margin='normal'\n                                    value={businessOwnerEmail || api.businessInformation.businessOwnerEmail}\n                                    onChange={this.handleChange('businessOwnerEmail')}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    autoFocus\n                                />\n                            </FormControl>\n                            <FormControl margin='normal' className={classes.FormControlOdd}>\n                                <TextField\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                    fullWidth\n                                    id='name'\n                                    label={\n                                        <FormattedMessage\n                                            id={\n                                                'Apis.Details.BusinessInformation.BusinessInformation' +\n                                                '.technical.owner.name'\n                                            }\n                                            defaultMessage='Technical Owner'\n                                        />\n                                    }\n                                    helperText={\n                                        <FormattedMessage\n                                            id={\n                                                'Apis.Details.BusinessInformation.BusinessInformation' +\n                                                '.technical.owner.name.helper.text'\n                                            }\n                                            defaultMessage='Provide the name of the technical owner'\n                                        />\n                                    }\n                                    type='text'\n                                    name='name'\n                                    margin='normal'\n                                    value={technicalOwner || api.businessInformation.technicalOwner}\n                                    onChange={this.handleChange('technicalOwner')}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    autoFocus\n                                />\n                            </FormControl>\n                            <FormControl margin='normal' className={classes.FormControl}>\n                                <TextField\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                    fullWidth\n                                    id='name'\n                                    label={\n                                        <FormattedMessage\n                                            id={\n                                                'Apis.Details.BusinessInformation.BusinessInformation' +\n                                                '.technical.owner.email'\n                                            }\n                                            defaultMessage='Technical Owner Email'\n                                        />\n                                    }\n                                    helperText={\n                                        <FormattedMessage\n                                            id={\n                                                'Apis.Details.BusinessInformation.BusinessInformation' +\n                                                '.technical.owner.email.helper.text'\n                                            }\n                                            defaultMessage='Provide the email of the technical owner'\n                                        />\n                                    }\n                                    type='text'\n                                    name='name'\n                                    margin='normal'\n                                    value={technicalOwnerEmail || api.businessInformation.technicalOwnerEmail}\n                                    onChange={this.handleChange('technicalOwnerEmail')}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    autoFocus\n                                />\n                            </FormControl>\n                        </Paper>\n                        <div className={classes.buttonWrapper}>\n                            <Grid\n                                container\n                                direction='row'\n                                alignItems='flex-start'\n                                spacing={4}\n                                className={classes.buttonSection}\n                            >\n                                <Grid item>\n                                    <div>\n                                        <Button\n                                            variant='contained'\n                                            color='primary'\n                                            onClick={() => this.handleSubmit(updateAPI)}\n                                            disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                        >\n                                            <FormattedMessage id='save' defaultMessage='Save' />\n                                        </Button>\n                                    </div>\n                                </Grid>\n                                <Grid item>\n                                    <Link\n                                        to={\n                                            (api.apiType === API.CONSTS.APIProduct ? '/api-products/' : '/apis/') +\n                                            api.id +\n                                            '/overview'\n                                        }\n                                    >\n                                        <Button>\n                                            <FormattedMessage id='cancel' defaultMessage='Cancel' />\n                                        </Button>\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nBusinessInformation.propTypes = {\n    state: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        businessInformation: PropTypes.shape({\n            businessOwner: PropTypes.string,\n            businessOwnerEmail: PropTypes.string,\n            technicalOwner: PropTypes.string,\n            technicalOwnerEmail: PropTypes.string,\n            apiType: PropTypes.oneOf([API.CONSTS.API, API.CONSTS.APIProduct]),\n        }).isRequired,\n    }).isRequired,\n    updateAPI: PropTypes.func.isRequired,\n};\n\nexport default withAPI(withStyles(styles)(BusinessInformation));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n/* eslint-disable react/jsx-no-bind */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { injectIntl } from 'react-intl';\n\nconst useStyles = makeStyles(theme => ({\n    addProperty: {\n        marginRight: theme.spacing.unit * 2,\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    link: {\n        cursor: 'pointer',\n    },\n}));\n\n/**\n *\n * @param {*} props properties\n */\nfunction EditableRow(props) {\n    const {\n        oldKey, oldValue, handleUpdateList, handleDelete, apiAdditionalProperties, intl,\n    } = props;\n    const [newKey, setKey] = useState(null);\n    const [newValue, setValue] = useState(null);\n    const [editMode, setEditMode] = useState(false);\n\n    const updateEditMode = function () {\n        setEditMode(!editMode);\n    };\n    const handleKeyChange = (event) => {\n        const { value } = event.target;\n        setKey(value);\n    };\n    const handleValueChange = (event) => {\n        const { value } = event.target;\n        setValue(value);\n    };\n    const validateEmpty = function (itemValue) {\n        if (itemValue === null) {\n            return false;\n        } else if (itemValue === '') {\n            return true;\n        } else {\n            return false;\n        }\n    };\n    const saveRow = function () {\n        const oldRow = { oldKey, oldValue };\n        const newRow = { newKey: newKey || oldKey, newValue: newValue || oldValue };\n        handleUpdateList(oldRow, newRow);\n        setEditMode(false);\n    };\n    const deleteRow = function () {\n        handleDelete(apiAdditionalProperties, oldKey);\n    };\n    const handleKeyDown = function (e) {\n        if (e.key === 'Enter') {\n            saveRow();\n        }\n    };\n    const classes = useStyles();\n\n    return (\n        <TableRow>\n            {editMode ? (\n                <TableCell>\n                    <TextField\n                        required\n                        id='outlined-required'\n                        label={intl.formatMessage({\n                            id: 'Apis.Details.Properties.Properties.editable.row.property.name',\n                            defaultMessage: 'Property Name',\n                        })}\n                        margin='normal'\n                        variant='outlined'\n                        className={classes.addProperty}\n                        value={newKey || oldKey}\n                        onChange={handleKeyChange}\n                        onKeyDown={handleKeyDown}\n                        error={validateEmpty(newKey)}\n                    />\n                </TableCell>\n            ) : (\n                <TableCell>{oldKey}</TableCell>\n            )}\n            {editMode ? (\n                <TableCell>\n                    <TextField\n                        required\n                        id='outlined-required'\n                        label={intl.formatMessage({\n                            id: 'Apis.Details.Properties.Properties.editable.row.edit.mode.property.name',\n                            defaultMessage: 'Property Name',\n                        })}\n                        margin='normal'\n                        variant='outlined'\n                        className={classes.addProperty}\n                        value={newValue || oldValue}\n                        onChange={handleValueChange}\n                        onKeyDown={handleKeyDown}\n                        error={validateEmpty(newValue)}\n                    />\n                </TableCell>\n            ) : (\n                <TableCell>{oldValue}</TableCell>\n            )}\n            <TableCell align='right'>\n                {editMode ? (\n                    <React.Fragment>\n                        <a className={classes.link} onClick={saveRow} onKeyDown={() => {}}>\n                            <SaveIcon className={classes.buttonIcon} />\n                        </a>\n                    </React.Fragment>\n                ) : (\n                    <a className={classes.link} onClick={updateEditMode} onKeyDown={() => {}}>\n                        <EditIcon className={classes.buttonIcon} />\n                    </a>\n                )}\n                <a className={classes.link} onClick={deleteRow} onKeyDown={() => {}}>\n                    <DeleteForeverIcon className={classes.buttonIcon} />\n                </a>\n            </TableCell>\n        </TableRow>\n    );\n}\nEditableRow.propTypes = {\n    oldKey: PropTypes.shape({}).isRequired,\n    oldValue: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    handleUpdateList: PropTypes.shape({}).isRequired,\n    handleDelete: PropTypes.shape({}).isRequired,\n    apiAdditionalProperties: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nexport default injectIntl(EditableRow);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n/* eslint-disable react/jsx-no-bind */\n\nimport React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport cloneDeep from 'lodash.clonedeep';\nimport isEmpty from 'lodash.isempty';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport APIContext, { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport { isRestricted } from 'AppData/AuthManager';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport EditableRow from './EditableRow';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        paddingTop: 0,\n        paddingLeft: 0,\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    button: {\n        marginLeft: theme.spacing.unit * 2,\n        textTransform: theme.custom.leftMenuTextStyle,\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    FormControl: {\n        padding: 0,\n        width: '100%',\n        marginTop: 0,\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    FormControlOdd: {\n        padding: 0,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    buttonWrapper: {\n        paddingTop: theme.spacing.unit * 3,\n    },\n    paperRoot: {\n        padding: theme.spacing.unit * 3,\n        marginTop: theme.spacing.unit * 3,\n    },\n    addNewHeader: {\n        padding: theme.spacing.unit * 2,\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing.unit * 2,\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing.unit * 2,\n    },\n    addProperty: {\n        marginRight: theme.spacing.unit * 2,\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    link: {\n        cursor: 'pointer',\n    },\n    messageBox: {\n        marginTop: 20,\n    },\n    actions: {\n        padding: '20px 0',\n        '& button': {\n            marginLeft: 0,\n        },\n    },\n    head: {\n        fontWeight: 200,\n        marginBottom: 20,\n    },\n}));\n\n/**\n *\n *\n * @class Properties\n * @extends {React.Component}\n */\nfunction Properties(props) {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     */\n    const { api, updateAPI } = useContext(APIContext);\n    const additionalPropertiesTemp = cloneDeep(api.additionalProperties);\n\n    const [additionalProperties, setAdditionalProperties] = useState(additionalPropertiesTemp);\n    const [showAddProperty, setShowAddProperty] = useState(false);\n    const [propertyKey, setPropertyKey] = useState(null);\n    const [propertyValue, setPropertyValue] = useState(null);\n    const [updating, setUpdating] = useState(false);\n    const toggleAddProperty = () => {\n        setShowAddProperty(!showAddProperty);\n    };\n    const handleChange = name => (event) => {\n        const { value } = event.target;\n        if (name === 'propertyKey') {\n            setPropertyKey(value);\n        } else if (name === 'propertyValue') {\n            setPropertyValue(value);\n        }\n    };\n\n    /**\n     *\n     *\n     * @param {*} itemValue\n     * @returns\n     * @memberof Properties\n     */\n    const validateEmpty = (itemValue) => {\n        if (itemValue === null) {\n            return false;\n        } else if (itemValue === '') {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    /**\n     *\n     *\n     * @param {*} oldAPI\n     * @param {*} updateAPI\n     * @memberof Properties\n     */\n    const handleSubmit = () => {\n        setUpdating(true);\n        const updatePromise = updateAPI({ additionalProperties });\n        updatePromise\n            .then(() => {\n                setUpdating(false);\n            })\n            .catch((error) => {\n                setUpdating(false);\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    };\n\n    /**\n     *\n     *\n     * @param {*} apiAdditionalProperties\n     * @param {*} oldKey\n     * @memberof Properties\n     */\n    const handleDelete = (apiAdditionalProperties, oldKey) => {\n        const additionalPropertiesCopy = JSON.parse(JSON.stringify(additionalProperties));\n\n        if (Object.prototype.hasOwnProperty.call(additionalPropertiesCopy, oldKey)) {\n            delete additionalPropertiesCopy[oldKey];\n        }\n        setAdditionalProperties(additionalPropertiesCopy);\n    };\n\n    /**\n     *\n     *\n     * @param {*} apiAdditionalProperties\n     * @param {*} oldRow\n     * @param {*} newRow\n     * @memberof Properties\n     */\n    const handleUpdateList = (oldRow, newRow) => {\n        const additionalPropertiesCopy = JSON.parse(JSON.stringify(additionalProperties));\n\n        const { oldKey, oldValue } = oldRow;\n        const { newKey, newValue } = newRow;\n\n        if (Object.prototype.hasOwnProperty.call(additionalPropertiesCopy, newKey) && oldKey === newKey) {\n            // Only the value is updated\n            if (newValue && oldValue !== newValue) {\n                additionalPropertiesCopy[oldKey] = newValue;\n            }\n        } else {\n            delete additionalPropertiesCopy[oldKey];\n            additionalPropertiesCopy[newKey] = newValue;\n        }\n        setAdditionalProperties(additionalPropertiesCopy);\n    };\n\n    /**\n     *\n     *\n     * @param {*} apiAdditionalProperties\n     * @memberof Properties\n     */\n    const handleAddToList = () => {\n        const additionalPropertiesCopy = JSON.parse(JSON.stringify(additionalProperties));\n\n        additionalPropertiesCopy[propertyKey] = propertyValue;\n        setAdditionalProperties(additionalPropertiesCopy);\n    };\n\n    /**\n     *\n     *\n     * @memberof Properties\n     */\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            handleAddToList();\n        }\n    };\n\n    /**\n     *\n     *\n     * @param {*} additionalProperties\n     * @param {*} apiAdditionalProperties\n     * @returns\n     * @memberof Properties\n     */\n    const renderAdditionalProperties = () => {\n        const items = [];\n        for (const key in additionalProperties) {\n            if (Object.prototype.hasOwnProperty.call(additionalProperties, key)) {\n                items.push(<EditableRow\n                    oldKey={key}\n                    oldValue={additionalProperties[key]}\n                    handleUpdateList={handleUpdateList}\n                    handleDelete={handleDelete}\n                    apiAdditionalProperties={additionalProperties}\n                    {...props}\n                />);\n            }\n        }\n        return items;\n    };\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Properties\n     */\n    const { intl } = props;\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.titleWrapper}>\n                <Typography variant='h4' align='left' className={classes.mainTitle}>\n                    <FormattedMessage\n                        id='Apis.Details.Properties.Properties.api.properties'\n                        defaultMessage='API Properties'\n                    />\n                </Typography>\n                <Button\n                    size='small'\n                    className={classes.button}\n                    onClick={toggleAddProperty}\n                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                >\n                    <AddCircle className={classes.buttonIcon} />\n                    <FormattedMessage\n                        id='Apis.Details.Properties.Properties.add.new.property'\n                        defaultMessage='Add New Property'\n                    />\n                </Button>\n            </div>\n            {isEmpty(additionalProperties) && !showAddProperty && (\n                <div className={classes.messageBox}>\n                    <InlineMessage type='info' height={140}>\n                        <div className={classes.contentWrapper}>\n                            <Typography variant='h5' component='h3' className={classes.head}>\n                                <FormattedMessage\n                                    id='Apis.Details.Properties.Properties.add.new.property.message.title'\n                                    defaultMessage='Create Additional Properties'\n                                />\n                            </Typography>\n                            <Typography component='p' className={classes.content}>\n                                <FormattedMessage\n                                    id='Apis.Details.Properties.Properties.add.new.property.message.content'\n                                    defaultMessage={\n                                        'If you want to add specific custom properties to your' +\n                                        'API you can add them here.'\n                                    }\n                                />\n                            </Typography>\n                            <div className={classes.actions}>\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    className={classes.button}\n                                    onClick={toggleAddProperty}\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Details.Properties.Properties.add.new.property'\n                                        defaultMessage='Add New Property'\n                                    />\n                                </Button>\n                            </div>\n                        </div>\n                    </InlineMessage>\n                </div>\n            )}\n            {(!isEmpty(additionalProperties) || showAddProperty) && (\n                <Grid container spacing={7}>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paperRoot} elevation={1}>\n                            <Table className={classes.table}>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>\n                                            <FormattedMessage\n                                                id='Apis.Details.Properties.Properties.add.new.property.table'\n                                                defaultMessage='Add New Property'\n                                            />\n                                        </TableCell>\n                                        <TableCell>\n                                            <FormattedMessage\n                                                id='Apis.Details.Properties.Properties.add.new.property.value'\n                                                defaultMessage='Property Value'\n                                            />\n                                        </TableCell>\n                                        <TableCell />\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {showAddProperty && (\n                                        <React.Fragment>\n                                            <TableRow>\n                                                <TableCell>\n                                                    <TextField\n                                                        required\n                                                        id='outlined-required'\n                                                        label={intl.formatMessage({\n                                                            id: `Apis.Details.Properties.Properties.\n                                                                show.add.property.property.name`,\n                                                            defaultMessage: 'Property Name',\n                                                        })}\n                                                        margin='normal'\n                                                        variant='outlined'\n                                                        className={classes.addProperty}\n                                                        value={propertyKey === null ? '' : propertyKey}\n                                                        onChange={handleChange('propertyKey')}\n                                                        onKeyDown={handleKeyDown('propertyKey')}\n                                                        error={validateEmpty(propertyKey)}\n                                                        disabled={isRestricted(\n                                                            ['apim:api_create', 'apim:api_publish'],\n                                                            api,\n                                                        )}\n                                                    />\n                                                </TableCell>\n                                                <TableCell>\n                                                    <TextField\n                                                        required\n                                                        id='outlined-required'\n                                                        label={intl.formatMessage({\n                                                            id: 'Apis.Details.Properties.Properties.property.value',\n                                                            defaultMessage: 'Property Value',\n                                                        })}\n                                                        margin='normal'\n                                                        variant='outlined'\n                                                        className={classes.addProperty}\n                                                        value={propertyValue === null ? '' : propertyValue}\n                                                        onChange={handleChange('propertyValue')}\n                                                        onKeyDown={handleKeyDown('propertyValue')}\n                                                        error={validateEmpty(propertyValue)}\n                                                        disabled={isRestricted(\n                                                            ['apim:api_create', 'apim:api_publish'],\n                                                            api,\n                                                        )}\n                                                    />\n                                                </TableCell>\n                                                <TableCell align='right'>\n                                                    <Button\n                                                        variant='contained'\n                                                        color='primary'\n                                                        disabled={\n                                                            !propertyValue ||\n                                                            !propertyKey ||\n                                                            isRestricted(['apim:api_create', 'apim:api_publish'], api)\n                                                        }\n                                                        onClick={handleAddToList}\n                                                    >\n                                                        <FormattedMessage\n                                                            id='Apis.Details.Properties.Properties.add'\n                                                            defaultMessage='Add'\n                                                        />\n                                                    </Button>\n\n                                                    <Button onClick={toggleAddProperty}>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.Properties.Properties.cancel'\n                                                            defaultMessage='Cancel'\n                                                        />\n                                                    </Button>\n                                                </TableCell>\n                                            </TableRow>\n                                            <TableRow>\n                                                <TableCell colSpan={3}>\n                                                    <Typography variant='caption'>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.Properties.Properties.help'\n                                                            defaultMessage={\n                                                                'Property name should be unique, should not contain' +\n                                                                'spaces, cannot be case-sensitive, cannot be any ' +\n                                                                'of the following as they are reserved keywords:' +\n                                                                'provider, version, context, status, description, ' +\n                                                                'subcontext, doc, lcState, name, tags.'\n                                                            }\n                                                        />\n                                                    </Typography>\n                                                </TableCell>\n                                            </TableRow>\n                                        </React.Fragment>\n                                    )}\n                                    {renderAdditionalProperties()}\n                                </TableBody>\n                            </Table>\n                        </Paper>\n                        <div className={classes.buttonWrapper}>\n                            <Grid\n                                container\n                                direction='row'\n                                alignItems='flex-start'\n                                spacing={4}\n                                className={classes.buttonSection}\n                            >\n                                <Grid item>\n                                    <div>\n                                        <Button\n                                            variant='contained'\n                                            color='primary'\n                                            onClick={handleSubmit}\n                                            disabled={\n                                                updating || isRestricted(['apim:api_create', 'apim:api_publish'], api)\n                                            }\n                                        >\n                                            {updating && (\n                                                <React.Fragment>\n                                                    <CircularProgress size={20} />\n                                                    <FormattedMessage\n                                                        id='Apis.Details.Properties.Properties.updating'\n                                                        defaultMessage='Updating ...'\n                                                    />\n                                                </React.Fragment>\n                                            )}\n                                            {!updating && (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Properties.Properties.save'\n                                                    defaultMessage='Save'\n                                                />\n                                            )}\n                                        </Button>\n                                    </div>\n                                </Grid>\n                                <Grid item>\n                                    <Link to={'/apis/' + api.id + '/overview'}>\n                                        <Button>\n                                            <FormattedMessage\n                                                id='Apis.Details.Properties.Properties.cancel'\n                                                defaultMessage='Cancel'\n                                            />\n                                        </Button>\n                                    </Link>\n                                </Grid>\n                                {isRestricted(['apim:api_create', 'apim:api_publish'], api) && (\n                                    <Grid item xs={12}>\n                                        <Typography variant='body2' color='primary'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Properties.Properties.update.not.allowed'\n                                                defaultMessage='*You are not authorized to update properties of\n                                                    the API due to insufficient permissions'\n                                            />\n                                        </Typography>\n                                    </Grid>\n                                )}\n                            </Grid>\n                        </div>\n                    </Grid>\n                </Grid>\n            )}\n        </div>\n    );\n}\n\nProperties.propTypes = {\n    state: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\nexport default withAPI(injectIntl(Properties));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { Grid, Typography } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport API from 'AppData/api';\nimport { Progress } from 'AppComponents/Shared';\nimport { classes } from 'istanbul-lib-coverage';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        paddingBottom: '10px',\n    },\n    margin: {\n        margin: theme.spacing.unit,\n    },\n    rightDataColumn: {\n        display: 'flex',\n        flex: 1,\n    },\n    grid: {\n        marginTop: '10px',\n        paddingRight: '10px',\n        paddingBottom: '10px',\n    },\n});\n\n/**\n *\n *\n * @class BusinessPlans\n * @extends {Component}\n */\nclass BusinessPlans extends Component {\n    /**\n     *Creates an instance of BusinessPlans.\n     * @param {Object} props\n     * @memberof BusinessPlans\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            policies: [],\n            monetizedPolices: null,\n        };\n        this.monetizationQuery = this.monetizationQuery.bind(this);\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @memberof BusinessPlans\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        api.getSubscriptionPolicies(api.id).then((policies) => {\n            const filteredPolicies = policies.filter(policy => policy.tierPlan === 'COMMERCIAL');\n            this.setState({ policies: filteredPolicies });\n        });\n        api.getMonetization(api.id).then((status) => {\n            this.setState({ monetizedPolices: status.properties });\n        });\n    }\n\n    monetizationQuery(policyName) {\n        const { monetizedPolices } = this.state;\n        return policyName in monetizedPolices;\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.Component} Policies / Business plans list\n     * @memberof BusinessPlans\n     */\n    render() {\n        const { policies, monetizedPolices } = this.state;\n        const { api } = this.props;\n        if (monetizedPolices === null) {\n            return <Progress />;\n        }\n        const policiesList = policies.map(policy => (\n            <Grid item xs={6} spacing={2}>\n                <FormControlLabel\n                    control={(\n                        <Checkbox\n                            id='monetizationStatus'\n                            checked={this.monetizationQuery(policy.name)}\n                            disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                        />\n                    )}\n                    label={policy.name}\n                />\n                {\n                    Object.keys(policy.monetizationAttributes).map((key) => {\n                        if (policy.monetizationAttributes[key] !== null) {\n                            if (key === 'currencyType') {\n                                return (\n                                    <Typography component='p' variant='body1'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Monetization.BusinessPlans.currencyType'\n                                            defaultMessage='Currency Type'\n                                        /> : {policy.monetizationAttributes[key]}\n                                    </Typography>\n                                );\n                            } else if (key === 'billingCycle') {\n                                return (\n                                    <Typography component='p' variant='body1'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Monetization.BusinessPlans.billingCycle'\n                                            defaultMessage='Billing Cycle'\n                                        /> : {policy.monetizationAttributes[key]}\n                                    </Typography>\n                                );\n                            } else if (key === 'fixedPrice') {\n                                return (\n                                    <Typography component='p' variant='body1'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Monetization.BusinessPlans.fixedPrice'\n                                            defaultMessage='Fixed Price'\n                                        /> : {policy.monetizationAttributes[key]}\n                                    </Typography>\n                                );\n                            } else if (key === 'pricePerRequest') {\n                                return (\n                                    <Typography component='p' variant='body1'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Monetization.BusinessPlans.pricePerRequest'\n                                            defaultMessage='Price per Request'\n                                        /> : {policy.monetizationAttributes[key]}\n                                    </Typography>\n                                );\n                            } else {\n                                return (\n                                    <Typography component='p' variant='body1'>\n                                        { key } : {policy.monetizationAttributes[key]}\n                                    </Typography>\n                                );\n                            }\n                        } else {\n                            return false;\n                        }\n                    })\n                }\n            </Grid>\n        ));\n        return (\n            <Grid container className={classes.root}>\n                <Grid className={classes.grid} spacing={2}>\n                    <Grid>\n                        <Typography variant='subtitle' gutterBottom>\n                            <FormattedMessage\n                                id='Apis.Details.Monetization.BusinessPlans.commercial.policies'\n                                defaultMessage='Commercial Policies'\n                            />\n                        </Typography>\n                    </Grid>\n                    {\n                        (policies.length > 0) ? (\n                            <Grid>\n                                <Typography>\n                                    <FormattedMessage\n                                        id='Apis.Details.Monetization.BusinessPlans.unchecked.policies'\n                                        defaultMessage='Unchecked polices are not monetized, click save to monetize'\n                                    />\n                                </Typography>\n                            </Grid>\n                        ) : (\n                            <Grid>\n                                <Typography>\n                                    <FormattedMessage\n                                        id='Apis.Details.Monetization.BusinessPlans.no.commercial.policies.to.monetize'\n                                        defaultMessage='No commercial policies to monetize'\n                                    />\n                                </Typography>\n                            </Grid>\n                        )\n                    }\n                    <Grid container className={classes.root} spacing={2}>\n                        {policiesList}\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nBusinessPlans.propTypes = {\n    api: PropTypes.instanceOf(API).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(BusinessPlans);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, Typography, Divider } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport { Progress } from 'AppComponents/Shared';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport { isRestricted } from 'AppData/AuthManager';\n\nimport BusinessPlans from './BusinessPlans';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    margin: {\n        margin: theme.spacing.unit,\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'left',\n        color: theme.palette.text.secondary,\n        paddingBottom: '10px',\n    },\n    grid: {\n        paddingLeft: '10px',\n        paddingRight: '10px',\n        paddingBottom: '10px',\n        minWidth: '50%',\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n});\n\nclass Monetization extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            monetizationAttributes: [],\n            monStatus: null,\n            property: {},\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        this.getMonetizationData();\n    }\n\n    getMonetizationData() {\n        const { api } = this.props;\n        api.getSettings().then((settings) => {\n            if (settings.monetizationAttributes != null) {\n                this.setState({ monetizationAttributes: settings.monetizationAttributes });\n            }\n        });\n        api.getMonetization(this.props.api.id).then((status) => {\n            this.setState({ monStatus: status.enabled });\n        });\n    }\n\n    /**\n     * Handles the submit action for configuring monetization\n     */\n    handleSubmit() {\n        const { api, intl } = this.props;\n        const properties = this.state.property;\n        const enabled = this.state.monStatus;\n        const body = {\n            enabled,\n            properties,\n        };\n        const promisedMonetizationConf = api.configureMonetizationToApi(this.props.api.id, body);\n        promisedMonetizationConf.then((response) => {\n            if (response.status !== 200) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Monetization.Index.something.went.wrong.while.configuring.monetization',\n                    defaultMessage: 'Something went wrong while configuring monetization',\n                }));\n                return;\n            }\n            Alert.info(intl.formatMessage({\n                id: 'Apis.Details.Monetization.Index.monetization.configured.successfully',\n                defaultMessage: 'Monetization Configured Successfully',\n            }));\n            this.setState({ monStatus: !this.state.monStatus });\n        }).catch((error) => {\n            console.error(error);\n            if (error.response) {\n                Alert.error(error.response.body.message);\n            } else {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Monetization.Index.something.went.wrong.while.configuring.monetization',\n                    defaultMessage: 'Something went wrong while configuring monetization',\n                }));\n            }\n        });\n    }\n\n    handleChange = (event) => {\n        this.setState({ monStatus: event.target.checked });\n    };\n\n    handleInputChange = (event) => {\n        const { name, value } = event.target;\n        this.setState((oldState) => {\n            const { property } = oldState;\n            property[name] = value;\n            return { property };\n        });\n    };\n\n    render() {\n        const { api, classes } = this.props;\n        const { monetizationAttributes, monStatus } = this.state;\n        if (!monetizationAttributes || monStatus === null) {\n            return <Progress />;\n        }\n        return (\n            <Grid item xs={6}>\n                <Typography variant='title' gutterBottom>\n                    <FormattedMessage id='Apis.Details.Monetization.Index.monetization' defaultMessage='Monetization' />\n                </Typography>\n                <form method='post' onSubmit={this.handleSubmit}>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                id='monStatus'\n                                name='monStatus'\n                                checked={monStatus}\n                                onChange={this.handleChange}\n                                value={monStatus}\n                            />\n                        }\n                        label='Enable Monetization'\n                    />\n                    <Grid>\n                        <Paper className={classes.paper}>\n                            <Grid item xs={5} className={classes.grid}>\n                                <Typography variant='subtitle' gutterBottom>\n                                    <FormattedMessage\n                                        id='Apis.Details.Monetization.Index.monetization.properties'\n                                        defaultMessage='Monetization Properties'\n                                    />\n                                </Typography>\n                                {\n                                    (monetizationAttributes.length > 0) ?\n                                        (monetizationAttributes.map((monetizationAttribute, i) => (\n                                            <TextField\n                                                disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                                fullWidth\n                                                id={'attribute' + i}\n                                                label={monetizationAttribute.displayName}\n                                                name={monetizationAttribute.name}\n                                                type='text'\n                                                margin='normal'\n                                                required={monetizationAttribute.required}\n                                                onChange={this.handleInputChange}\n                                                autoFocus\n                                            />\n                                        )))\n                                        : (\n                                            <Typography gutterBottom>\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Monetization.Index.there.are.no' +\n                                                        ' .monetization.properties.configured'}\n                                                    defaultMessage='There are no monetization properties configured'\n                                                />\n                                            </Typography>\n                                        )\n                                }\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                    <Divider className={classes.grid} />\n                    <Grid>\n                        <Paper className={classes.paper}>\n                            <Grid item xs={12} className={classes.grid}>\n                                {<BusinessPlans api={api} monStatus={monStatus} />}\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                    <Divider className={classes.grid} />\n                    <Button onClick={this.handleSubmit} color='primary' variant='contained' className={classes.button} >\n                        <FormattedMessage\n                            id='Apis.Details.Monetization.Index.save'\n                            defaultMessage='Save'\n                        />\n                    </Button>\n                </form>\n            </Grid>\n        );\n    }\n}\n\nMonetization.propTypes = {\n    api: PropTypes.instanceOf(API).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default withStyles(styles)(Monetization);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport { isRestricted } from 'AppData/AuthManager';\n\nimport 'react-tagsinput/react-tagsinput.css';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from 'react-router-dom';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Paper from '@material-ui/core/Paper';\nimport API from '../../../../data/api';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: theme.custom.contentAreaWidth,\n        marginTop: theme.spacing(3),\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 650,\n    },\n    viewInExStoreLink: {\n        color: theme.palette.common.black,\n        textDecoration: 'underline',\n    },\n}));\n\nconst StyledTableCell = withStyles(() => ({\n    head: {\n        fontSize: 13,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\n/**\n * Renders an External Store list\n * @class ExternalStores\n * @extends {React.Component}\n */\nexport default function ExternalStores() {\n    const { api } = useContext(APIContext);\n    const { settings } = useAppContext();\n    const [allExternalStores, setAllExternalStores] = useState([]);\n    const [publishedExternalStores, setPublishedExternalStores] = useState([]);\n    const [isUpdating, setUpdating] = useState(false);\n    const classes = useStyles();\n    const intl = useIntl();\n    if (!settings.externalStoresEnabled) {\n        return (\n            <div className='message message-warning'>\n                <h4>\n                    <FormattedMessage\n                        id='Apis.Details.ExternalStores.ExternalStores.external.stores.not.found.for.api'\n                        defaultMessage='External Stores not found for api: '\n                    />\n                    <span style={{ color: 'green' }}> {api.id} </span>\n                </h4>\n            </div>\n        );\n    }\n    /**\n     * Gets published external stores\n     */\n    function getPublishedExternalStores() {\n        API.getPublishedExternalStores(api.id)\n            .then((response) => {\n                const publishedStoreIds = response.body.list.map(store => store.id);\n                setPublishedExternalStores(publishedStoreIds);\n            })\n            .catch((error) => {\n                const response = error.response && error.response.obj;\n                const reason = response && ('[' + response.message + '] ' + response.description);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.ExternalStores.ExternalStores.error.getting.published.external.stores',\n                    defaultMessage: 'Error while getting published external stores!! {reason}',\n                }, { reason }));\n            });\n    }\n\n    useEffect(() => {\n        API.getAllExternalStores().then((response) => {\n            setAllExternalStores([...response.body.list]);\n        });\n        getPublishedExternalStores();\n    }, []);\n\n    /**\n     * Handle publish to external store button action\n     */\n    function updateStores() {\n        setUpdating(true);\n        API.publishAPIToExternalStores(api.id, publishedExternalStores)\n            .then((response) => {\n                const successfulStores = response.body.list.map(store => store.id);\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.ExternalStores.ExternalStores.successfully.published.to.external.stores',\n                    defaultMessage: 'Successfully Published to external stores: ',\n                }, { successfulStores }));\n            })\n            .catch((error) => {\n                const response = error.response && error.response.obj;\n                const reason = response && ('[' + response.message + '] ' + response.description);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.ExternalStores.ExternalStores.error.while.updating.external.stores',\n                    defaultMessage: 'Error while updating external stores!! {reason}',\n                }, { reason }));\n            })\n            .finally(() => {\n                setUpdating(false);\n                getPublishedExternalStores();\n            });\n    }\n\n    return (\n        <div>\n            <div>\n                <Typography variant='h4' align='left' >\n                    <FormattedMessage\n                        id='Apis.Details.ExternalStores.ExternalStores.external-stores'\n                        defaultMessage='External Stores'\n                    />\n                </Typography>\n                <Paper className={classes.root}>\n                    <Table className={classes.table}>\n                        <TableHead>\n                            <TableRow>\n                                <StyledTableCell />\n                                <StyledTableCell>Name</StyledTableCell>\n                                <StyledTableCell>Type</StyledTableCell>\n                                <StyledTableCell>Endpoint</StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {allExternalStores.map(row => (\n                                <TableRow key={row.id}>\n                                    <StyledTableCell padding='checkbox'>\n                                        <Checkbox\n                                            checked={publishedExternalStores.includes(row.id)}\n                                            disabled={api.lifeCycleStatus !== 'PUBLISHED'\n                                            || isRestricted(['apim:api_publish'], api)}\n                                            onChange={\n                                                (event) => {\n                                                    const { checked, name } = event.target;\n                                                    if (checked) {\n                                                        if (!publishedExternalStores.includes(name)) {\n                                                            setPublishedExternalStores([\n                                                                ...publishedExternalStores, name]);\n                                                        }\n                                                    } else {\n                                                        setPublishedExternalStores(publishedExternalStores\n                                                            .filter(store => store !== name));\n                                                    }\n                                                }\n                                            }\n                                            name={row.id}\n                                        />\n                                    </StyledTableCell>\n                                    <StyledTableCell component='th' scope='row'>\n                                        {row.displayName}\n                                    </StyledTableCell>\n                                    <StyledTableCell>{row.type}</StyledTableCell>\n                                    <StyledTableCell>\n                                        <a\n                                            target='_blank'\n                                            rel='noopener noreferrer'\n                                            href={row.endpoint}\n                                            className={classes.viewInExStoreLink}\n                                        >{row.endpoint}\n                                        </a>\n                                    </StyledTableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n                <Grid container>\n                    <Grid\n                        container\n                        direction='row'\n                        alignItems='center'\n                        spacing={4}\n                        style={{ marginTop: 20 }}\n                    >\n                        <Grid item>\n                            <Button\n                                type='submit'\n                                variant='contained'\n                                color='primary'\n                                disabled={isUpdating || api.lifeCycleStatus !== 'PUBLISHED'\n                                    || isRestricted(['apim:api_publish'], api)}\n                                onClick={updateStores}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.ExternalStores.ExternalStores.save'\n                                    defaultMessage='Save'\n                                />\n                                {isUpdating && <CircularProgress size={20} />}\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Link to={'/apis/' + api.id + '/overview'}>\n                                <Button>\n                                    <FormattedMessage\n                                        id='Apis.Details.ExternalStores.ExternalStores.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage } from 'react-intl';\nimport FormControl from '@material-ui/core/FormControl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst styles = theme => ({\n    FormControl: {\n        padding: 0,\n        width: '100%',\n        marginTop: 20,\n    },\n    FormControlOdd: {\n        padding: 0,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormLabel: {\n        transform: 'translate(0, 1.5px) scale(0.75)',\n        transformOrigin: 'top left',\n    },\n    buttonWrapper: {\n        paddingTop: 20,\n    },\n    root: {\n        padding: 20,\n        marginTop: 20,\n    },\n    group: {\n        flexDirection: 'row',\n    },\n    helpButton: {\n        padding: 0,\n        minWidth: 20,\n    },\n    helpIcon: {\n        fontSize: 16,\n    },\n    htmlTooltip: {\n        backgroundColor: '#f5f5f9',\n        color: 'rgba(0, 0, 0, 0.87)',\n        maxWidth: 220,\n        fontSize: theme.typography.pxToRem(14),\n        border: '1px solid #dadde9',\n        '& b': {\n            fontWeight: theme.typography.fontWeightMedium,\n        },\n    },\n});\n\n/**\n * React component to create a new version of an API\n * @class CreateNewVersion\n * @extends {Component}\n */\nclass CreateNewVersion extends React.Component {\n    /**\n     * Creates an instance of CreateNewVersion.\n     * @param {any} props @inheritDoc\n     * @memberof CreateNewVersion\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            isDefaultVersion: 'no',\n            valid: { version: { empty: false, alreadyExists: false } },\n        };\n    }\n\n    handleDefaultVersionChange = () => (event) => {\n        const { value } = event.target;\n        this.setState({\n            isDefaultVersion: value,\n        });\n    };\n\n    handleVersionChange = () => (event) => {\n        const { value } = event.target;\n        this.setState({\n            newVersion: value,\n            valid: { version: { empty: !value, alreadyExists: false } },\n        });\n    };\n\n    /**\n     * Handles the submit action for new version creation\n     *\n     * @param {API} api current API\n     * @param {string} newVersion new version to create\n     * @param {string} isDefaultVersion specifies whether the new API should be marked as default version ('yes' | 'no')\n     */\n    handleSubmit(api, newVersion, isDefaultVersion) {\n        if (!newVersion) {\n            this.setState({ valid: { version: { empty: true } } });\n            return;\n        }\n        const isDefaultVersionBool = isDefaultVersion === 'yes';\n        const { intl } = this.props;\n        api.createNewAPIVersion(newVersion, isDefaultVersionBool)\n            .then((response) => {\n                this.setState({\n                    redirectToReferrer: true,\n                    apiId: response.obj.id,\n                });\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.NewVersion.NewVersion.success',\n                    defaultMessage: 'Successfully created new version',\n                }) + newVersion);\n            })\n            .catch((error) => {\n                if (error.status === 409) {\n                    this.setState({ valid: { version: { alreadyExists: true } } });\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.NewVersion.NewVersion.error',\n                        defaultMessage: 'Something went wrong while creating a new version!. Error: ',\n                    }) + error.status);\n                }\n            });\n    }\n\n    /**\n     * Renders the CreateNewVersion component.\n     * Once new version is created, redirects to the overview page of the new API.\n     * @returns {*} CreateNewVersion component\n     */\n    render() {\n        const { classes, api } = this.props;\n        const {\n            isDefaultVersion, newVersion, redirectToReferrer, apiId, valid,\n        } = this.state;\n        if (redirectToReferrer) {\n            return <Redirect to={'/apis/' + apiId + '/overview'} />;\n        }\n\n        let helperText = 'Provide new version';\n        if (valid.version.empty) {\n            helperText = 'This field cannot be empty';\n        } else if (valid.version.alreadyExists) {\n            helperText = 'An API with version \"' + newVersion + '\" already exists.';\n        }\n\n        return (\n            <div className={classes.root}>\n                <div className={classes.titleWrapper}>\n                    <Typography variant='h4' align='left' className={classes.mainTitle}>\n                        <FormattedMessage\n                            id='Apis.Details.NewVersion.NewVersion.create.new.version'\n                            defaultMessage='Create New Version'\n                        />\n                    </Typography>\n                </div>\n                <Grid container spacing={7}>\n                    <Grid item xs={12}>\n                        <Paper className={classes.root} elevation={1}>\n                            <FormControl margin='normal' className={classes.FormControlOdd}>\n                                <TextField\n                                    fullWidth\n                                    id='newVersion'\n                                    error={valid.version.empty || valid.version.alreadyExists}\n                                    label={\n                                        <FormattedMessage\n                                            id='Apis.Details.NewVersion.NewVersion.new.version'\n                                            defaultMessage='New Version'\n                                        />\n                                    }\n                                    helperText={\n                                        <FormattedMessage\n                                            id='Apis.Details.NewVersion.NewVersion.helper.text'\n                                            defaultMessage='{helper}'\n                                            values={{ helper: helperText }}\n                                        />\n                                    }\n                                    type='text'\n                                    name='newVersion'\n                                    placeholder='Eg: 2.0.0'\n                                    value={newVersion}\n                                    onChange={this.handleVersionChange()}\n                                    margin='normal'\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    autoFocus\n                                />\n                            </FormControl>\n                            <FormControl margin='normal' className={classes.FormControl}>\n                                <FormLabel className={classes.FormLabel} component='legend'>\n                                    <FormattedMessage\n                                        id='Apis.Details.NewVersion.NewVersion.default'\n                                        defaultMessage='Make this the default version'\n                                    />\n                                    <Tooltip\n                                        placement='top'\n                                        classes={{\n                                            tooltip: classes.htmlTooltip,\n                                        }}\n                                        disableHoverListener\n                                        title={\n                                            <React.Fragment>\n                                                <FormattedMessage\n                                                    id='Apis.Details.NewVersion.NewVersion.tooltip'\n                                                    defaultMessage={\n                                                        'Marks one API version in a group as ' +\n                                                        'the default so that it can be invoked without ' +\n                                                        'specifying the version number in the URL. ' +\n                                                        'For example, if you mark ' +\n                                                        'http://host:port/youtube/2.0 as the default API, ' +\n                                                        'requests made to http://host:port/youtube/ are ' +\n                                                        'automatically routed to version 2.0. If you mark ' +\n                                                        'an unpublished API as the default, ' +\n                                                        'the previous default published API ' +\n                                                        'will still be used as the default until ' +\n                                                        'the new default API is published.'\n                                                    }\n                                                />\n                                            </React.Fragment>\n                                        }\n                                    >\n                                        <Button className={classes.helpButton}>\n                                            <HelpOutline className={classes.helpIcon} />\n                                        </Button>\n                                    </Tooltip>\n                                </FormLabel>\n                                <RadioGroup\n                                    name='isDefaultVersion'\n                                    id='isDefaultVersion'\n                                    className={classes.group}\n                                    value={isDefaultVersion}\n                                    onChange={this.handleDefaultVersionChange()}\n                                >\n                                    <FormControlLabel value='yes' control={<Radio />} label='Yes' />\n                                    <FormControlLabel value='no' control={<Radio />} label='No' />\n                                </RadioGroup>\n                                <FormHelperText>\n                                    <FormattedMessage\n                                        id='Apis.Details.NewVersion.NewVersion.api.helper'\n                                        defaultMessage={\n                                            'Indicate whether API should be the default version ' +\n                                            'among the group of APIs with the same name'\n                                        }\n                                    />\n                                </FormHelperText>\n                            </FormControl>\n                        </Paper>\n                        <div className={classes.buttonWrapper}>\n                            <Grid\n                                container\n                                direction='row'\n                                alignItems='flex-start'\n                                spacing={4}\n                                className={classes.buttonSection}\n                            >\n                                <Grid item>\n                                    <div>\n                                        <Button\n                                            variant='contained'\n                                            color='primary'\n                                            id='createBtn'\n                                            onClick={() => this.handleSubmit(api, newVersion, isDefaultVersion)}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.NewVersion.NewVersion.create'\n                                                defaultMessage='Create'\n                                            />\n                                        </Button>\n                                    </div>\n                                </Grid>\n                                <Grid item>\n                                    <Link to={'/apis/' + api.id + '/overview'}>\n                                        <Button id='cancelBtn'>\n                                            <FormattedMessage\n                                                id='Apis.Details.NewVersion.NewVersion.cancel'\n                                                defaultMessage='Cancel'\n                                            />\n                                        </Button>\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nCreateNewVersion.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default withAPI(withStyles(styles)(CreateNewVersion));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_data\"] }] */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport LifeCycleIcon from '@material-ui/icons/Autorenew';\nimport EndpointIcon from '@material-ui/icons/GamesOutlined';\nimport PersonPinCircleOutlinedIcon from '@material-ui/icons/PersonPinCircleOutlined';\nimport ResourcesIcon from '@material-ui/icons/VerticalSplit';\nimport ScopesIcon from '@material-ui/icons/VpnKey';\nimport DocumentsIcon from '@material-ui/icons/LibraryBooks';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CodeIcon from '@material-ui/icons/Code';\nimport ConfigurationIcon from '@material-ui/icons/Build';\nimport PropertiesIcon from '@material-ui/icons/List';\nimport SubscriptionsIcon from '@material-ui/icons/RssFeed';\nimport MonetizationIcon from '@material-ui/icons/LocalAtm';\nimport StoreIcon from '@material-ui/icons/Store';\nimport { withStyles } from '@material-ui/core/styles';\nimport { injectIntl, defineMessages } from 'react-intl';\nimport { Redirect, Route, Switch, Link, matchPath } from 'react-router-dom';\nimport isEmpty from 'lodash/isEmpty';\nimport Utils from 'AppData/Utils';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport LeftMenuItem from 'AppComponents/Shared/LeftMenuItem';\nimport { PageNotFound } from 'AppComponents/Base/Errors';\nimport Api from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport { Progress } from 'AppComponents/Shared';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport AppContext from 'AppComponents/Shared/AppContext';\nimport Overview from './NewOverview/Overview';\nimport Configuration from './Configuration/Configuration';\nimport LifeCycle from './LifeCycle/LifeCycle';\nimport Documents from './Documents';\nimport Operations from './Operations/Operations';\nimport Resources from './Resources/Resources';\nimport ProductResourcesView from './Resources/ProductResourcesView';\nimport ProductResourcesEdit from './ProductResources/ProductResourcesEdit';\nimport Endpoints from './Endpoints/Endpoints';\nimport Environments from './Environments/Environments';\nimport Subscriptions from './Subscriptions/Subscriptions';\nimport Comments from './Comments/Comments';\nimport Scope from './Scopes';\nimport Security from './Security';\nimport APIDefinition from './APIDefinition/APIDefinition';\nimport APIDetailsTopMenu from './components/APIDetailsTopMenu';\nimport MediationPoliciesOverview from './MediationPolicies/Overview';\nimport BusinessInformation from './BusinessInformation/BusinessInformation';\nimport Properties from './Properties/Properties';\nimport Monetization from './Monetization';\nimport ExternalStores from './ExternalStores/ExternalStores';\nimport { APIProvider } from './components/ApiContext';\nimport CreateNewVersion from './NewVersion/NewVersion';\n\nconst styles = theme => ({\n    LeftMenu: {\n        backgroundColor: theme.palette.background.leftMenu,\n        width: theme.custom.leftMenuWidth,\n        textAlign: 'center',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        top: 0,\n        overflowY: 'auto',\n    },\n    leftLInkMain: {\n        borderRight: 'solid 1px ' + theme.palette.background.leftMenu,\n        paddingBottom: theme.spacing.unit,\n        paddingTop: theme.spacing.unit,\n        cursor: 'pointer',\n        backgroundColor: theme.palette.background.leftMenuActive,\n        color: theme.palette.getContrastText(theme.palette.background.leftMenuActive),\n        textDecoration: 'none',\n    },\n    detailsContent: {\n        display: 'flex',\n        flex: 1,\n    },\n    content: {\n        display: 'flex',\n        flex: 1,\n        flexDirection: 'column',\n        marginLeft: theme.custom.leftMenuWidth,\n        paddingBottom: theme.spacing.unit * 3,\n    },\n    contentInside: {\n        paddingLeft: theme.spacing.unit * 3,\n        paddingRight: theme.spacing.unit * 3,\n        paddingTop: theme.spacing.unit * 2,\n    },\n});\n\n/**\n * Base component for API specific Details page,\n * What this component do is, Handle all the request coming under `/apis/:api_uuid` path, If the :api_uuid or\n *  the later part of the URL is not valid , This will return a `PageNotFound` component.\n * For valid API request , This component will fetch the API and pass the API response data to below components in `api`\n * prop name.\n * Note: If you want to add new route or new page under APIs detail, add the desired path to `PATHS` constant mapping.\n * This mapping will be used in parent component to directly return `PageNotFound` component, If user making a request\n * to an undefined path segment.\n */\nclass Details extends Component {\n    /**\n     * Return boolean , whether provided URL has a valid Route under the Details page.\n     * Check https://github.com/ReactTraining/react-router/blob/master/packages/react-router-dom/modules/NavLink.js\n     * code for the usage of public matchPath method\n     * @static\n     * @param {String} pathname location URL of an incoming request\n     * @memberof Details\n     * @returns {Boolean} whether URL matched with defined sub paths or not\n     */\n    static isValidURL(pathname) {\n        for (const [subPathKey, subPath] of Object.entries(Details.subPaths)) {\n            // Skip the BASE path , because it will match for any `/apis/:apiUUID/*` values\n            if (subPathKey !== 'BASE') {\n                const matched = matchPath(pathname, subPath);\n                if (matched) {\n                    return matched;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Creates an instance of Details.\n     * @param {any} props @inheritDoc\n     * @memberof Details\n     */\n    constructor(props) {\n        super(props);\n        const isAPIProduct = null;\n        this.state = {\n            api: null,\n            apiNotFound: false,\n            // updateAPI: this.updateAPI,\n            isAPIProduct,\n        };\n        this.setAPI = this.setAPI.bind(this);\n        this.setAPIProduct = this.setAPIProduct.bind(this);\n        this.updateAPI = this.updateAPI.bind(this);\n    }\n\n    /**\n     * @inheritDoc\n     * @memberof Details\n     */\n    componentDidMount() {\n        const {\n            location: { pathname },\n            isAPIProduct,\n        } = this.props;\n        // Load API data iff request page is valid\n        if (Details.isValidURL(pathname)) {\n            if (isAPIProduct) {\n                this.setAPIProduct();\n            } else {\n                this.setAPI();\n            }\n        }\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Details\n     */\n    componentDidUpdate() {\n        const { api } = this.state;\n        const { apiUUID } = this.props.match.params;\n        const { apiProdUUID } = this.props.match.params;\n        const { isAPIProduct } = this.props.isAPIProduct;\n        if (!api || (api.id === apiUUID || api.id === apiProdUUID)) {\n            return;\n        }\n        if (isAPIProduct) {\n            this.setAPIProduct();\n        } else {\n            this.setAPI();\n        }\n    }\n\n    /**\n     *\n     *\n     * @memberof Details\n     */\n    setAPI(newAPI) {\n        if (newAPI) {\n            this.setState({ api: newAPI });\n        } else {\n            const { apiUUID } = this.props.match.params;\n            const promisedApi = Api.get(apiUUID);\n            promisedApi\n                .then((api) => {\n                    this.setState({ api });\n                })\n                .catch((error) => {\n                    if (process.env.NODE_ENV !== 'production') {\n                        console.log(error);\n                    }\n                    const { status } = error;\n                    if (status === 404) {\n                        this.setState({ apiNotFound: true });\n                    } else if (status === 401) {\n                        doRedirectToLogin();\n                    }\n                });\n        }\n    }\n\n    /**\n     *\n     *\n     * @memberof Details\n     */\n    setAPIProduct() {\n        const { apiProdUUID } = this.props.match.params;\n        const { isAPIProduct } = this.props;\n        const promisedApi = APIProduct.get(apiProdUUID);\n        promisedApi\n            .then((api) => {\n                this.setState({ isAPIProduct });\n                this.setState({ api });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ apiNotFound: true });\n                }\n            });\n    }\n\n    getLeftMenuItemForAPIType(apiType) {\n        const { isAPIProduct } = this.state;\n        const { intl, match } = this.props;\n        const uuid = match.params.apiUUID || match.params.api_uuid || match.params.apiProdUUID;\n        const pathPrefix = '/' + (isAPIProduct ? 'api-products' : 'apis') + '/' + uuid + '/';\n\n        switch (apiType) {\n            case 'GRAPHQL':\n                return (\n                    <React.Fragment>\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.schema.definition',\n                                defaultMessage: 'Schema Definition',\n                            })}\n                            to={pathPrefix + 'schema definition'}\n                            Icon={<CodeIcon />}\n                        />\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.operations',\n                                defaultMessage: 'operations',\n                            })}\n                            to={pathPrefix + 'operations'}\n                            Icon={<ResourcesIcon />}\n                        />\n                    </React.Fragment>\n                );\n            default:\n                return (\n                    <React.Fragment>\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.api.definition',\n                                defaultMessage: 'api definition',\n                            })}\n                            to={pathPrefix + 'api definition'}\n                            Icon={<CodeIcon />}\n                        />\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.resources',\n                                defaultMessage: 'resources',\n                            })}\n                            to={pathPrefix + 'resources'}\n                            Icon={<ResourcesIcon />}\n                        />\n                    </React.Fragment>\n                );\n        }\n    }\n    /**\n     *\n     *\n     * @param {*} updatedProperties\n     * @param {*} isAPIProduct\n     * @memberof Details\n     */\n    updateAPI(updatedProperties = {}) {\n        const { api } = this.state;\n        let isAPIProduct = false;\n        if (api.apiType === 'APIProduct') {\n            isAPIProduct = true;\n        }\n        let promisedUpdate;\n        // TODO: Ideally, The state should hold the corresponding API object\n        // which we could call it's `update` method safely ~tmkb\n        if (!isEmpty(updatedProperties)) {\n            // newApi object has to be provided as the updatedProperties. Then api will be updated.\n            promisedUpdate = api.update(updatedProperties);\n        } else {\n            // this is to get the updated api when api properties are updated, but we do not have the newApi object\n            promisedUpdate = Api.get(api.id);\n        }\n        return promisedUpdate\n            .then((updatedAPI) => {\n                if (isAPIProduct) {\n                    Alert.info(`${updatedAPI.body.name} API updated successfully`);\n                    this.setState({ api: updatedAPI.body });\n                    return updatedAPI.body;\n                } else {\n                    Alert.info(`${updatedAPI.name} API updated successfully`);\n                    this.setState({ api: updatedAPI });\n                    return updatedAPI;\n                }\n            })\n            .catch((error) => {\n                // TODO: Should log and handle the error case by the original callee ~tmkb\n                console.error(error);\n                Alert.error(`Something went wrong while updating the ${api.name} API!!`);\n                // Kinda force render,Resting API object to old one\n                this.setState({ api });\n                throw error;\n            });\n    }\n\n    /**\n     * Renders Grid container layout with NavBar place static in LHS, Components which coming as children for\n     * Details page\n     * should wrap it's content with <Grid item > element\n     * @returns {Component} Render API Details page\n     */\n    render() {\n        const { api, apiNotFound, isAPIProduct } = this.state;\n        const {\n            classes,\n            theme,\n            match,\n            intl,\n            location: pageLocation,\n            location: { pathname }, // nested destructuring\n        } = this.props;\n\n        const settingsContext = this.context.settings;\n\n        // pageLocation renaming is to prevent es-lint errors saying can't use global name location\n        if (!Details.isValidURL(pathname)) {\n            return <PageNotFound location={pageLocation} />;\n        }\n        const uuid = match.params.apiUUID || match.params.api_uuid || match.params.apiProdUUID;\n        const pathPrefix = '/' + (isAPIProduct ? 'api-products' : 'apis') + '/' + uuid + '/';\n        const redirectUrl = pathPrefix;\n        if (apiNotFound) {\n            const { apiUUID } = match.params;\n            const resourceNotFoundMessageText = defineMessages({\n                titleMessage: {\n                    id: 'Apis.Details.index.api.not.found.title',\n                    defaultMessage: 'API is Not Found in the {environmentLabel} Environment',\n                },\n                bodyMessage: {\n                    id: 'Apis.Details.index.api.not.found.body',\n                    defaultMessage: \"Can't find the API with the id {uuid}\",\n                },\n            });\n            const resourceNotFountMessage = {\n                title: intl.formatMessage(resourceNotFoundMessageText.titleMessage, {\n                    environmentLabel: `${Utils.getCurrentEnvironment().label}`,\n                }),\n                body: intl.formatMessage(resourceNotFoundMessageText.bodyMessage, { apiUUID: `${apiUUID}` }),\n            };\n            return <ResourceNotFound message={resourceNotFountMessage} />;\n        }\n\n        if (!api) {\n            return <Progress />;\n        }\n        const { leftMenuIconMainSize } = theme.custom;\n\n        return (\n            <React.Fragment>\n                <APIProvider\n                    value={{\n                        api,\n                        updateAPI: this.updateAPI,\n                        isAPIProduct,\n                        setAPI: this.setAPI,\n                    }}\n                >\n                    <div className={classes.LeftMenu}>\n                        <Link to={'/' + (isAPIProduct ? 'api-products' : 'apis') + '/'}>\n                            <div className={classes.leftLInkMain}>\n                                <CustomIcon\n                                    width={leftMenuIconMainSize}\n                                    height={leftMenuIconMainSize}\n                                    icon={isAPIProduct ? 'api-product' : 'api'}\n                                />\n                            </div>\n                        </Link>\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.overview',\n                                defaultMessage: 'overview',\n                            })}\n                            to={pathPrefix + 'overview'}\n                        />\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.configuration',\n                                defaultMessage: 'configuration',\n                            })}\n                            to={pathPrefix + 'configuration'}\n                            Icon={<ConfigurationIcon />}\n                        />\n                        {!isAPIProduct && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.endpoints',\n                                    defaultMessage: 'endpoints',\n                                })}\n                                to={pathPrefix + 'endpoints'}\n                                Icon={<EndpointIcon />}\n                            />\n                        )}\n                        {!isAPIProduct && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.environments',\n                                    defaultMessage: 'environments',\n                                })}\n                                to={pathPrefix + 'environments'}\n                                Icon={<PersonPinCircleOutlinedIcon />}\n                            />\n                        )}\n                        {this.getLeftMenuItemForAPIType(api.type)}\n                        {!isAPIProduct && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.lifecycle',\n                                    defaultMessage: 'lifecycle',\n                                })}\n                                to={pathPrefix + 'lifecycle'}\n                                Icon={<LifeCycleIcon />}\n                            />)}\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.left.menu.scope',\n                                defaultMessage: 'scopes',\n                            })}\n                            to={pathPrefix + 'scopes'}\n                            Icon={<ScopesIcon />}\n                        />\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.documents',\n                                defaultMessage: 'documents',\n                            })}\n                            to={pathPrefix + 'documents'}\n                            Icon={<DocumentsIcon />}\n                        />\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.business.info',\n                                defaultMessage: 'business info',\n                            })}\n                            to={pathPrefix + 'business info'}\n                            Icon={<BusinessIcon />}\n                        />\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.properties',\n                                defaultMessage: 'properties',\n                            })}\n                            to={pathPrefix + 'properties'}\n                            Icon={<PropertiesIcon />}\n                        />\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.subscriptions',\n                                defaultMessage: 'subscriptions',\n                            })}\n                            to={pathPrefix + 'subscriptions'}\n                            Icon={<SubscriptionsIcon />}\n                        />\n\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.left.menu.mediation.policy',\n                                defaultMessage: 'Mediation Policies',\n                            })}\n                            to={pathPrefix + 'mediation policies'}\n                            Icon={<ScopesIcon />}\n                        />\n                        {!isAPIProduct && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.monetization',\n                                    defaultMessage: 'monetization',\n                                })}\n                                to={pathPrefix + 'monetization'}\n                                Icon={<MonetizationIcon />}\n                            />)}\n                        {settingsContext.externalStoresEnabled &&\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.external-stores',\n                                    defaultMessage: 'external stores',\n                                })}\n                                to={pathPrefix + 'external-stores'}\n                                Icon={<StoreIcon />}\n                            />\n                        }\n                    </div>\n                    <div className={classes.content}>\n                        <APIDetailsTopMenu api={api} isAPIProduct={isAPIProduct} />\n                        <div className={classes.contentInside}>\n                            <Switch>\n                                <Redirect exact from={Details.subPaths.BASE} to={redirectUrl} />\n                                <Route\n                                    path={Details.subPaths.OVERVIEW_PRODUCT}\n                                    component={() => <Overview api={api} />}\n                                />\n                                <Route path={Details.subPaths.OVERVIEW} component={() => <Overview api={api} />} />\n                                <Route\n                                    path={Details.subPaths.API_DEFINITION}\n                                    component={() => <APIDefinition api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.API_DEFINITION_PRODUCT}\n                                    component={() => <APIDefinition api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.SCHEMA_DEFINITION}\n                                    component={() => <APIDefinition api={api} />}\n                                />\n                                <Route path={Details.subPaths.LIFE_CYCLE} component={() => <LifeCycle api={api} />} />\n                                <Route\n                                    path={Details.subPaths.CONFIGURATION}\n                                    component={() => <Configuration api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.CONFIGURATION_PRODUCT}\n                                    component={() => <Configuration api={api} />}\n                                />\n                                <Route path={Details.subPaths.ENDPOINTS} component={() => <Endpoints api={api} />} />\n                                <Route\n                                    path={Details.subPaths.ENVIRONMENTS}\n                                    component={() => <Environments api={api} />}\n                                />\n                                <Route path={Details.subPaths.OPERATIONS} component={() => <Operations api={api} />} />\n                                <Route\n                                    exact\n                                    path={Details.subPaths.RESOURCES_PRODUCT}\n                                    component={() => <ProductResourcesView api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.RESOURCES_PRODUCT_EDIT}\n                                    component={() => <ProductResourcesEdit />}\n                                />\n\n                                <Route path={Details.subPaths.RESOURCES} component={() => <Resources api={api} />} />\n\n                                <Route path={Details.subPaths.SCOPES} component={() => <Scope api={api} />} />\n                                <Route\n                                    path={Details.subPaths.SCOPES_PRODUCT}\n                                    component={() =>\n                                        <Scope api={api} />}\n                                />\n                                <Route path={Details.subPaths.DOCUMENTS} component={() => <Documents api={api} />} />\n                                <Route\n                                    path={Details.subPaths.DOCUMENTS_PRODUCT}\n                                    component={() => <Documents api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.SUBSCRIPTIONS}\n                                    component={() => <Subscriptions api={api} updateAPI={this.updateAPI} />}\n                                />\n                                <Route path={Details.subPaths.SECURITY} component={() => <Security api={api} />} />\n                                <Route path={Details.subPaths.COMMENTS} component={() => <Comments api={api} />} />\n                                <Route\n                                    path={Details.subPaths.BUSINESS_INFO}\n                                    component={() => <BusinessInformation api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.BUSINESS_INFO_PRODUCT}\n                                    component={() => <BusinessInformation api={api} />}\n                                />\n                                <Route path={Details.subPaths.PROPERTIES} component={() => <Properties api={api} />} />\n                                <Route\n                                    path={Details.subPaths.PROPERTIES_PRODUCT}\n                                    component={() => <Properties api={api} />}\n                                />\n                                <Route path={Details.subPaths.NEW_VERSION} component={() => <CreateNewVersion />} />\n                                <Route path={Details.subPaths.SUBSCRIPTIONS} component={() => <Subscriptions />} />\n                                <Route\n                                    path={Details.subPaths.MONETIZATION}\n                                    component={() => <Monetization api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.EXTERNAL_STORES}\n                                    component={ExternalStores}\n                                />\n                                <Route\n                                    path={Details.subPaths.MEDIATION_POLICIES}\n                                    component={() => <MediationPoliciesOverview api={api} />}\n                                />\n                            </Switch>\n                        </div>\n                    </div>\n                </APIProvider>\n            </React.Fragment>\n        );\n    }\n}\n\nDetails.contextType = AppContext;\n// Add your path here and refer it in above <Route/> component,\n// Paths that are not defined here will be returned with Not Found error\n// key name doesn't matter here, Use an appropriate name as the key\nDetails.subPaths = {\n    BASE: '/apis/:api_uuid',\n    BASE_PRODUCT: '/api-products/:apiprod_uuid',\n    OVERVIEW: '/apis/:api_uuid/overview',\n    OVERVIEW_PRODUCT: '/api-products/:apiprod_uuid/overview',\n    API_DEFINITION: '/apis/:api_uuid/api definition',\n    API_DEFINITION_PRODUCT: '/api-products/:apiprod_uuid/api definition',\n    SCHEMA_DEFINITION: '/apis/:api_uuid/schema definition',\n    LIFE_CYCLE: '/apis/:api_uuid/lifecycle',\n    CONFIGURATION: '/apis/:api_uuid/configuration',\n    CONFIGURATION_PRODUCT: '/api-products/:apiprod_uuid/configuration',\n    ENDPOINTS: '/apis/:api_uuid/endpoints',\n    ENVIRONMENTS: '/apis/:api_uuid/environments',\n    OPERATIONS: '/apis/:api_uuid/operations',\n    RESOURCES: '/apis/:api_uuid/resources',\n    RESOURCES_PRODUCT: '/api-products/:apiprod_uuid/resources',\n    RESOURCES_PRODUCT_EDIT: '/api-products/:apiprod_uuid/resources/edit',\n    SCOPES: '/apis/:api_uuid/scopes',\n    SCOPES_PRODUCT: '/api-products/:apiprod_uuid/scopes',\n    DOCUMENTS: '/apis/:api_uuid/documents',\n    DOCUMENTS_PRODUCT: '/api-products/:apiprod_uuid/documents',\n    SUBSCRIPTIONS: '/apis/:api_uuid/subscriptions',\n    SECURITY: '/apis/:api_uuid/security',\n    COMMENTS: '/apis/:api_uuid/comments',\n    BUSINESS_INFO: '/apis/:api_uuid/business info',\n    BUSINESS_INFO_PRODUCT: '/api-products/:apiprod_uuid/business info',\n    PROPERTIES: '/apis/:api_uuid/properties',\n    PROPERTIES_PRODUCT: '/api-products/:apiprod_uuid/properties',\n    NEW_VERSION: '/apis/:api_uuid/new_version',\n    MONETIZATION: '/apis/:api_uuid/monetization',\n    MEDIATION_POLICIES: '/apis/:api_uuid/Mediation Policies',\n    EXTERNAL_STORES: '/apis/:api_uuid/external-stores',\n};\n\n// To make sure that paths will not change by outsiders, Basically an enum\nObject.freeze(Details.paths);\n\nDetails.propTypes = {\n    classes: PropTypes.shape({\n        LeftMenu: PropTypes.string,\n        content: PropTypes.string,\n        leftLInkMain: PropTypes.string,\n        contentInside: PropTypes.string,\n    }).isRequired,\n    match: PropTypes.shape({\n        params: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.object,\n    }).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.object,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            leftMenuIconMainSize: PropTypes.number,\n        }),\n    }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(Details));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ApiCreate from './Create/ApiCreate';\nimport Listing from './Listing/Listing';\nimport Details from './Details/index';\n\nconst Apis = () => {\n    return (\n        <Switch>\n            <Route exact path='/apis' render={props => <Listing {...props} isAPIProduct={false} />} />\n            <Route exact path='/api-products' render={props => <Listing {...props} isAPIProduct />} />\n            <Route path='/apis/search' render={props => <Listing {...props} isAPIProduct={false} />} />\n            <Route path='/apis/create' component={ApiCreate} />\n            <Route path='/api-products/create' component={ApiCreate} />\n            <Route path='/apis/:apiUUID/' render={props => <Details {...props} isAPIProduct={false} />} />\n            <Route path='/api-products/:apiProdUUID/' render={props => <Details {...props} isAPIProduct />} />\n        </Switch>\n    );\n};\n\nexport default Apis;\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nconst styles = theme => ({\n    footer: {\n        backgroundColor: theme.palette.grey.A100,\n        paddingLeft: theme.spacing.unit * 3,\n        height: 50,\n        alignItems: 'center',\n        display: 'flex',\n    },\n});\nfunction Footer(props) {\n    const { classes } = props;\n    return (\n        <footer className={classes.footer}>\n            <Typography noWrap>\n                <FormattedMessage\n                    id='Base.Footer.Footer.product_details'\n                    defaultMessage='WSO2 APIM v3.0.0 | © 2019 WSO2 Inc'\n                />\n            </Typography>\n        </footer>\n    );\n}\nFooter.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(Footer);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Footer from './Footer/Footer';\n\nconst styles = theme => ({\n    appBar: {\n        position: 'relative',\n        background: theme.palette.background.appBar,\n    },\n    icon: {\n        marginRight: theme.spacing.unit * 2,\n    },\n    menuIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.appBar),\n        fontSize: 35,\n    },\n    userLink: {\n        color: theme.palette.getContrastText(theme.palette.background.appBar),\n    },\n    // Page layout styles\n    drawer: {\n        top: 64,\n    },\n    wrapper: {\n        minHeight: '100%',\n        marginBottom: -50,\n        background: '#d3d3d326',\n    },\n    contentWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        position: 'relative',\n        minHeight: 'calc(100vh - 114px)',\n    },\n    push: {\n        height: 50,\n    },\n    footer: {\n        backgroundColor: theme.palette.grey.A100,\n        paddingLeft: theme.spacing.unit * 3,\n        height: 50,\n        alignItems: 'center',\n        display: 'flex',\n    },\n    toolbar: {\n        minHeight: 56,\n        [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\n            minHeight: 48,\n        },\n        [theme.breakpoints.up('sm')]: {\n            minHeight: 64,\n        },\n    },\n});\n\n/**\n * Base Component for the publisher app\n * Adding a padding to Base container to avoid overlapping content with the Header AppBar\n * Following padding top values are based on material UI AppBar height parameters as described in here:\n * https://github.com/mui-org/material-ui/issues/10076#issuecomment-361232810\n * @class Layout\n * @extends {React.Component}\n */\nconst Base = ({ classes, children, header }) => {\n    return (\n        <Fragment>\n            <div className={classes.wrapper}>\n                {header}\n                <div className={classes.contentWrapper}>{children}</div>\n\n                <div className={classes.push} />\n            </div>\n            <Footer />\n        </Fragment>\n    );\n};\n\nBase.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    children: PropTypes.element.isRequired,\n    header: PropTypes.element.isRequired,\n};\n\nexport default withStyles(styles)(Base);\n","import React, { Component } from 'react';\nimport {\n    IconButton,\n    Popper,\n    Paper,\n    ClickAwayListener,\n    MenuItem,\n    MenuList,\n    Fade,\n    // ListItemIcon,\n    // ListItemText,\n    // Divider,\n} from '@material-ui/core';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n// import NightMode from '@material-ui/icons/Brightness2';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\n// import qs from 'qs';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nconst styles = theme => ({\n    profileMenu: {\n        zIndex: theme.zIndex.modal + 1,\n        paddingTop: '5px',\n    },\n    userLink: {\n        color: theme.palette.getContrastText(theme.palette.background.appBar),\n        fontSize: theme.typography.fontSize,\n        textTransform: 'uppercase',\n    },\n    accountIcon: {\n        marginRight: 10,\n    },\n});\n\n/**\n * Render the User Avatar with their name inside the Top AppBar component\n *\n * @class Avatar\n * @extends {Component}\n */\nclass Avatar extends Component {\n    /**\n     *Creates an instance of Avatar.\n     * @param {Object} props @inheritdoc\n     * @memberof Avatar\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            openMenu: false,\n            profileIcon: null,\n        };\n        this.toggleMenu = this.toggleMenu.bind(this);\n    }\n\n    /**\n     *\n     * Open and Close (Toggle) Avatar dropdown menu\n     * @param {React.SyntheticEvent} event `click` event on Avatar\n     * @memberof Avatar\n     */\n    toggleMenu(event) {\n        this.setState({\n            openMenu: !this.state.openMenu,\n            profileIcon: event.currentTarget,\n        });\n    }\n\n    /**\n     * Do OIDC logout redirection\n     * @param {React.SyntheticEvent} e Click event of the submit button\n     */\n    doOIDCLogout = (e) => {\n        e.preventDefault();\n        window.location = '/publisher-new/services/logout';\n    };\n\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof Avatar\n     */\n    render() {\n        const { classes, user } = this.props;\n        // const { pathname } = window.location;\n        // const params = qs.stringify({\n        //     referrer: pathname.split('/').reduce((acc, cv, ci) => (ci <= 1 ? '' : acc + '/' + cv)),\n        // });\n        const { openMenu, profileIcon } = this.state;\n        return (\n            <React.Fragment>\n                <IconButton\n                    id='profile-menu-btn'\n                    aria-owns='profile-menu-appbar'\n                    aria-haspopup='true'\n                    color='inherit'\n                    onClick={this.toggleMenu}\n                    className={classes.userLink}\n                >\n                    <AccountCircle className={classes.accountIcon} /> {user.name}\n                </IconButton>\n                <Popper className={classes.profileMenu} open={openMenu} anchorEl={profileIcon} transition>\n                    {({ TransitionProps }) => (\n                        <Fade in={openMenu} {...TransitionProps} id='profile-menu-appbar'>\n                            <Paper>\n                                <ClickAwayListener onClickAway={this.toggleMenu}>\n                                    <MenuList>\n                                        {/* TODO: uncomment when component run without errors */}\n                                        {/* <MenuItem onClick={this.toggleMenu}>Profile</MenuItem>\n                                         <MenuItem onClick={this.toggleMenu}>My account</MenuItem> */}\n                                        <Link to={{ pathname: '/services/logout' }}>\n                                            <MenuItem onClick={this.doOIDCLogout} id='logout'>\n                                                <FormattedMessage\n                                                    id='Base.Header.avatar.Avatar.logout'\n                                                    defaultMessage='Logout'\n                                                />\n                                            </MenuItem>\n                                        </Link>\n                                        {/* TODO: uncomment when component run without errors */}\n                                        {/* <Divider />\n                                         <MenuItem className={classes.menuItem} onClick={this.props.toggleTheme}>\n                                         <ListItemText primary='Night Mode' />\n                                         <ListItemIcon className={classes.icon}>\n                                         <NightMode />\n                                         </ListItemIcon>\n                                         </MenuItem> */}\n                                    </MenuList>\n                                </ClickAwayListener>\n                            </Paper>\n                        </Fade>\n                    )}\n                </Popper>\n            </React.Fragment>\n        );\n    }\n}\nAvatar.propTypes = {\n    classes: PropTypes.shape({\n        userLink: PropTypes.string,\n        profileMenu: PropTypes.string,\n        accountIcon: PropTypes.string,\n    }).isRequired,\n    user: PropTypes.shape({ name: PropTypes.string.isRequired }).isRequired,\n};\n\nexport default withStyles(styles)(Avatar);\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Divider from '@material-ui/core/Divider';\nimport Icon from '@material-ui/core/Icon';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchOutlined from '@material-ui/icons/SearchOutlined';\nimport { Link } from 'react-router-dom';\nimport ProductIcon from 'AppComponents/Shared/CustomIcon';\n\nimport API from 'AppData/api';\nimport SearchParser from './SearchParser';\n/* Utility methods defined here are described in\n * react-autosuggest documentation https://github.com/moroshko/react-autosuggest\n */\n\n/**\n *\n * @param {Object} inputProps Props given for the underline input element\n * @returns {React.Component} @inheritdoc\n */\nfunction renderInput(inputProps) {\n    const {\n        classes, ref, isLoading, onChange, ...other\n    } = inputProps; // `isLoading` has destructured here to prevent passing unintended prop to TextField\n    return (\n        <TextField\n            id='searchQuery'\n            InputProps={{\n                inputRef: ref,\n                className: classes.input,\n                classes: { focused: classes.inputFocused },\n                startAdornment: (\n                    <InputAdornment position='start'>\n                        <SearchOutlined />\n                    </InputAdornment>\n                ),\n                onChange,\n                ...other,\n            }}\n        />\n    );\n}\n\nfunction getPath(suggestion) {\n    switch (suggestion.type) {\n        case 'API':\n            return `/apis/${suggestion.id}/overview`;\n        case 'APIPRODUCT':\n            return `/api-products/${suggestion.id}/overview`;\n        default:\n            if (suggestion.associatedType === 'API') {\n                return `/apis/${suggestion.apiUUID}/documents/${suggestion.id}/details`;\n            } else {\n                return `/api-products/${suggestion.apiUUID}/documents/${suggestion.id}/details`;\n            }\n    }\n}\n\nfunction getArtifactMetaInfo(suggestion) {\n    switch (suggestion.type) {\n        case 'API':\n            return suggestion.version;\n        case 'APIPRODUCT':\n            return '';\n        default:\n            return suggestion.apiName + ' ' + suggestion.apiVersion;\n    }\n}\n\nfunction getIcon(type) {\n    switch (type) {\n        case 'API':\n            return <Icon style={{ fontSize: 30 }}>settings_applications</Icon>;\n        case 'APIPRODUCT':\n            return (<ProductIcon\n                width={16}\n                height={16}\n                icon='api-product'\n                strokeColor='#000000'\n            />);\n        default:\n            return <Icon style={{ fontSize: 30 }}>library_books</Icon>;\n    }\n}\n/**\n *\n * Use your imagination to define how suggestions are rendered.\n * @param {Object} suggestion This is either API object or document coming from search API call\n * @param {Object} { query, isHighlighted } query : User entered value\n * @returns {React.Component} @inheritdoc\n */\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\n    const matches = match(suggestion.name, query);\n    const parts = parse(suggestion.name, matches);\n    const path = getPath(suggestion);\n    const artifactMetaInfo = getArtifactMetaInfo(suggestion);\n    // TODO: Style the version ( and apiName if docs) apearing in the menu item\n\n    return (\n        <React.Fragment>\n            <Link to={path} style={{ color: 'black' }}>\n                <MenuItem selected={isHighlighted}>\n                    <ListItemIcon>\n                        {getIcon(suggestion.type)}\n                    </ListItemIcon>\n\n                    <ListItemText\n                        primary={parts.map((part, index) => {\n                            return part.highlight ? (\n                                <span key={String(index)} style={{ fontWeight: 500 }}>\n                                    {part.text}\n                                </span>\n                            ) : (\n                                <strong key={String(index)} style={{ fontWeight: 300 }}>\n                                    {part.text}\n                                </strong>\n                            );\n                        })}\n                        secondary={artifactMetaInfo}\n                    />\n                </MenuItem>\n            </Link>\n            <Divider />\n        </React.Fragment>\n    );\n}\n\n/**\n * When suggestion is clicked, Autosuggest needs to populate the input\n * based on the clicked suggestion. Teach Autosuggest how to calculate the input value for every given suggestion.\n *\n * @param {Object} suggestion API Object returned from APIS search api.list[]\n * @returns {String} API Name\n */\nfunction getSuggestionValue(suggestion) {\n    return suggestion.name;\n}\n\n/**\n * Build the search query from the user input\n * @param searchText\n * @returns {string}\n */\nfunction buildSearchQuery(searchText) {\n    const inputValue = searchText.trim().toLowerCase();\n    return SearchParser.parse(inputValue);\n}\n\n/**\n * Called for any input change to get the results set\n *\n * @param {String} value current value in input element\n * @returns {Promise} If no input text, return a promise which resolve to empty array, else return the API.all response\n */\nfunction getSuggestions(value) {\n    const modifiedSearchQuery = buildSearchQuery(value);\n\n    if (value.trim().length === 0 || !modifiedSearchQuery) {\n        return new Promise(resolve => resolve({ obj: { list: [] } }));\n    } else {\n        return API.search({ query: modifiedSearchQuery, limit: 8 });\n    }\n}\n\nexport { renderInput, renderSuggestion, getSuggestions, getSuggestionValue, buildSearchQuery };\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Autosuggest from 'react-autosuggest';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { injectIntl } from 'react-intl';\n\nimport { renderInput, renderSuggestion, getSuggestions, getSuggestionValue, buildSearchQuery } from './SearchUtils';\n\nconst styles = theme => ({\n    container: {\n        flexGrow: 2,\n    },\n    smContainer: {\n        position: 'absolute',\n    },\n    suggestionsContainerOpen: {\n        display: 'block',\n        position: 'absolute',\n        width: '415px',\n        zIndex: theme.zIndex.modal + 1,\n    },\n    suggestion: {\n        display: 'block',\n    },\n    suggestionsList: {\n        margin: 0,\n        padding: 0,\n        listStyleType: 'none',\n    },\n    input: {\n        width: '300px',\n        background: theme.palette.getContrastText(theme.palette.background.appBar),\n        '-webkit-transition': 'all .35s ease-in-out',\n        transition: 'all .35s ease-in-out',\n        padding: '5px 5px 5px 5px',\n    },\n    inputFocused: {\n        width: '400px',\n        background: theme.palette.getContrastText(theme.palette.background.appBar),\n        padding: '5px 5px 5px 5px',\n    },\n    searchBox: {\n        padding: '5px 5px 5px 5px',\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.main,\n        marginLeft: -50,\n    },\n});\n\n/**\n * Render search bar in top AppBar\n *\n * @class HeaderSearch\n * @extends {React.Component}\n */\nclass HeaderSearch extends React.Component {\n    /**\n     *Creates an instance of HeaderSearch.\n     * @param {Object} props @ignore\n     * @memberof HeaderSearch\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchText: '',\n            suggestions: [],\n            isLoading: false,\n        };\n        this.handleSuggestionsFetchRequested = this.handleSuggestionsFetchRequested.bind(this);\n        this.handleSuggestionsClearRequested = this.handleSuggestionsClearRequested.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.clearOnBlur = this.clearOnBlur.bind(this);\n        this.renderSuggestionsContainer = this.renderSuggestionsContainer.bind(this);\n        this.onSuggestionSelected = this.onSuggestionSelected.bind(this);\n    }\n    /**\n     * To provide accessibility for Enter key upon suggestion selection\n     * @param {React.SyntheticEvent} event event\n     * @param {Object} suggestion This is either API object or document coming from search API call\n     */\n    onSuggestionSelected(event, { suggestion }) {\n        this.suggestionSelected = true;\n        if (event.key === 'Enter') {\n            const path = suggestion.type === 'API' ? `/apis/${suggestion.id}/overview` :\n                `/apis/${suggestion.apiUUID}/documents/${suggestion.id}/details`;\n            this.props.history.push(path);\n        }\n    }\n\n    /**\n     * On enter pressed after giving a search text\n     * @param event\n     */\n    onKeyDown(event) {\n        if (event.key === 'Enter' && !this.suggestionSelected) {\n            const { history } = this.props;\n            history.push('/apis/search?query=' + buildSearchQuery(event.target.value));\n        }\n        this.suggestionSelected = false;\n    }\n\n    suggestionSelected = false;\n\n    /**\n     * On change search input element\n     *\n     * @param {React.SyntheticEvent} event ReactDOM event\n     * @param {String} { newValue } Changed value\n     * @memberof HeaderSearch\n     */\n    handleChange(event, { newValue }) {\n        this.setState({\n            searchText: newValue,\n        });\n    }\n\n    /**\n     * Fetch suggestions list for the user entered input value\n     *\n     * @param {String} { value }\n     * @memberof HeaderSearch\n     */\n    handleSuggestionsFetchRequested({ value }) {\n        this.setState({ isLoading: true });\n        getSuggestions(value).then((body) => {\n            this.setState({ isLoading: false, suggestions: body.obj.list });\n        });\n    }\n\n    /**\n     * Handle the suggestions clear Synthetic event\n     *\n     * @memberof HeaderSearch\n     */\n    handleSuggestionsClearRequested() {\n        this.setState({\n            suggestions: [],\n        });\n    }\n    /**\n     *\n     * When search input is focus out (Blur), Clear the input text to accept brand new search\n     * If Search input is show in responsive mode, On blur search input, hide the input element and show the search icon\n     * @memberof HeaderSearch\n     */\n    clearOnBlur() {\n        const { smSearch, toggleSmSearch } = this.props;\n        if (smSearch) {\n            toggleSmSearch();\n        } else {\n            this.setState({ searchText: '' });\n        }\n    }\n\n    /**\n     *\n     *\n     * @param {*} options\n     * @returns\n     * @memberof HeaderSearch\n     */\n    renderSuggestionsContainer(options) {\n        const { containerProps, children } = options;\n        const { isLoading } = this.state;\n        const { classes } = this.props;\n\n        return isLoading ? (\n            <CircularProgress size={24} className={classes.buttonProgress} />\n        ) : (\n            <Paper {...containerProps} square>\n                {children}\n            </Paper>\n        );\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof HeaderSearch\n     */\n    render() {\n        const { intl } = this.props;\n        const { classes, smSearch } = this.props;\n        const { searchText, isLoading } = this.state;\n        let autoFocus = false;\n        let responsiveContainer = classes.container;\n        if (smSearch) {\n            autoFocus = true;\n            responsiveContainer = classes.smContainer;\n        }\n        return (\n            <Autosuggest\n                theme={{\n                    container: responsiveContainer,\n                    suggestionsContainerOpen: classes.suggestionsContainerOpen,\n                    suggestionsList: classes.suggestionsList,\n                    suggestion: classes.suggestion,\n                }}\n                suggestions={this.state.suggestions}\n                renderInputComponent={renderInput}\n                onSuggestionsFetchRequested={this.handleSuggestionsFetchRequested}\n                onSuggestionsClearRequested={this.handleSuggestionsClearRequested}\n                getSuggestionValue={getSuggestionValue}\n                renderSuggestion={renderSuggestion}\n                renderSuggestionsContainer={this.renderSuggestionsContainer}\n                onSuggestionSelected={this.onSuggestionSelected}\n                inputProps={{\n                    autoFocus,\n                    classes,\n                    placeholder: intl.formatMessage({\n                        id: 'Base.Header.headersearch.HeaderSearch.search_api.tooltip',\n                        defaultMessage: 'Search APIs',\n                    }),\n                    value: searchText,\n                    onChange: this.handleChange,\n                    onKeyDown: this.onKeyDown,\n                    onBlur: this.clearOnBlur,\n                    isLoading,\n                }}\n            />\n        );\n    }\n}\n\nHeaderSearch.defaultProps = {\n    smSearch: false,\n    toggleSmSearch: undefined,\n};\nHeaderSearch.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    smSearch: PropTypes.bool,\n    toggleSmSearch: PropTypes.func,\n    history: PropTypes.shape({\n        push: PropTypes.func,\n    }).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default injectIntl(withRouter(withStyles(styles)(HeaderSearch)));\n\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport { ListItemIcon, List, withStyles, ListItem, ListItemText } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\n\nconst styles = theme => ({\n    listRoot: {\n        padding: 0,\n    },\n    listText: {\n        color: theme.palette.getContrastText(theme.palette.background.drawer),\n    },\n    listTextSmall: {\n        color: theme.palette.getContrastText(theme.palette.background.appBar),\n    },\n    smallIcon: {\n        marginRight: 5,\n        minWidth: 'auto',\n    },\n    links: {\n        display: 'flex',\n        height: 63,\n    },\n    selected: {\n        background: theme.palette.background.activeMenuItem,\n        alignItems: 'center',\n        textDecoration: 'none',\n        color: theme.palette.getContrastText(theme.palette.background.activeMenuItem),\n    },\n    selectedText: {\n        color: theme.palette.getContrastText(theme.palette.background.activeMenuItem),\n    },\n});\nfunction GlobalNavLinks(props) {\n    const [selected, setSelected] = useState('apis');\n    const {\n        classes, theme, smallView, history,\n    } = props;\n\n    const ditectCurrentMenu = (location) => {\n        const { pathname } = location;\n        if (/\\/apis$/g.test(pathname) || /\\/apis\\//g.test(pathname)) {\n            setSelected('apis');\n        } else if (/\\/api-products$/g.test(pathname) || /\\/api-products\\//g.test(pathname)) {\n            setSelected('api-products');\n        }\n    };\n    useEffect(() => {\n        const { location } = history;\n        ditectCurrentMenu(location);\n    }, []);\n    history.listen((location) => {\n        ditectCurrentMenu(location);\n    });\n    let strokeColor = theme.palette.getContrastText(theme.palette.background.leftMenu);\n    let iconWidth = 32;\n    if (smallView) {\n        iconWidth = 16;\n        strokeColor = theme.palette.getContrastText(theme.palette.background.appBar);\n    }\n    return (\n        <List className={classes.listRoot}>\n            <Link to='/apis' className={classNames({ [classes.selected]: selected === 'apis', [classes.links]: true })}>\n                <ListItem button>\n                    <ListItemIcon classes={{ root: classNames({ [classes.smallIcon]: smallView }) }}>\n                        <CustomIcon width={iconWidth} height={iconWidth} icon='api' strokeColor={strokeColor} />\n                    </ListItemIcon>\n                    <ListItemText\n                        classes={{\n                            primary: classNames({\n                                [classes.selectedText]: selected === 'apis',\n                                [classes.listText]: selected !== 'apis' && !smallView,\n                                [classes.listTextSmall]: selected !== 'apis' && smallView,\n                            }),\n                        }}\n                        primary={<FormattedMessage id='Base.Header.navbar.GlobalNavBar.apis' defaultMessage='APIs' />}\n                    />\n                </ListItem>\n            </Link>\n            <Link\n                to='/api-products'\n                className={classNames({ [classes.selected]: selected === 'api-products', [classes.links]: true })}\n            >\n                <ListItem button>\n                    <ListItemIcon classes={{ root: classNames({ [classes.smallIcon]: smallView }) }}>\n                        <CustomIcon width={iconWidth} height={iconWidth} icon='api-product' strokeColor={strokeColor} />\n                    </ListItemIcon>\n                    <ListItemText\n                        classes={{\n                            primary: classNames({\n                                [classes.selectedText]: selected === 'api-products',\n                                [classes.listText]: selected !== 'api-products' && !smallView,\n                                [classes.listTextSmall]: selected !== 'api-products' && smallView,\n                            }),\n                        }}\n                        primary={\n                            <FormattedMessage\n                                id='Base.Header.navbar.GlobalNavBar.api.products'\n                                defaultMessage='API Products'\n                            />\n                        }\n                    />\n                </ListItem>\n            </Link>\n        </List>\n    );\n}\nGlobalNavLinks.propTypes = {\n    classes: PropTypes.shape({\n        drawerStyles: PropTypes.string,\n        list: PropTypes.string,\n        listText: PropTypes.string,\n    }).isRequired,\n    theme: PropTypes.shape({\n        palette: PropTypes.shape({\n            getContrastText: PropTypes.func,\n            background: PropTypes.shape({\n                drawer: PropTypes.string,\n                leftMenu: PropTypes.string,\n            }),\n        }),\n    }).isRequired,\n    history: PropTypes.func.isRequired,\n    smallView: PropTypes.bool.isRequired,\n};\n\nexport default withRouter(withStyles(styles, { withTheme: true })(GlobalNavLinks));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Drawer, withStyles } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport Hidden from '@material-ui/core/Hidden';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport GlobalNavLinks from './GlobalNavLinks';\n\nconst styles = theme => ({\n    list: {\n        width: theme.custom.drawerWidth,\n    },\n    drawerStyles: {\n        top: 56, // Based on https://github.com/mui-org/material-ui/issues/10076#issuecomment-361232810\n        [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\n            top: 48,\n        },\n        [theme.breakpoints.up('sm')]: {\n            top: 64,\n        },\n    },\n    listText: {\n        color: theme.palette.getContrastText(theme.palette.background.drawer),\n    },\n    listInline: {\n        '& ul': {\n            display: 'flex',\n            flexDirection: 'row',\n        },\n    },\n});\nconst GlobalNavBar = (props) => {\n    const {\n        open, toggleGlobalNavBar, classes, theme,\n    } = props;\n\n    const commonStyle = {\n        style: { top: 64 },\n    };\n    const paperStyles = {\n        style: {\n            backgroundColor: theme.palette.background.drawer,\n            top: 64,\n        },\n    };\n    return (\n        <React.Fragment>\n            <Hidden smDown>\n                <VerticalDivider height={32} />\n                <div className={classes.listInline}>\n                    <GlobalNavLinks smallView />\n                </div>\n            </Hidden>\n            <Hidden mdUp>\n                <Drawer\n                    className={classes.drawerStyles}\n                    PaperProps={paperStyles}\n                    SlideProps={commonStyle}\n                    ModalProps={commonStyle}\n                    BackdropProps={commonStyle}\n                    open={open}\n                    onClose={toggleGlobalNavBar}\n                >\n                    <div tabIndex={0} role='button' onClick={toggleGlobalNavBar} onKeyDown={toggleGlobalNavBar}>\n                        <div className={classes.list} />\n                    </div>\n                    <div\n                        tabIndex={0}\n                        role='button'\n                        onClick={toggleGlobalNavBar}\n                        onKeyDown={toggleGlobalNavBar}\n                    >\n                        <div className={classes.list}>\n                            <GlobalNavLinks smallView={false} />\n                        </div>\n                    </div>\n                </Drawer>\n            </Hidden>\n        </React.Fragment>\n    );\n};\n\nGlobalNavBar.propTypes = {\n    open: PropTypes.bool.isRequired,\n    toggleGlobalNavBar: PropTypes.func.isRequired,\n    classes: PropTypes.shape({\n        drawerStyles: PropTypes.string,\n        list: PropTypes.string,\n        listText: PropTypes.string,\n    }).isRequired,\n    theme: PropTypes.shape({\n        palette: PropTypes.shape({\n            getContrastText: PropTypes.func,\n            background: PropTypes.shape({\n                drawer: PropTypes.string,\n                leftMenu: PropTypes.string,\n            }),\n        }),\n    }).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(GlobalNavBar);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { IconButton, Toolbar, AppBar } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/SearchOutlined';\nimport Hidden from '@material-ui/core/Hidden';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\n\nimport Avatar from './avatar/Avatar';\nimport HeaderSearch from './headersearch/HeaderSearch';\nimport GlobalNavBar from './navbar/GlobalNavBar';\n\nconst styles = theme => ({\n    appBar: {\n        // zIndex: theme.zIndex.modal + 1,\n        position: 'relative',\n        background: theme.palette.background.appBar,\n    },\n    typoRoot: {\n        marginLeft: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit * 3,\n        textTransform: 'capitalize',\n    },\n    brandLink: {\n        color: theme.palette.primary.contrastText,\n    },\n    toolbar: {\n        minHeight: 56,\n        [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\n            minHeight: 48,\n        },\n        [theme.breakpoints.up('sm')]: {\n            minHeight: 64,\n        },\n    },\n    menuIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.appBar),\n        fontSize: 35,\n    },\n});\n\n/**\n * Construct the Global AppBar header section\n * @class Header\n * @extends {React.Component}\n */\nclass Header extends React.Component {\n    /**\n     *Creates an instance of Header.\n     * @param {Object} props @inheritdoc\n     * @memberof Header\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            openNavBar: false,\n            smScreen: false,\n        };\n        this.toggleGlobalNavBar = this.toggleGlobalNavBar.bind(this);\n        this.toggleSmSearch = this.toggleSmSearch.bind(this);\n    }\n\n    /**\n     * Toggle the Global LHS Navbar visibility\n     *\n     * @memberof Header\n     */\n    toggleGlobalNavBar() {\n        this.setState({ openNavBar: !this.state.openNavBar });\n    }\n\n    /**\n     * Show search input in sm breakpoint or lower resolution\n     */\n    toggleSmSearch() {\n        this.setState({ smScreen: !this.state.smScreen });\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.ComponentClass} @inheritdoc\n     * @memberof Header\n     */\n    render() {\n        const { openNavBar, smScreen } = this.state;\n        const { classes, avatar, theme } = this.props;\n        return (\n            <React.Fragment>\n                <AppBar className={classes.appBar} position='fixed'>\n                    <Toolbar className={classes.toolbar}>\n                        <Hidden mdUp>\n                            <IconButton onClick={this.toggleGlobalNavBar}>\n                                <MenuIcon className={classes.menuIcon} />\n                            </IconButton>\n                        </Hidden>\n                        <Link to='/'>\n                            <img src={theme.custom.logo} alt={theme.custom.title} />\n                        </Link>\n                        <GlobalNavBar toggleGlobalNavBar={this.toggleGlobalNavBar} open={openNavBar} />\n                        <VerticalDivider height={32} />\n                        <Hidden smDown>\n                            <HeaderSearch />\n                        </Hidden>\n                        <Hidden mdUp>\n                            <IconButton onClick={this.toggleSmSearch} color='inherit'>\n                                <SearchIcon className={classes.menuIcon} />\n                            </IconButton>\n                            {smScreen && <HeaderSearch toggleSmSearch={this.toggleSmSearch} smSearch={smScreen} />}\n                        </Hidden>\n                        {avatar}\n                    </Toolbar>\n                </AppBar>\n            </React.Fragment>\n        );\n    }\n}\nHeader.defaultProps = {\n    avatar: <Avatar />,\n};\n\nHeader.propTypes = {\n    classes: PropTypes.shape({\n        appBar: PropTypes.string,\n        menuIcon: PropTypes.string,\n        toolbar: PropTypes.string,\n    }).isRequired,\n    avatar: PropTypes.element,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            logo: PropTypes.string,\n            title: PropTypes.string,\n        }),\n    }).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Header);\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Toolbar, AppBar } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport Footer from 'AppComponents/Base/Footer/Footer';\nimport { FormattedMessage } from 'react-intl';\n\nconst styles = theme => ({\n    appBar: {\n        zIndex: theme.zIndex.modal + 1,\n        position: 'relative',\n        background: theme.palette.background.appBar,\n    },\n    typoRoot: {\n        marginLeft: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit * 3,\n        textTransform: 'capitalize',\n    },\n    brandLink: {\n        color: theme.palette.primary.contrastText,\n    },\n    toolbar: {\n        minHeight: 56,\n        [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\n            minHeight: 48,\n        },\n        [theme.breakpoints.up('sm')]: {\n            minHeight: 64,\n        },\n    },\n    menuIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.appBar),\n        fontSize: 35,\n    },\n    errorDisplay: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n    },\n    errorDisplayContent: {\n        width: 960,\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'auto',\n    },\n    errorTitle: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n        '& h2': {\n            paddingLeft: theme.spacing.unit * 2,\n        },\n    },\n    link: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n});\n/**\n * Error boundary for the application.catch JavaScript errors anywhere in their child component tree,\n * log those errors, and display a fallback UI instead of the component tree that crashed.\n * Error boundaries catch errors during rendering, in lifecycle methods,\n * and in constructors of the whole tree below them.\n * @class AppErrorBoundary\n * @extends {Component}\n */\nclass AppErrorBoundary extends React.Component {\n    /**\n     * Creates an instance of AppErrorBoundary.\n     * @param {any} props @inheritDoc\n     * @memberof AppErrorBoundary\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false,\n        };\n    }\n\n    /**\n     * The componentDidCatch() method works like a JavaScript catch {} block, but for components.\n     * @param {Error} error is an error that has been thrown\n     * @param {Object} info info is an object with componentStack key. The property has information about component\n     * stack during thrown error.\n     * @memberof AppErrorBoundary\n     */\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true, error, info });\n    }\n\n    /**\n     * Return error handled UI\n     * @returns {React.Component} return react component\n     * @memberof AppErrorBoundary\n     */\n    render() {\n        const { hasError, error, info } = this.state;\n        const { children, classes, theme } = this.props;\n        const errorStackStyle = {\n            background: '#fff8dc',\n        };\n        if (hasError) {\n            return (\n                <React.Fragment>\n                    <AppBar className={classes.appBar} position='fixed'>\n                        <Toolbar className={classes.toolbar}>\n                            <div className={classes.errorDisplay} style={{ width: '100%' }}>\n                                <div className={classes.errorDisplayContent}>\n                                    <a href='/publisher-new'>\n                                        <img src={theme.custom.logo} alt={theme.custom.title} />\n                                    </a>\n                                </div>\n                            </div>\n                        </Toolbar>\n                    </AppBar>\n\n                    <div className={classes.errorDisplay}>\n                        <div className={classes.errorDisplayContent}>\n                            <div className={classes.errorTitle}>\n                                <img src='/publisher-new/site/public/images/robo.png' alt='OOPS' />\n                                <Typography variant='h2' gutterBottom>\n                                    <FormattedMessage\n                                        id='Apis.Shared.AppErrorBoundary.something.went.wrong'\n                                        defaultMessage='Something went wrong'\n                                    />\n                                </Typography>\n                            </div>\n                            <a href='/publisher-new/apis/'>\n                                <h3 className={classes.link}>API Listing</h3>\n                            </a>\n                        </div>\n                    </div>\n                    <div className={classes.errorDisplay}>\n                        <div className={classes.errorDisplayContent}>\n                            <h3 style={{ color: 'red' }}>{error.message}</h3>\n                            <pre style={errorStackStyle}>\n                                <u>{error.stack}</u>\n                            </pre>\n                            <pre style={errorStackStyle}>\n                                <u>{info.componentStack}</u>\n                            </pre>\n                        </div>\n                    </div>\n                    <Footer />\n                </React.Fragment>\n            );\n        } else {\n            return children;\n        }\n    }\n}\n\nAppErrorBoundary.propTypes = {\n    children: PropTypes.node.isRequired,\n    classes: PropTypes.shape({\n        appBar: PropTypes.string,\n        toolbar: PropTypes.string,\n        errorDisplay: PropTypes.string,\n        errorDisplayContent: PropTypes.string,\n        errorTitle: PropTypes.string,\n        link: PropTypes.string,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            logo: PropTypes.string,\n            title: PropTypes.string,\n        }),\n    }).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(AppErrorBoundary);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\n// import MaterialDesignCustomTheme from 'AppComponents/Shared/CustomTheme';\nimport { PageNotFound } from 'AppComponents/Base/Errors';\nimport Apis from 'AppComponents/Apis/Apis';\nimport Api from 'AppData/api';\nimport Base from 'AppComponents/Base';\nimport AuthManager from 'AppData/AuthManager';\nimport Header from 'AppComponents/Base/Header';\nimport Avatar from 'AppComponents/Base/Header/avatar/Avatar';\nimport Configurations from 'Config';\nimport AppErrorBoundary from 'AppComponents/Shared/AppErrorBoundary';\nimport RedirectToLogin from 'AppComponents/Shared/RedirectToLogin';\nimport { IntlProvider } from 'react-intl';\nimport { AppContextProvider } from 'AppComponents/Shared/AppContext';\n\nconst theme = createMuiTheme(Configurations.themes.light);\n\n/**\n * Language.\n * @type {string}\n */\nconst language = (navigator.languages && navigator.languages[0]) || navigator.language || navigator.userLanguage;\n\n/**\n * Render protected application paths, Implements container presenter pattern\n */\nexport default class Protected extends Component {\n    /**\n     * Creates an instance of Protected.\n     * @param {any} props @inheritDoc\n     * @memberof Protected\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            settings: null,\n        };\n        this.environments = [];\n    }\n\n    /**\n     * @inheritDoc\n     * @memberof Protected\n     */\n    componentDidMount() {\n        const user = AuthManager.getUser();\n        const api = new Api();\n        const settingPromise = api.getSettings();\n        if (user) {\n            this.setState({ user });\n            settingPromise.then(settingsNew => this.setState({ settings: settingsNew }));\n        } else {\n            // If no user data available , Get the user info from existing token information\n            // This could happen when OAuth code authentication took place and could send\n            // user information via redirection\n            const userPromise = AuthManager.getUserFromToken();\n            userPromise.then(loggedUser => this.setState({ user: loggedUser }));\n            settingPromise.then(settingsNew => this.setState({ settings: settingsNew }));\n        }\n    }\n\n    /**\n     * @returns {React.Component} @inheritDoc\n     * @memberof Protected\n     */\n    render() {\n        const user = this.state.user || AuthManager.getUser();\n        const header = <Header avatar={<Avatar user={user} />} user={user} />;\n        const { settings } = this.state;\n\n        if (!user) {\n            return (\n                <IntlProvider locale={language} messages={this.state.messages}>\n                    <RedirectToLogin />\n                </IntlProvider>\n            );\n        }\n        return (\n            settings && (\n                <AppContextProvider value={{ settings, user }}>\n                    <MuiThemeProvider theme={theme}>\n                        <AppErrorBoundary>\n                            <Base header={header}>\n                                <Switch>\n                                    <Redirect exact from='/' to='/apis' />\n                                    <Route path='/apis' component={Apis} />\n                                    <Route path='/api-products' component={Apis} />\n                                    <Route component={PageNotFound} />\n                                </Switch>\n                            </Base>\n                        </AppErrorBoundary>\n                    </MuiThemeProvider>\n                </AppContextProvider>\n            )\n        );\n    }\n}\n\nProtected.propTypes = {\n    user: PropTypes.shape({}).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n* Download a file\n* @param {any} response Response of download file\n*/\n// eslint-disable-next-line func-names\nconst downloadFile = function (response) {\n    let fileName = '';\n    const contentDisposition = response.headers['content-disposition'];\n\n    if (contentDisposition && contentDisposition.indexOf('attachment') !== -1) {\n        const fileNameReg = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n        const matches = fileNameReg.exec(contentDisposition);\n        if (matches != null && matches[1]) fileName = matches[1].replace(/['\"]/g, '');\n    }\n    const contentType = response.headers['content-type'];\n    const blob = new Blob([response.data], {\n        type: contentType,\n    });\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        window.navigator.msSaveBlob(blob, fileName);\n    } else {\n        const URL = window.URL || window.webkitURL;\n        const downloadUrl = URL.createObjectURL(blob);\n\n        if (fileName) {\n            const aTag = document.createElement('a');\n            if (typeof aTag.download === 'undefined') {\n                window.location = downloadUrl;\n            } else {\n                aTag.href = downloadUrl;\n                aTag.download = fileName;\n                document.body.appendChild(aTag);\n                aTag.click();\n            }\n        } else {\n            window.location = downloadUrl;\n        }\n\n        setTimeout(() => {\n            URL.revokeObjectURL(downloadUrl);\n        }, 100);\n    }\n};\nexports.downloadFile = downloadFile;\n"],"sourceRoot":""}